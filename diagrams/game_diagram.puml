@startuml
class "::std::is_same<Expected,nlohmann::detail::detected_t<nlohmann::detail::Op,Args...>>" as C_0010721189571204668386
class C_0010721189571204668386 {
__
}
class "::std::is_convertible<nlohmann::detail::detected_t<nlohmann::detail::Op,Args...>,To>" as C_0000157401203020024006
class C_0000157401203020024006 {
__
}
class "::std::integral_constant<bool,_Val>" as C_0005693795162955912923
class C_0005693795162955912923 {
__
}
class "::std::integral_constant<bool,is_basic_json<typename std::remove_cv<typename std::remove_pointer<BasicJsonContext>::type>::type>::value
    || std::is_same<BasicJsonContext, std::nullptr_t>::value>" as C_0013642952878925356216
class C_0013642952878925356216 {
__
}
class "::std::integral_constant<bool,is_detected<detect_key_compare, T>::value>" as C_0003084053961325032482
class C_0003084053961325032482 {
__
}
class "::std::char_traits<T>" as C_0012199749462782507116
class C_0012199749462782507116 {
__
}
class "::std::char_traits<char>" as C_0007500688229146332176
class C_0007500688229146332176 {
__
}
class "::std::integral_constant<bool,!B::value>" as C_0006882140556934702097
class C_0006882140556934702097 {
__
}
class "::std::is_default_constructible<T>" as C_0002868673885431900408
class C_0002868673885431900408 {
__
}
class "::std::pair<T1,T2>" as C_0016982316625589380753
class C_0016982316625589380753 {
__
}
class "::std::tuple<Ts...>" as C_0000577386121587834473
class C_0000577386121587834473 {
__
}
class "::std::is_constructible<T,Args...>" as C_0006231942436048517425
class C_0006231942436048517425 {
__
}
class "::std::enable_if_t<is_range<R>::value,nlohmann::detail::result_of_begin<decltype(std::declval<R &>())>>" as C_0013310657167928900126
class C_0013310657167928900126 {
__
}
class "::std::enable_if_t<is_range<R>::value,nlohmann::detail::result_of_begin<decltype(std::declval<T &>())>>" as C_0005041108964366183696
class C_0005041108964366183696 {
__
}
class "::std::tuple<Args...>" as C_0012376370878097263497
class C_0012376370878097263497 {
__
}
class "::std::integral_constant<bool,all_signed<Types...>::value || all_unsigned<Types...>::value>" as C_0002084124910633199012
class C_0002084124910633199012 {
__
}
class "::std::integral_constant<bool,(std::is_signed<OfType>::value && (sizeof(T) < sizeof(OfType)))
      || (same_sign<OfType, T>::value && sizeof(OfType) == sizeof(T))>" as C_0013396501588324484652
class C_0013396501588324484652 {
__
}
class "::std::integral_constant<bool,Value>" as C_0012138891406902323318
class C_0012138891406902323318 {
__
}
class "::std::allocator<char>" as C_0000465838628272370621
class C_0000465838628272370621 {
__
}
class "::std::string" as C_0005016775666417918015
class C_0005016775666417918015 {
__
}
class "::std::integral_constant<size_t,2>" as C_0017369468941188767729
class C_0017369468941188767729 {
__
}
class "::std::tuple_size" as C_0011604487065900561892
class C_0011604487065900561892 {
__
}
class "::std::tuple_size<nlohmann::detail::iteration_proxy_value<IteratorType>>" as C_0009711424578442486734
class C_0009711424578442486734 {
__
}
class "::std::tuple_element" as C_0003935756864860660895
class C_0003935756864860660895 {
__
}
class "::std::tuple_element<N,nlohmann::detail::iteration_proxy_value<IteratorType>>" as C_0000973234095023624561
class C_0000973234095023624561 {
__
}
class "::std::vector<bool>" as C_0004681541517896863531
class C_0004681541517896863531 {
__
}
class "::std::valarray<T>" as C_0011543961150843153272
class C_0011543961150843153272 {
__
}
class "::std::basic_istream<char,std::char_traits<char>>" as C_0001087849104505286381
class C_0001087849104505286381 {
__
}
class "::std::basic_streambuf<char,std::char_traits<char>>" as C_0012575143362383973559
class C_0012575143362383973559 {
__
}
class "::std::array<std::_Narrow_char_traits<char,int>::int_type,4>" as C_0009708838219533962414
class C_0009708838219533962414 {
__
}
class "::std::initializer_list<nlohmann::detail::lexer::char_int_type>" as C_0008690956490312094608
class C_0008690956490312094608 {
__
}
class "::std::vector<nlohmann::detail::lexer::char_type>" as C_0008504387209493554632
class C_0008504387209493554632 {
__
}
class "::std::vector<BasicJsonType *>" as C_0012030889513779630167
class C_0012030889513779630167 {
__
}
class "::std::vector<size_t>" as C_0003909645558821825749
class C_0003909645558821825749 {
__
}
class "::std::pair<size_t,nlohmann::detail::binary_reader::char_int_type>" as C_0006742083008504437096
class C_0006742083008504437096 {
__
}
class "::std::function<bool(int,nlohmann::detail::parse_event_t,BasicJsonType &)>" as C_0012146279838641130751
class C_0012146279838641130751 {
__
}
class "::std::reverse_iterator<Base>" as C_0002251148418378457086
class C_0002251148418378457086 {
__
}
class "::std::vector<nlohmann::json_pointer::string_t>" as C_0006589068466735280940
class C_0006589068466735280940 {
__
}
class "::std::initializer_list<json_ref<type-parameter-0-0>>" as C_0000419644643929801013
class C_0000419644643929801013 {
__
}
class "::std::shared_ptr<nlohmann::detail::output_adapter_protocol<CharType>>" as C_0013429388319311956826
class C_0013429388319311956826 {
__
}
class "::std::vector<CharType,AllocatorType>" as C_0002773375681775429756
class C_0002773375681775429756 {
__
}
class "::std::basic_ostream<CharType>" as C_0015967736637693129920
class C_0015967736637693129920 {
__
}
class "::std::shared_ptr<nlohmann::detail::output_adapter_protocol<char>>" as C_0004637133333771533466
class C_0004637133333771533466 {
__
}
class "::std::array<char,64>" as C_0007860569071261935889
class C_0007860569071261935889 {
__
}
class "::std::array<char,512>" as C_0017721794980909395697
class C_0017721794980909395697 {
__
}
class "::std::initializer_list<nlohmann::ordered_map::value_type>" as C_0009312110998106448030
class C_0009312110998106448030 {
__
}
class "::std::pair<nlohmann::ordered_map::iterator,bool>" as C_0010807373858847751275
class C_0010807373858847751275 {
__
}
class "::std::equal_to" as C_0001821783643868846346
class C_0001821783643868846346 {
__
}
class "::std::pair<Key const,T>" as C_0013712950298701420196
class C_0013712950298701420196 {
__
}
class "::std::vector<std::pair<Key const,T>,Allocator>" as C_0007136916555410065119
class C_0007136916555410065119 {
__
}
class "::std::initializer_list<nlohmann::detail::json_ref<basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>>>" as C_0001857228505817034097
class C_0001857228505817034097 {
__
}
class "::std::less" as C_0001949509976487175871
class C_0001949509976487175871 {
+operator()(nlohmann::detail::value_t lhs, nlohmann::detail::value_t rhs) const noexcept : bool
__
}
class "::std::pair<StringType const,basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>>" as C_0017651518510739067146
class C_0017651518510739067146 {
__
}
class "::std::function<bool(int,nlohmann::detail::parse_event_t,basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> &)>" as C_0006952070549948403239
class C_0006952070549948403239 {
__
}
class "::std::vector<uint8_t>" as C_0007888167979440707716
class C_0007888167979440707716 {
__
}
class "::std::conditional<detail::is_c_string_uncvref<ValueType>::value,nlohmann::basic_json::string_t,typename std::decay<ValueType>::type>" as C_0017564160194857778554
class C_0017564160194857778554 {
__
}
class "::std::hash" as C_0004412474424553115274
class C_0004412474424553115274 {
+operator()(const nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & j) const : std::size_t
__
}
class "::std::hash<nlohmann::basic_json<(anonymous),(anonymous),StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,(anonymous),(anonymous),BinaryType,CustomBaseClass>>" as C_0011537571081538914342
class C_0011537571081538914342 {
+operator()(const nlohmann::basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & j) const : std::size_t
__
}
class "::std::less<nlohmann::detail::value_t>" as C_0004932804944914206587
class C_0004932804944914206587 {
+operator()(nlohmann::detail::value_t lhs, nlohmann::detail::value_t rhs) const noexcept : bool
__
}
class "::std::vector<json11::Json>" as C_0009469813100910385165
class C_0009469813100910385165 {
__
}
class "::std::map<std::string,json11::Json>" as C_0005373926085159347220
class C_0005373926085159347220 {
__
}
class "::std::pair<std::string,json11::Json::Type>" as C_0014021518406996724918
class C_0014021518406996724918 {
__
}
class "::std::initializer_list<std::pair<std::string,json11::Json::Type>>" as C_0004751179184290925068
class C_0004751179184290925068 {
__
}
class "::std::shared_ptr<json11::JsonValue>" as C_0006262795933763600673
class C_0006262795933763600673 {
__
}
class "::std::basic_string_view<char>" as C_0012008603185729621422
class C_0012008603185729621422 {
__
}
class "::std::vector<uint32_t>" as C_0016534568085049769217
class C_0016534568085049769217 {
__
}
class "::std::vector<std::string>" as C_0008261390615332338001
class C_0008261390615332338001 {
__
}
class "::std::unique_ptr<tson::IDecompressor<std::basic_string_view<char>,std::string>>" as C_0000425764360988984212
class C_0000425764360988984212 {
__
}
class "::std::vector<std::unique_ptr<tson::IDecompressor<std::basic_string_view<char>,std::string>>>" as C_0004451472350829367732
class C_0004451472350829367732 {
__
}
class "::std::basic_streambuf<char>" as C_0005399940248739438556
class C_0005399940248739438556 {
__
}
class "::std::unique_ptr<tson::IJson>" as C_0006274273039095426313
class C_0006274273039095426313 {
__
}
class "::std::vector<std::unique_ptr<tson::IJson>>" as C_0009449444825786705411
class C_0009449444825786705411 {
__
}
class "::std::unique_ptr<nlohmann::basic_json>" as C_0008088278790263755080
class C_0008088278790263755080 {
__
}
class "::std::map<std::string,std::unique_ptr<tson::IJson>>" as C_0015028344148724283634
class C_0015028344148724283634 {
__
}
class "::std::map<size_t,std::unique_ptr<tson::IJson>>" as C_0002716708038493951524
class C_0002716708038493951524 {
__
}
class "::std::map<std::string,std::vector<std::unique_ptr<tson::IJson>>>" as C_0008985444703594249706
class C_0008985444703594249706 {
__
}
class "::std::unique_ptr<json11::Json>" as C_0012267814618520699680
class C_0012267814618520699680 {
__
}
class "::std::vector<int>" as C_0017563173931554010774
class C_0017563173931554010774 {
__
}
class "::std::map<std::string,tson::Property>" as C_0013596383218836329341
class C_0013596383218836329341 {
__
}
class "::std::vector<Property *>" as C_0007380866656444562374
class C_0007380866656444562374 {
__
}
class "::std::vector<tson::Vector2<int>>" as C_0017246210088862330063
class C_0017246210088862330063 {
__
}
class "::std::shared_ptr<tson::TiledClass>" as C_0011227983858338760388
class C_0011227983858338760388 {
__
}
class "::std::tuple<int,int>" as C_0007332477790878163014
class C_0007332477790878163014 {
__
}
class "::std::vector<tson::Chunk>" as C_0004305701722710513442
class C_0004305701722710513442 {
__
}
class "::std::vector<tson::Layer>" as C_0000543266056686132830
class C_0000543266056686132830 {
__
}
class "::std::vector<tson::Object>" as C_0009770715339548071146
class C_0009770715339548071146 {
__
}
class "::std::map<std::tuple<int,int>,tson::Tile *>" as C_0014610946801821189157
class C_0014610946801821189157 {
__
}
class "::std::map<std::tuple<int,int>,tson::TileObject>" as C_0014717069890754810978
class C_0014717069890754810978 {
__
}
class "::std::set<uint32_t>" as C_0001565176372607874402
class C_0001565176372607874402 {
__
}
class "::std::map<uint32_t,tson::Tile *>" as C_0010442859391214764574
class C_0010442859391214764574 {
__
}
class "::std::vector<tson::FlaggedTile>" as C_0010462613430467277479
class C_0010462613430467277479 {
__
}
class "::std::vector<tson::WangTile>" as C_0003945411792173323474
class C_0003945411792173323474 {
__
}
class "::std::vector<tson::WangColor>" as C_0014128386234649786263
class C_0014128386234649786263 {
__
}
class "::std::vector<tson::Frame>" as C_0010909541024054101114
class C_0010909541024054101114 {
__
}
class "::std::vector<tson::Tile>" as C_0003526413598904348739
class C_0003526413598904348739 {
__
}
class "::std::vector<tson::WangSet>" as C_0014266772710739956910
class C_0014266772710739956910 {
__
}
class "::std::vector<tson::Terrain>" as C_0013450546981812569790
class C_0013450546981812569790 {
__
}
class "::std::function<std::unique_ptr<tson::IJson>(std::string)>" as C_0005469546519486081481
class C_0005469546519486081481 {
__
}
class "::std::vector<tson::Tileset>" as C_0002763124092157057105
class C_0002763124092157057105 {
__
}
class "::std::map<uint32_t,tson::Tile>" as C_0018138269842875670596
class C_0018138269842875670596 {
__
}
class "::std::map<uint32_t,std::string>" as C_0006281574694497908084
class C_0006281574694497908084 {
__
}
class "::std::vector<tson::WorldMapData>" as C_0016790823703191945353
class C_0016790823703191945353 {
__
}
class "::std::unique_ptr<tson::Map>" as C_0009094415260374702324
class C_0009094415260374702324 {
__
}
class "::std::vector<std::unique_ptr<tson::Map>>" as C_0004707751765148010508
class C_0004707751765148010508 {
__
}
class "::std::vector<tson::EnumDefinition>" as C_0003148079142656508199
class C_0003148079142656508199 {
__
}
class "::std::vector<tson::TiledClass>" as C_0018000785385595707135
class C_0018000785385595707135 {
__
}
class "::std::vector<tson::ProjectFolder>" as C_0018123891982449758422
class C_0018123891982449758422 {
__
}
class "::std::vector<std::filesystem::path>" as C_0006203900530713581334
class C_0006203900530713581334 {
__
}
class "::std::unique_ptr<tson::IDecompressor<std::vector<uint8_t>,std::vector<uint8_t>>>" as C_0009737170254010036179
class C_0009737170254010036179 {
__
}
class "::std::vector<Rectangle>" as C_0013423887851051587010
class C_0013423887851051587010 {
__
}
class "::std::shared_ptr<IBlockBehavior>" as C_0017426112952059578590
class C_0017426112952059578590 {
__
}
class "::std::vector<StartEndFrame>" as C_0017410715323976282491
class C_0017410715323976282491 {
__
}
class "::std::vector<Button *>" as C_0015823698952731764909
class C_0015823698952731764909 {
__
}
class "::std::vector<Scene *>" as C_0002079836018563423199
class C_0002079836018563423199 {
__
}
class "::Vector2" as C_0007466804955052523504
class C_0007466804955052523504 {
__
+x : float
+y : float
}
class "::Vector3" as C_0007466806054564151715
class C_0007466806054564151715 {
__
+x : float
+y : float
+z : float
}
class "::Vector4" as C_0007466811552122292770
class C_0007466811552122292770 {
__
+w : float
+x : float
+y : float
+z : float
}
class "::Matrix" as C_0005880231545924887180
class C_0005880231545924887180 {
__
+m0 : float
+m1 : float
+m10 : float
+m11 : float
+m12 : float
+m13 : float
+m14 : float
+m15 : float
+m2 : float
+m3 : float
+m4 : float
+m5 : float
+m6 : float
+m7 : float
+m8 : float
+m9 : float
}
class "::Color" as C_0003769135706557701272
class C_0003769135706557701272 {
__
+a : unsigned char
+b : unsigned char
+g : unsigned char
+r : unsigned char
}
class "::Rectangle" as C_0006704562279895895086
class C_0006704562279895895086 {
__
+height : float
+width : float
+x : float
+y : float
}
class "::Image" as C_0004437164841514963962
class C_0004437164841514963962 {
__
+data : void *
+format : int
+height : int
+mipmaps : int
+width : int
}
class "::Texture" as C_0002829778445906215252
class C_0002829778445906215252 {
__
+format : int
+height : int
+id : unsigned int
+mipmaps : int
+width : int
}
class "::RenderTexture" as C_0007695516680691413852
class C_0007695516680691413852 {
__
+depth : Texture
+id : unsigned int
+texture : Texture
}
class "::NPatchInfo" as C_0012436876678621804533
class C_0012436876678621804533 {
__
+bottom : int
+layout : int
+left : int
+right : int
+source : Rectangle
+top : int
}
class "::GlyphInfo" as C_0004579556397822098501
class C_0004579556397822098501 {
__
+advanceX : int
+image : Image
+offsetX : int
+offsetY : int
+value : int
}
class "::Font" as C_0000548585405462816752
class C_0000548585405462816752 {
__
+baseSize : int
+glyphCount : int
+glyphPadding : int
+glyphs : GlyphInfo *
+recs : Rectangle *
+texture : Texture2D
}
class "::Camera3D" as C_0018023374781402817305
class C_0018023374781402817305 {
__
+fovy : float
+position : Vector3
+projection : int
+target : Vector3
+up : Vector3
}
class "::Camera2D" as C_0018022558943774873968
class C_0018022558943774873968 {
__
+offset : Vector2
+rotation : float
+target : Vector2
+zoom : float
}
class "::Mesh" as C_0007904390942753393308
class C_0007904390942753393308 {
__
+animNormals : float *
+animVertices : float *
+boneCount : int
+boneIds : unsigned char *
+boneMatrices : Matrix *
+boneWeights : float *
+colors : unsigned char *
+indices : unsigned short *
+normals : float *
+tangents : float *
+texcoords : float *
+texcoords2 : float *
+triangleCount : int
+vaoId : unsigned int
+vboId : unsigned int *
+vertexCount : int
+vertices : float *
}
class "::Shader" as C_0003541022837009731048
class C_0003541022837009731048 {
__
+id : unsigned int
+locs : int *
}
class "::MaterialMap" as C_0016677124665577361846
class C_0016677124665577361846 {
__
+color : Color
+texture : Texture2D
+value : float
}
class "::Material" as C_0012798265388312005056
class C_0012798265388312005056 {
__
+maps : MaterialMap *
+params : float[4]
+shader : Shader
}
class "::Transform" as C_0013979161094353040123
class C_0013979161094353040123 {
__
+rotation : Quaternion
+scale : Vector3
+translation : Vector3
}
class "::BoneInfo" as C_0005178967734718457531
class C_0005178967734718457531 {
__
+name : char[32]
+parent : int
}
class "::Model" as C_0006747846868581204634
class C_0006747846868581204634 {
__
+bindPose : Transform *
+boneCount : int
+bones : BoneInfo *
+materialCount : int
+materials : Material *
+meshCount : int
+meshMaterial : int *
+meshes : Mesh *
+transform : Matrix
}
class "::ModelAnimation" as C_0015277996015078665016
class C_0015277996015078665016 {
__
+boneCount : int
+bones : BoneInfo *
+frameCount : int
+framePoses : Transform **
+name : char[32]
}
class "::Ray" as C_0011529174475785917375
class C_0011529174475785917375 {
__
+direction : Vector3
+position : Vector3
}
class "::RayCollision" as C_0004815296406693434961
class C_0004815296406693434961 {
__
+distance : float
+hit : bool
+normal : Vector3
+point : Vector3
}
class "::BoundingBox" as C_0005040313359001167082
class C_0005040313359001167082 {
__
+max : Vector3
+min : Vector3
}
class "::Wave" as C_0009852124472013661076
class C_0009852124472013661076 {
__
+channels : unsigned int
+data : void *
+frameCount : unsigned int
+sampleRate : unsigned int
+sampleSize : unsigned int
}
class "::AudioStream" as C_0009667710944128642529
class C_0009667710944128642529 {
__
+buffer : rAudioBuffer *
+channels : unsigned int
+processor : rAudioProcessor *
+sampleRate : unsigned int
+sampleSize : unsigned int
}
class "::Sound" as C_0002707737354266497140
class C_0002707737354266497140 {
__
+frameCount : unsigned int
+stream : AudioStream
}
class "::Music" as C_0011286991148568927572
class C_0011286991148568927572 {
__
+ctxData : void *
+ctxType : int
+frameCount : unsigned int
+looping : bool
+stream : AudioStream
}
class "::VrDeviceInfo" as C_0012317037454897759003
class C_0012317037454897759003 {
__
+chromaAbCorrection : float[4]
+eyeToScreenDistance : float
+hResolution : int
+hScreenSize : float
+interpupillaryDistance : float
+lensDistortionValues : float[4]
+lensSeparationDistance : float
+vResolution : int
+vScreenSize : float
}
class "::VrStereoConfig" as C_0015679324570162643259
class C_0015679324570162643259 {
__
+leftLensCenter : float[2]
+leftScreenCenter : float[2]
+projection : Matrix[2]
+rightLensCenter : float[2]
+rightScreenCenter : float[2]
+scale : float[2]
+scaleIn : float[2]
+viewOffset : Matrix[2]
}
class "::FilePathList" as C_0000694717421116449996
class C_0000694717421116449996 {
__
+capacity : unsigned int
+count : unsigned int
+paths : char **
}
class "::AutomationEvent" as C_0010451467804620097830
class C_0010451467804620097830 {
__
+frame : unsigned int
+params : int[4]
+type : unsigned int
}
class "::AutomationEventList" as C_0012145597129679246514
class C_0012145597129679246514 {
__
+capacity : unsigned int
+count : unsigned int
+events : AutomationEvent *
}
enum "::ConfigFlags" as C_0004078600331033873758
enum C_0004078600331033873758 {
FLAG_VSYNC_HINT
FLAG_FULLSCREEN_MODE
FLAG_WINDOW_RESIZABLE
FLAG_WINDOW_UNDECORATED
FLAG_WINDOW_HIDDEN
FLAG_WINDOW_MINIMIZED
FLAG_WINDOW_MAXIMIZED
FLAG_WINDOW_UNFOCUSED
FLAG_WINDOW_TOPMOST
FLAG_WINDOW_ALWAYS_RUN
FLAG_WINDOW_TRANSPARENT
FLAG_WINDOW_HIGHDPI
FLAG_WINDOW_MOUSE_PASSTHROUGH
FLAG_BORDERLESS_WINDOWED_MODE
FLAG_MSAA_4X_HINT
FLAG_INTERLACED_HINT
}
enum "::TraceLogLevel" as C_0016085672269684094010
enum C_0016085672269684094010 {
LOG_ALL
LOG_TRACE
LOG_DEBUG
LOG_INFO
LOG_WARNING
LOG_ERROR
LOG_FATAL
LOG_NONE
}
enum "::KeyboardKey" as C_0009959689947754870771
enum C_0009959689947754870771 {
KEY_NULL
KEY_APOSTROPHE
KEY_COMMA
KEY_MINUS
KEY_PERIOD
KEY_SLASH
KEY_ZERO
KEY_ONE
KEY_TWO
KEY_THREE
KEY_FOUR
KEY_FIVE
KEY_SIX
KEY_SEVEN
KEY_EIGHT
KEY_NINE
KEY_SEMICOLON
KEY_EQUAL
KEY_A
KEY_B
KEY_C
KEY_D
KEY_E
KEY_F
KEY_G
KEY_H
KEY_I
KEY_J
KEY_K
KEY_L
KEY_M
KEY_N
KEY_O
KEY_P
KEY_Q
KEY_R
KEY_S
KEY_T
KEY_U
KEY_V
KEY_W
KEY_X
KEY_Y
KEY_Z
KEY_LEFT_BRACKET
KEY_BACKSLASH
KEY_RIGHT_BRACKET
KEY_GRAVE
KEY_SPACE
KEY_ESCAPE
KEY_ENTER
KEY_TAB
KEY_BACKSPACE
KEY_INSERT
KEY_DELETE
KEY_RIGHT
KEY_LEFT
KEY_DOWN
KEY_UP
KEY_PAGE_UP
KEY_PAGE_DOWN
KEY_HOME
KEY_END
KEY_CAPS_LOCK
KEY_SCROLL_LOCK
KEY_NUM_LOCK
KEY_PRINT_SCREEN
KEY_PAUSE
KEY_F1
KEY_F2
KEY_F3
KEY_F4
KEY_F5
KEY_F6
KEY_F7
KEY_F8
KEY_F9
KEY_F10
KEY_F11
KEY_F12
KEY_LEFT_SHIFT
KEY_LEFT_CONTROL
KEY_LEFT_ALT
KEY_LEFT_SUPER
KEY_RIGHT_SHIFT
KEY_RIGHT_CONTROL
KEY_RIGHT_ALT
KEY_RIGHT_SUPER
KEY_KB_MENU
KEY_KP_0
KEY_KP_1
KEY_KP_2
KEY_KP_3
KEY_KP_4
KEY_KP_5
KEY_KP_6
KEY_KP_7
KEY_KP_8
KEY_KP_9
KEY_KP_DECIMAL
KEY_KP_DIVIDE
KEY_KP_MULTIPLY
KEY_KP_SUBTRACT
KEY_KP_ADD
KEY_KP_ENTER
KEY_KP_EQUAL
KEY_BACK
KEY_MENU
KEY_VOLUME_UP
KEY_VOLUME_DOWN
}
enum "::MouseButton" as C_0003698408625351675296
enum C_0003698408625351675296 {
MOUSE_BUTTON_LEFT
MOUSE_BUTTON_RIGHT
MOUSE_BUTTON_MIDDLE
MOUSE_BUTTON_SIDE
MOUSE_BUTTON_EXTRA
MOUSE_BUTTON_FORWARD
MOUSE_BUTTON_BACK
}
enum "::MouseCursor" as C_0007178033907805459382
enum C_0007178033907805459382 {
MOUSE_CURSOR_DEFAULT
MOUSE_CURSOR_ARROW
MOUSE_CURSOR_IBEAM
MOUSE_CURSOR_CROSSHAIR
MOUSE_CURSOR_POINTING_HAND
MOUSE_CURSOR_RESIZE_EW
MOUSE_CURSOR_RESIZE_NS
MOUSE_CURSOR_RESIZE_NWSE
MOUSE_CURSOR_RESIZE_NESW
MOUSE_CURSOR_RESIZE_ALL
MOUSE_CURSOR_NOT_ALLOWED
}
enum "::GamepadButton" as C_0000925837075520319804
enum C_0000925837075520319804 {
GAMEPAD_BUTTON_UNKNOWN
GAMEPAD_BUTTON_LEFT_FACE_UP
GAMEPAD_BUTTON_LEFT_FACE_RIGHT
GAMEPAD_BUTTON_LEFT_FACE_DOWN
GAMEPAD_BUTTON_LEFT_FACE_LEFT
GAMEPAD_BUTTON_RIGHT_FACE_UP
GAMEPAD_BUTTON_RIGHT_FACE_RIGHT
GAMEPAD_BUTTON_RIGHT_FACE_DOWN
GAMEPAD_BUTTON_RIGHT_FACE_LEFT
GAMEPAD_BUTTON_LEFT_TRIGGER_1
GAMEPAD_BUTTON_LEFT_TRIGGER_2
GAMEPAD_BUTTON_RIGHT_TRIGGER_1
GAMEPAD_BUTTON_RIGHT_TRIGGER_2
GAMEPAD_BUTTON_MIDDLE_LEFT
GAMEPAD_BUTTON_MIDDLE
GAMEPAD_BUTTON_MIDDLE_RIGHT
GAMEPAD_BUTTON_LEFT_THUMB
GAMEPAD_BUTTON_RIGHT_THUMB
}
enum "::GamepadAxis" as C_0014351205388947519593
enum C_0014351205388947519593 {
GAMEPAD_AXIS_LEFT_X
GAMEPAD_AXIS_LEFT_Y
GAMEPAD_AXIS_RIGHT_X
GAMEPAD_AXIS_RIGHT_Y
GAMEPAD_AXIS_LEFT_TRIGGER
GAMEPAD_AXIS_RIGHT_TRIGGER
}
enum "::MaterialMapIndex" as C_0015141563813788546010
enum C_0015141563813788546010 {
MATERIAL_MAP_ALBEDO
MATERIAL_MAP_METALNESS
MATERIAL_MAP_NORMAL
MATERIAL_MAP_ROUGHNESS
MATERIAL_MAP_OCCLUSION
MATERIAL_MAP_EMISSION
MATERIAL_MAP_HEIGHT
MATERIAL_MAP_CUBEMAP
MATERIAL_MAP_IRRADIANCE
MATERIAL_MAP_PREFILTER
MATERIAL_MAP_BRDF
}
enum "::ShaderLocationIndex" as C_0014543205922678839813
enum C_0014543205922678839813 {
SHADER_LOC_VERTEX_POSITION
SHADER_LOC_VERTEX_TEXCOORD01
SHADER_LOC_VERTEX_TEXCOORD02
SHADER_LOC_VERTEX_NORMAL
SHADER_LOC_VERTEX_TANGENT
SHADER_LOC_VERTEX_COLOR
SHADER_LOC_MATRIX_MVP
SHADER_LOC_MATRIX_VIEW
SHADER_LOC_MATRIX_PROJECTION
SHADER_LOC_MATRIX_MODEL
SHADER_LOC_MATRIX_NORMAL
SHADER_LOC_VECTOR_VIEW
SHADER_LOC_COLOR_DIFFUSE
SHADER_LOC_COLOR_SPECULAR
SHADER_LOC_COLOR_AMBIENT
SHADER_LOC_MAP_ALBEDO
SHADER_LOC_MAP_METALNESS
SHADER_LOC_MAP_NORMAL
SHADER_LOC_MAP_ROUGHNESS
SHADER_LOC_MAP_OCCLUSION
SHADER_LOC_MAP_EMISSION
SHADER_LOC_MAP_HEIGHT
SHADER_LOC_MAP_CUBEMAP
SHADER_LOC_MAP_IRRADIANCE
SHADER_LOC_MAP_PREFILTER
SHADER_LOC_MAP_BRDF
SHADER_LOC_VERTEX_BONEIDS
SHADER_LOC_VERTEX_BONEWEIGHTS
SHADER_LOC_BONE_MATRICES
}
enum "::ShaderUniformDataType" as C_0011276548471475496912
enum C_0011276548471475496912 {
SHADER_UNIFORM_FLOAT
SHADER_UNIFORM_VEC2
SHADER_UNIFORM_VEC3
SHADER_UNIFORM_VEC4
SHADER_UNIFORM_INT
SHADER_UNIFORM_IVEC2
SHADER_UNIFORM_IVEC3
SHADER_UNIFORM_IVEC4
SHADER_UNIFORM_SAMPLER2D
}
enum "::ShaderAttributeDataType" as C_0006174720713006159768
enum C_0006174720713006159768 {
SHADER_ATTRIB_FLOAT
SHADER_ATTRIB_VEC2
SHADER_ATTRIB_VEC3
SHADER_ATTRIB_VEC4
}
enum "::PixelFormat" as C_0006435826750284431040
enum C_0006435826750284431040 {
PIXELFORMAT_UNCOMPRESSED_GRAYSCALE
PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA
PIXELFORMAT_UNCOMPRESSED_R5G6B5
PIXELFORMAT_UNCOMPRESSED_R8G8B8
PIXELFORMAT_UNCOMPRESSED_R5G5B5A1
PIXELFORMAT_UNCOMPRESSED_R4G4B4A4
PIXELFORMAT_UNCOMPRESSED_R8G8B8A8
PIXELFORMAT_UNCOMPRESSED_R32
PIXELFORMAT_UNCOMPRESSED_R32G32B32
PIXELFORMAT_UNCOMPRESSED_R32G32B32A32
PIXELFORMAT_UNCOMPRESSED_R16
PIXELFORMAT_UNCOMPRESSED_R16G16B16
PIXELFORMAT_UNCOMPRESSED_R16G16B16A16
PIXELFORMAT_COMPRESSED_DXT1_RGB
PIXELFORMAT_COMPRESSED_DXT1_RGBA
PIXELFORMAT_COMPRESSED_DXT3_RGBA
PIXELFORMAT_COMPRESSED_DXT5_RGBA
PIXELFORMAT_COMPRESSED_ETC1_RGB
PIXELFORMAT_COMPRESSED_ETC2_RGB
PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA
PIXELFORMAT_COMPRESSED_PVRT_RGB
PIXELFORMAT_COMPRESSED_PVRT_RGBA
PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA
PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA
}
enum "::TextureFilter" as C_0012246431421223077718
enum C_0012246431421223077718 {
TEXTURE_FILTER_POINT
TEXTURE_FILTER_BILINEAR
TEXTURE_FILTER_TRILINEAR
TEXTURE_FILTER_ANISOTROPIC_4X
TEXTURE_FILTER_ANISOTROPIC_8X
TEXTURE_FILTER_ANISOTROPIC_16X
}
enum "::TextureWrap" as C_0012685670774210205984
enum C_0012685670774210205984 {
TEXTURE_WRAP_REPEAT
TEXTURE_WRAP_CLAMP
TEXTURE_WRAP_MIRROR_REPEAT
TEXTURE_WRAP_MIRROR_CLAMP
}
enum "::CubemapLayout" as C_0014929934376629357328
enum C_0014929934376629357328 {
CUBEMAP_LAYOUT_AUTO_DETECT
CUBEMAP_LAYOUT_LINE_VERTICAL
CUBEMAP_LAYOUT_LINE_HORIZONTAL
CUBEMAP_LAYOUT_CROSS_THREE_BY_FOUR
CUBEMAP_LAYOUT_CROSS_FOUR_BY_THREE
}
enum "::FontType" as C_0014285842695102062168
enum C_0014285842695102062168 {
FONT_DEFAULT
FONT_BITMAP
FONT_SDF
}
enum "::BlendMode" as C_0012358569567954146443
enum C_0012358569567954146443 {
BLEND_ALPHA
BLEND_ADDITIVE
BLEND_MULTIPLIED
BLEND_ADD_COLORS
BLEND_SUBTRACT_COLORS
BLEND_ALPHA_PREMULTIPLY
BLEND_CUSTOM
BLEND_CUSTOM_SEPARATE
}
enum "::Gesture" as C_0007302556839494520372
enum C_0007302556839494520372 {
GESTURE_NONE
GESTURE_TAP
GESTURE_DOUBLETAP
GESTURE_HOLD
GESTURE_DRAG
GESTURE_SWIPE_RIGHT
GESTURE_SWIPE_LEFT
GESTURE_SWIPE_UP
GESTURE_SWIPE_DOWN
GESTURE_PINCH_IN
GESTURE_PINCH_OUT
}
enum "::CameraMode" as C_0007596535594738691989
enum C_0007596535594738691989 {
CAMERA_CUSTOM
CAMERA_FREE
CAMERA_ORBITAL
CAMERA_FIRST_PERSON
CAMERA_THIRD_PERSON
}
enum "::CameraProjection" as C_0007514897475560282475
enum C_0007514897475560282475 {
CAMERA_PERSPECTIVE
CAMERA_ORTHOGRAPHIC
}
enum "::NPatchLayout" as C_0016827690997873032879
enum C_0016827690997873032879 {
NPATCH_NINE_PATCH
NPATCH_THREE_PATCH_VERTICAL
NPATCH_THREE_PATCH_HORIZONTAL
}
class "::rlVertexBuffer" as C_0011117479362636404787
class C_0011117479362636404787 {
__
+colors : unsigned char *
+elementCount : int
+indices : unsigned int *
+normals : float *
+texcoords : float *
+vaoId : unsigned int
+vboId : unsigned int[5]
+vertices : float *
}
class "::rlDrawCall" as C_0003757251512814799149
class C_0003757251512814799149 {
__
+mode : int
+textureId : unsigned int
+vertexAlignment : int
+vertexCount : int
}
class "::rlRenderBatch" as C_0014967184354241517377
class C_0014967184354241517377 {
__
+bufferCount : int
+currentBuffer : int
+currentDepth : float
+drawCounter : int
+draws : rlDrawCall *
+vertexBuffer : rlVertexBuffer *
}
enum "::rlGlVersion" as C_0013750274500264380948
enum C_0013750274500264380948 {
RL_OPENGL_11
RL_OPENGL_21
RL_OPENGL_33
RL_OPENGL_43
RL_OPENGL_ES_20
RL_OPENGL_ES_30
}
enum "::rlTraceLogLevel" as C_0001992929542714739520
enum C_0001992929542714739520 {
RL_LOG_ALL
RL_LOG_TRACE
RL_LOG_DEBUG
RL_LOG_INFO
RL_LOG_WARNING
RL_LOG_ERROR
RL_LOG_FATAL
RL_LOG_NONE
}
enum "::rlPixelFormat" as C_0002781047112411976054
enum C_0002781047112411976054 {
RL_PIXELFORMAT_UNCOMPRESSED_GRAYSCALE
RL_PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA
RL_PIXELFORMAT_UNCOMPRESSED_R5G6B5
RL_PIXELFORMAT_UNCOMPRESSED_R8G8B8
RL_PIXELFORMAT_UNCOMPRESSED_R5G5B5A1
RL_PIXELFORMAT_UNCOMPRESSED_R4G4B4A4
RL_PIXELFORMAT_UNCOMPRESSED_R8G8B8A8
RL_PIXELFORMAT_UNCOMPRESSED_R32
RL_PIXELFORMAT_UNCOMPRESSED_R32G32B32
RL_PIXELFORMAT_UNCOMPRESSED_R32G32B32A32
RL_PIXELFORMAT_UNCOMPRESSED_R16
RL_PIXELFORMAT_UNCOMPRESSED_R16G16B16
RL_PIXELFORMAT_UNCOMPRESSED_R16G16B16A16
RL_PIXELFORMAT_COMPRESSED_DXT1_RGB
RL_PIXELFORMAT_COMPRESSED_DXT1_RGBA
RL_PIXELFORMAT_COMPRESSED_DXT3_RGBA
RL_PIXELFORMAT_COMPRESSED_DXT5_RGBA
RL_PIXELFORMAT_COMPRESSED_ETC1_RGB
RL_PIXELFORMAT_COMPRESSED_ETC2_RGB
RL_PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA
RL_PIXELFORMAT_COMPRESSED_PVRT_RGB
RL_PIXELFORMAT_COMPRESSED_PVRT_RGBA
RL_PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA
RL_PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA
}
enum "::rlTextureFilter" as C_0000857917038991700068
enum C_0000857917038991700068 {
RL_TEXTURE_FILTER_POINT
RL_TEXTURE_FILTER_BILINEAR
RL_TEXTURE_FILTER_TRILINEAR
RL_TEXTURE_FILTER_ANISOTROPIC_4X
RL_TEXTURE_FILTER_ANISOTROPIC_8X
RL_TEXTURE_FILTER_ANISOTROPIC_16X
}
enum "::rlBlendMode" as C_0005310198108655001665
enum C_0005310198108655001665 {
RL_BLEND_ALPHA
RL_BLEND_ADDITIVE
RL_BLEND_MULTIPLIED
RL_BLEND_ADD_COLORS
RL_BLEND_SUBTRACT_COLORS
RL_BLEND_ALPHA_PREMULTIPLY
RL_BLEND_CUSTOM
RL_BLEND_CUSTOM_SEPARATE
}
enum "::rlShaderLocationIndex" as C_0006513227994186312355
enum C_0006513227994186312355 {
RL_SHADER_LOC_VERTEX_POSITION
RL_SHADER_LOC_VERTEX_TEXCOORD01
RL_SHADER_LOC_VERTEX_TEXCOORD02
RL_SHADER_LOC_VERTEX_NORMAL
RL_SHADER_LOC_VERTEX_TANGENT
RL_SHADER_LOC_VERTEX_COLOR
RL_SHADER_LOC_MATRIX_MVP
RL_SHADER_LOC_MATRIX_VIEW
RL_SHADER_LOC_MATRIX_PROJECTION
RL_SHADER_LOC_MATRIX_MODEL
RL_SHADER_LOC_MATRIX_NORMAL
RL_SHADER_LOC_VECTOR_VIEW
RL_SHADER_LOC_COLOR_DIFFUSE
RL_SHADER_LOC_COLOR_SPECULAR
RL_SHADER_LOC_COLOR_AMBIENT
RL_SHADER_LOC_MAP_ALBEDO
RL_SHADER_LOC_MAP_METALNESS
RL_SHADER_LOC_MAP_NORMAL
RL_SHADER_LOC_MAP_ROUGHNESS
RL_SHADER_LOC_MAP_OCCLUSION
RL_SHADER_LOC_MAP_EMISSION
RL_SHADER_LOC_MAP_HEIGHT
RL_SHADER_LOC_MAP_CUBEMAP
RL_SHADER_LOC_MAP_IRRADIANCE
RL_SHADER_LOC_MAP_PREFILTER
RL_SHADER_LOC_MAP_BRDF
}
enum "::rlShaderUniformDataType" as C_0004841507360824840530
enum C_0004841507360824840530 {
RL_SHADER_UNIFORM_FLOAT
RL_SHADER_UNIFORM_VEC2
RL_SHADER_UNIFORM_VEC3
RL_SHADER_UNIFORM_VEC4
RL_SHADER_UNIFORM_INT
RL_SHADER_UNIFORM_IVEC2
RL_SHADER_UNIFORM_IVEC3
RL_SHADER_UNIFORM_IVEC4
RL_SHADER_UNIFORM_UINT
RL_SHADER_UNIFORM_UIVEC2
RL_SHADER_UNIFORM_UIVEC3
RL_SHADER_UNIFORM_UIVEC4
RL_SHADER_UNIFORM_SAMPLER2D
}
enum "::rlShaderAttributeDataType" as C_0000860797225621848738
enum C_0000860797225621848738 {
RL_SHADER_ATTRIB_FLOAT
RL_SHADER_ATTRIB_VEC2
RL_SHADER_ATTRIB_VEC3
RL_SHADER_ATTRIB_VEC4
}
enum "::rlFramebufferAttachType" as C_0010266876017802472699
enum C_0010266876017802472699 {
RL_ATTACHMENT_COLOR_CHANNEL0
RL_ATTACHMENT_COLOR_CHANNEL1
RL_ATTACHMENT_COLOR_CHANNEL2
RL_ATTACHMENT_COLOR_CHANNEL3
RL_ATTACHMENT_COLOR_CHANNEL4
RL_ATTACHMENT_COLOR_CHANNEL5
RL_ATTACHMENT_COLOR_CHANNEL6
RL_ATTACHMENT_COLOR_CHANNEL7
RL_ATTACHMENT_DEPTH
RL_ATTACHMENT_STENCIL
}
enum "::rlFramebufferAttachTextureType" as C_0003777771555369834082
enum C_0003777771555369834082 {
RL_ATTACHMENT_CUBEMAP_POSITIVE_X
RL_ATTACHMENT_CUBEMAP_NEGATIVE_X
RL_ATTACHMENT_CUBEMAP_POSITIVE_Y
RL_ATTACHMENT_CUBEMAP_NEGATIVE_Y
RL_ATTACHMENT_CUBEMAP_POSITIVE_Z
RL_ATTACHMENT_CUBEMAP_NEGATIVE_Z
RL_ATTACHMENT_TEXTURE2D
RL_ATTACHMENT_RENDERBUFFER
}
enum "::rlCullMode" as C_0010370348661845626240
enum C_0010370348661845626240 {
RL_CULL_FACE_FRONT
RL_CULL_FACE_BACK
}
class "::float3" as C_0011792389323166860578
class C_0011792389323166860578 {
__
+v : float[3]
}
class "::float16" as C_0010158905401854614910
class C_0010158905401854614910 {
__
+v : float[16]
}
class "::nlohmann::detail::make_void<Ts...>" as C_0002374799558044439461
class C_0002374799558044439461 {
__
}
class "::nlohmann::detail::nonesuch" as C_0006597964310517451358
class C_0006597964310517451358 {
+nonesuch() = deleted : void
+nonesuch(const nonesuch &) = deleted : void
+nonesuch(const nonesuch &&) = deleted : void
+~nonesuch() = deleted : void
..
+operator=(const nonesuch &) = deleted : void
+operator=(nonesuch &&) = deleted : void
__
}
class "::nlohmann::detail::detector<Default,AlwaysVoid,Op<>,Args...>" as C_0010718981316982512277
class C_0010718981316982512277 {
__
}
class "::nlohmann::detail::detector<Default,typename make_void<template-parameter-0-1<type-parameter-0-2...>>::type,(anonymous),Args...>" as C_0014993288705156797636
class C_0014993288705156797636 {
__
}
class "::nlohmann::detail::is_detected<nlohmann::detail::is_detected_lazy::Op,Args...>" as C_0015998407215500919506
class C_0015998407215500919506 {
__
}
class "::nlohmann::detail::is_detected_lazy<Op<>,Args...>" as C_0016428875756957174407
class C_0016428875756957174407 {
__
}
class "::nlohmann::detail::detector<Default,void,nlohmann::detail::Op,Args...>" as C_0017122730414939603372
class C_0017122730414939603372 {
__
}
class "::nlohmann::detail::detected_t<nlohmann::detail::Op,Args...>" as C_0002327326499379589340
class C_0002327326499379589340 {
__
}
enum "::nlohmann::detail::value_t" as C_0010649473922595971467
enum C_0010649473922595971467 {
null
object
array
string
boolean
number_integer
number_unsigned
number_float
binary
discarded
}
class "::nlohmann::detail::position_t" as C_0013929042815999091003
class C_0013929042815999091003 {
+operator unsigned long long() constexpr const : size_t
__
+chars_read_current_line : std::size_t
+chars_read_total : std::size_t
+lines_read : std::size_t
}
class "::nlohmann::detail::priority_tag<N - 1>" as C_0013546130272205360584
class C_0013546130272205360584 {
__
}
class "::nlohmann::detail::priority_tag<unsigned int N>" as C_0013831798626941069238
class C_0013831798626941069238 {
__
}
class "::nlohmann::detail::priority_tag<0>" as C_0006655624143927430146
class C_0006655624143927430146 {
__
}
class "::nlohmann::detail::static_const<T>" as C_0014127391518489451037
class C_0014127391518489451037 {
__
{static} +value : const T
}
class "::nlohmann::detail::iterator_types<It,typename=void>" as C_0011370251373888116098
class C_0011370251373888116098 {
__
}
class "::nlohmann::detail::iterator_types<It,typename make_void<typename type-parameter-0-0::difference_type,typename type-parameter-0-0::value_type,typename type-parameter-0-0::pointer,typename type-parameter-0-0::reference,typename type-parameter-0-0::iterator_category>::type>" as C_0002509422973607064496
class C_0002509422973607064496 {
__
}
class "::nlohmann::detail::iterator_traits<T,typename=void>" as C_0010375201990958310291
class C_0010375201990958310291 {
__
}
class "::nlohmann::detail::iterator_types<T>" as C_0000865316670447549455
class C_0000865316670447549455 {
__
}
class "::nlohmann::detail::iterator_traits<T,typename enable_if<!std::is_pointer<T>::value,void>::type>" as C_0009367777274894831300
class C_0009367777274894831300 {
__
}
class "::nlohmann::detail::iterator_traits<T *,typename enable_if<std::is_object<T>::value,void>::type>" as C_0006717111031837718075
class C_0006717111031837718075 {
__
}
class "::nlohmann::detail::is_basic_json<typename>" as C_0018027493289172628390
class C_0018027493289172628390 {
__
}
class "::nlohmann::detail::is_basic_json<nlohmann::basic_json<(anonymous),(anonymous),StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,(anonymous),(anonymous),BinaryType,CustomBaseClass>>" as C_0002056821295455606601
class C_0002056821295455606601 {
__
}
class "::nlohmann::detail::is_basic_json_context<BasicJsonContext>" as C_0005067240238849363306
class C_0005067240238849363306 {
__
}
class "::nlohmann::detail::is_json_ref<typename>" as C_0004436068429892510219
class C_0004436068429892510219 {
__
}
class "::nlohmann::detail::json_ref<T>" as C_0013182210107332688975
class C_0013182210107332688975 {
__
}
class "::nlohmann::detail::is_json_ref<nlohmann::detail::json_ref<T>>" as C_0009302475411853139714
class C_0009302475411853139714 {
__
}
class "::nlohmann::detail::has_from_json<BasicJsonType,T,typename=void>" as C_0013277341110256558861
class C_0013277341110256558861 {
__
}
class "::nlohmann::detail::is_getable<BasicJsonType,T>" as C_0005278043816152481058
class C_0005278043816152481058 {
__
{static} +value : const bool
}
class "::nlohmann::detail::has_from_json<BasicJsonType,T,typename enable_if<!is_basic_json<T>::value,void>::type>" as C_0014114449535362544659
class C_0014114449535362544659 {
__
{static} +value : const bool
}
class "::nlohmann::detail::has_non_default_from_json<BasicJsonType,T,typename=void>" as C_0009763647214656111803
class C_0009763647214656111803 {
__
}
class "::nlohmann::detail::has_non_default_from_json<BasicJsonType,T,typename enable_if<!is_basic_json<T>::value,void>::type>" as C_0013865379143229561509
class C_0013865379143229561509 {
__
{static} +value : const bool
}
class "::nlohmann::detail::has_to_json<BasicJsonType,T,typename=void>" as C_0015792547560293047944
class C_0015792547560293047944 {
__
}
class "::nlohmann::detail::has_to_json<BasicJsonType,T,typename enable_if<!is_basic_json<T>::value,void>::type>" as C_0004019231242038655786
class C_0004019231242038655786 {
__
{static} +value : const bool
}
class "::nlohmann::detail::has_key_compare<T>" as C_0015781881238511831805
class C_0015781881238511831805 {
__
}
class "::nlohmann::detail::actual_object_comparator<BasicJsonType>" as C_0009187006383913636460
class C_0009187006383913636460 {
__
}
class "::nlohmann::detail::char_traits<T>" as C_0015804915405291369925
class C_0015804915405291369925 {
__
}
class "::nlohmann::detail::char_traits<unsigned char>" as C_0001122165507947972678
class C_0001122165507947972678 {
{static} +eof() constexpr noexcept : int_type
{static} +to_char_type(int_type i) noexcept : char_type
{static} +to_int_type(char_type c) noexcept : int_type
__
}
class "::nlohmann::detail::char_traits<signed char>" as C_0012195728221283309101
class C_0012195728221283309101 {
{static} +eof() constexpr noexcept : int_type
{static} +to_char_type(int_type i) noexcept : char_type
{static} +to_int_type(char_type c) noexcept : int_type
__
}
class "::nlohmann::detail::char_traits<std::byte>" as C_0001891278734491626892
class C_0001891278734491626892 {
{static} +eof() constexpr noexcept : int_type
{static} +to_char_type(int_type i) noexcept : char_type
{static} +to_int_type(char_type c) noexcept : int_type
__
}
class "::nlohmann::detail::conjunction<typename...>" as C_0007902155839517699692
class C_0007902155839517699692 {
__
}
class "::nlohmann::detail::conjunction<B>" as C_0007446875231317438523
class C_0007446875231317438523 {
__
}
class "::nlohmann::detail::conjunction<B,Bn...>" as C_0013999076485229482309
class C_0013999076485229482309 {
__
}
class "::nlohmann::detail::negation<B>" as C_0010168023150363309612
class C_0010168023150363309612 {
__
}
class "::nlohmann::detail::is_default_constructible<T>" as C_0006992372542274270871
class C_0006992372542274270871 {
__
}
class "::nlohmann::detail::is_default_constructible<T1>" as C_0006314778192677447688
class C_0006314778192677447688 {
__
}
class "::nlohmann::detail::is_default_constructible<T2>" as C_0006313795229282016279
class C_0006313795229282016279 {
__
}
class "::nlohmann::detail::conjunction<nlohmann::detail::is_default_constructible<T1>,nlohmann::detail::is_default_constructible<T2>>" as C_0017076856290484532094
class C_0017076856290484532094 {
__
}
class "::nlohmann::detail::is_default_constructible<std::pair<T1,T2>>" as C_0005595415136035363981
class C_0005595415136035363981 {
__
}
class "::nlohmann::detail::is_default_constructible<std::pair<T1,T2> const>" as C_0010937321348906443904
class C_0010937321348906443904 {
__
}
class "::nlohmann::detail::conjunction<is_default_constructible<Ts>...>" as C_0004909206806478354990
class C_0004909206806478354990 {
__
}
class "::nlohmann::detail::is_default_constructible<std::tuple<Ts...>>" as C_0016641463976187336261
class C_0016641463976187336261 {
__
}
class "::nlohmann::detail::is_default_constructible<std::tuple<Ts...> const>" as C_0015338677135268844920
class C_0015338677135268844920 {
__
}
class "::nlohmann::detail::is_constructible<T,Args...>" as C_0015230768299381119886
class C_0015230768299381119886 {
__
}
class "::nlohmann::detail::is_constructible<std::pair<T1,T2>>" as C_0008650453952629366579
class C_0008650453952629366579 {
__
}
class "::nlohmann::detail::is_constructible<std::pair<T1,T2> const>" as C_0008196183388477249174
class C_0008196183388477249174 {
__
}
class "::nlohmann::detail::is_constructible<std::tuple<Ts...>>" as C_0015591614226304978039
class C_0015591614226304978039 {
__
}
class "::nlohmann::detail::is_constructible<std::tuple<Ts...> const>" as C_0015973015805707452738
class C_0015973015805707452738 {
__
}
class "::nlohmann::detail::is_iterator_traits<T,typename=void>" as C_0001413917146292892088
class C_0001413917146292892088 {
__
}
class "::nlohmann::detail::iterator_traits<T,void>" as C_0017627762319532097983
class C_0017627762319532097983 {
__
}
class "::nlohmann::detail::is_iterator_traits<nlohmann::detail::iterator_traits<T,void>,void>" as C_0001027948818263821194
class C_0001027948818263821194 {
__
{static} +value : const auto
}
class "::nlohmann::detail::is_range<T>" as C_0018164164340993701537
class C_0018164164340993701537 {
__
{static} -is_iterator_begin : const auto
{static} +value : const bool
}
class "::nlohmann::detail::result_of_begin<decltype(std::declval<R &>())>" as C_0014564979514449365806
class C_0014564979514449365806 {
__
}
class "::nlohmann::detail::result_of_begin<decltype(std::declval<T &>())>" as C_0003964006310859062900
class C_0003964006310859062900 {
__
}
class "::nlohmann::detail::iterator_traits<nlohmann::detail::iterator_t<is_range<R>::value,nlohmann::detail::result_of_begin<decltype(std::declval<T &>())>>>" as C_0006918660714441279166
class C_0006918660714441279166 {
__
}
class "::nlohmann::detail::value_type_t<nlohmann::detail::iterator_traits<nlohmann::detail::iterator_t<is_range<R>::value,nlohmann::detail::result_of_begin<decltype(std::declval<T &>())>>>>" as C_0010343088054111248897
class C_0010343088054111248897 {
__
}
class "::nlohmann::detail::is_complete_type<T,typename=void>" as C_0003136094376945561362
class C_0003136094376945561362 {
__
}
class "::nlohmann::detail::is_complete_type<T,decltype(void(sizeof(T)))>" as C_0014271975207194010963
class C_0014271975207194010963 {
__
}
class "::nlohmann::detail::is_compatible_object_type_impl<BasicJsonType,CompatibleObjectType,typename=void>" as C_0008702375298716003689
class C_0008702375298716003689 {
__
}
class "::nlohmann::detail::is_compatible_object_type_impl<BasicJsonType,CompatibleObjectType,typename enable_if<is_detected<mapped_type_t,CompatibleObjectType>::value && is_detected<key_type_t,CompatibleObjectType>::value,void>::type>" as C_0001176340690635239861
class C_0001176340690635239861 {
__
{static} +value : const bool
}
class "::nlohmann::detail::is_compatible_object_type_impl<BasicJsonType,CompatibleObjectType>" as C_0001687611237103466621
class C_0001687611237103466621 {
__
}
class "::nlohmann::detail::is_compatible_object_type<BasicJsonType,CompatibleObjectType>" as C_0006910910048129181352
class C_0006910910048129181352 {
__
}
class "::nlohmann::detail::is_constructible_object_type_impl<BasicJsonType,ConstructibleObjectType,typename=void>" as C_0012301613935998121051
class C_0012301613935998121051 {
__
}
class "::nlohmann::detail::is_constructible_object_type_impl<BasicJsonType,ConstructibleObjectType,typename enable_if<is_detected<mapped_type_t,CompatibleObjectType>::value && is_detected<key_type_t,CompatibleObjectType>::value,void>::type>" as C_0013373840975908384323
class C_0013373840975908384323 {
__
{static} +value : const bool
}
class "::nlohmann::detail::is_constructible_object_type_impl<BasicJsonType,ConstructibleObjectType>" as C_0003647011909714715819
class C_0003647011909714715819 {
__
}
class "::nlohmann::detail::is_constructible_object_type<BasicJsonType,ConstructibleObjectType>" as C_0017912565087660377498
class C_0017912565087660377498 {
__
}
class "::nlohmann::detail::is_compatible_string_type<BasicJsonType,CompatibleStringType>" as C_0011477132988435867264
class C_0011477132988435867264 {
__
{static} +value : const auto
}
class "::nlohmann::detail::is_constructible_string_type<BasicJsonType,ConstructibleStringType>" as C_0008416109097591933106
class C_0008416109097591933106 {
__
{static} +value : const auto
}
class "::nlohmann::detail::is_compatible_array_type_impl<BasicJsonType,CompatibleArrayType,typename=void>" as C_0000157039525751952463
class C_0000157039525751952463 {
__
}
class "::nlohmann::detail::is_compatible_array_type_impl<BasicJsonType,CompatibleArrayType,typename enable_if<is_detected<iterator_t,CompatibleArrayType>::value && is_iterator_traits<iterator_traits<detected_t<iterator_t,CompatibleArrayType>>>::value && !std::is_same<CompatibleArrayType,detected_t<range_value_t,CompatibleArrayType>>::value,void>::type>" as C_0009111154098307958461
class C_0009111154098307958461 {
__
{static} +value : const bool
}
class "::nlohmann::detail::is_compatible_array_type_impl<BasicJsonType,CompatibleArrayType>" as C_0011665614285518232895
class C_0011665614285518232895 {
__
}
class "::nlohmann::detail::is_compatible_array_type<BasicJsonType,CompatibleArrayType>" as C_0016289156670638822276
class C_0016289156670638822276 {
__
}
class "::nlohmann::detail::is_constructible_array_type_impl<BasicJsonType,ConstructibleArrayType,typename=void>" as C_0014053253935845333199
class C_0014053253935845333199 {
__
}
class "::nlohmann::detail::is_constructible_array_type_impl<BasicJsonType,ConstructibleArrayType,typename enable_if<std::is_same<ConstructibleArrayType,typename BasicJsonType::value_type>::value,void>::type>" as C_0014034627823239921891
class C_0014034627823239921891 {
__
}
class "::nlohmann::detail::is_constructible_array_type_impl<BasicJsonType,ConstructibleArrayType,typename enable_if<!std::is_same<ConstructibleArrayType,typename BasicJsonType::value_type>::value && !is_compatible_string_type<BasicJsonType,ConstructibleArrayType>::value && is_default_constructible<ConstructibleArrayType>::value && (std::is_move_assignable<ConstructibleArrayType>::value || std::is_copy_assignable<ConstructibleArrayType>::value) && is_detected<iterator_t,ConstructibleArrayType>::value && is_iterator_traits<iterator_traits<detected_t<iterator_t,ConstructibleArrayType>>>::value && is_detected<range_value_t,ConstructibleArrayType>::value && !std::is_same<ConstructibleArrayType,detected_t<range_value_t,ConstructibleArrayType>>::value && is_complete_type<detected_t<range_value_t,ConstructibleArrayType>>::value,void>::type>" as C_0005623511180367969071
class C_0005623511180367969071 {
__
{static} +value : const bool
}
class "::nlohmann::detail::is_constructible_array_type_impl<BasicJsonType,ConstructibleArrayType>" as C_0014910578194208994751
class C_0014910578194208994751 {
__
}
class "::nlohmann::detail::is_constructible_array_type<BasicJsonType,ConstructibleArrayType>" as C_0008208194694564009640
class C_0008208194694564009640 {
__
}
class "::nlohmann::detail::is_compatible_integer_type_impl<RealIntegerType,CompatibleNumberIntegerType,typename=void>" as C_0000688927543687448024
class C_0000688927543687448024 {
__
}
class "::nlohmann::detail::is_compatible_integer_type_impl<RealIntegerType,CompatibleNumberIntegerType,typename enable_if<std::is_integral<RealIntegerType>::value && std::is_integral<CompatibleNumberIntegerType>::value && !std::is_same<bool,CompatibleNumberIntegerType>::value,void>::type>" as C_0003878754183181955924
class C_0003878754183181955924 {
__
{static} +value : const auto
}
class "::nlohmann::detail::is_compatible_integer_type_impl<RealIntegerType,CompatibleNumberIntegerType>" as C_0001554714283702431156
class C_0001554714283702431156 {
__
}
class "::nlohmann::detail::is_compatible_integer_type<RealIntegerType,CompatibleNumberIntegerType>" as C_0009070988242826610157
class C_0009070988242826610157 {
__
}
class "::nlohmann::detail::is_compatible_type_impl<BasicJsonType,CompatibleType,typename=void>" as C_0015421071143978139974
class C_0015421071143978139974 {
__
}
class "::nlohmann::detail::is_compatible_type_impl<BasicJsonType,CompatibleType,typename enable_if<is_complete_type<CompatibleType>::value,void>::type>" as C_0014320282377445054878
class C_0014320282377445054878 {
__
{static} +value : const bool
}
class "::nlohmann::detail::is_compatible_type_impl<BasicJsonType,CompatibleType>" as C_0015045379573041192038
class C_0015045379573041192038 {
__
}
class "::nlohmann::detail::is_compatible_type<BasicJsonType,CompatibleType>" as C_0006935840221857960207
class C_0006935840221857960207 {
__
}
class "::nlohmann::detail::is_constructible_tuple<T1,T2>" as C_0012916371594555022039
class C_0012916371594555022039 {
__
}
class "::nlohmann::detail::conjunction<is_constructible<T1,Args>...>" as C_0007212384626706954397
class C_0007212384626706954397 {
__
}
class "::nlohmann::detail::is_constructible_tuple<T1,std::tuple<Args...>>" as C_0017845374940651224485
class C_0017845374940651224485 {
__
}
class "::nlohmann::detail::is_json_iterator_of<BasicJsonType,T>" as C_0006768220041238079739
class C_0006768220041238079739 {
__
}
class "::nlohmann::detail::is_json_iterator_of<BasicJsonType,typename type-parameter-0-0::iterator>" as C_0013373805269230000172
class C_0013373805269230000172 {
__
}
class "::nlohmann::detail::is_json_iterator_of<BasicJsonType,typename type-parameter-0-0::const_iterator>" as C_0014436966640218603920
class C_0014436966640218603920 {
__
}
class "::nlohmann::detail::is_specialization_of<Primary<>,T>" as C_0017702777963793819415
class C_0017702777963793819415 {
__
}
class "::nlohmann::detail::is_specialization_of<(anonymous),Args<Args...>>" as C_0016702799623700013569
class C_0016702799623700013569 {
__
}
class "::nlohmann::detail::uncvref_t<T>" as C_0015655517881744505449
class C_0015655517881744505449 {
__
}
class "::nlohmann::detail::is_specialization_of<nlohmann::json_pointer,nlohmann::detail::uncvref_t<T>>" as C_0000426375057007269016
class C_0000426375057007269016 {
__
}
class "::nlohmann::detail::is_comparable<Compare,A,B,typename=void>" as C_0003781083434658556212
class C_0003781083434658556212 {
__
}
class "::nlohmann::detail::is_comparable<Compare,A,B,typename make_void<decltype(std::declval<Compare>()(std::declval<A>(),std::declval<B>())),decltype(std::declval<Compare>()(std::declval<B>(),std::declval<A>()))>::type>" as C_0010138917742493328210
class C_0010138917742493328210 {
__
}
class "::nlohmann::detail::is_ordered_map<T>" as C_0009751524449346198270
class C_0009751524449346198270 {
{static} +test<C>(decltype(&C::capacity)) : one
{static} +test<C>() : two
__
+value : enum
}
class "::nlohmann::detail::is_ordered_map::two" as C_0001735083599026068944
class C_0001735083599026068944 {
__
+x : char[2]
}
class "::nlohmann::detail::conjunction<std::is_integral<Types>...>" as C_0015902452857466187586
class C_0015902452857466187586 {
__
}
class "::nlohmann::detail::conjunction<std::is_signed<Types>...>" as C_0015187107270836286042
class C_0015187107270836286042 {
__
}
class "::nlohmann::detail::conjunction<std::is_unsigned<Types>...>" as C_0009272450478858302595
class C_0009272450478858302595 {
__
}
class "::nlohmann::detail::value_in_range_of_impl2<OfType,T,false,false>" as C_0008120992284769819274
class C_0008120992284769819274 {
{static} +test(T val) constexpr : bool
__
}
class "::nlohmann::detail::value_in_range_of_impl2<OfType,T,true,false>" as C_0003363480964171303475
class C_0003363480964171303475 {
{static} +test(T val) constexpr : bool
__
}
class "::nlohmann::detail::value_in_range_of_impl2<OfType,T,false,true>" as C_0013834265067272228121
class C_0013834265067272228121 {
{static} +test(T val) constexpr : bool
__
}
class "::nlohmann::detail::value_in_range_of_impl2<OfType,T,true,true>" as C_0018366723962436109942
class C_0018366723962436109942 {
{static} +test(T val) constexpr : bool
__
}
class "::nlohmann::detail::value_in_range_of_impl1<OfType,T,false,typename enable_if<all_integral<OfType,T>::value,void>::type>" as C_0005833828757727343548
class C_0005833828757727343548 {
{static} +test(T val) constexpr : bool
__
}
class "::nlohmann::detail::value_in_range_of_impl1<OfType,T,true,typename enable_if<all_integral<OfType,T>::value,void>::type>" as C_0004287359615334045605
class C_0004287359615334045605 {
{static} +test(T) constexpr : bool
__
}
class "::nlohmann::detail::is_c_string<T>" as C_0006332295718417491167
class C_0006332295718417491167 {
__
}
class "::nlohmann::detail::is_c_string<nlohmann::detail::uncvref_t<T>>" as C_0009914069156030260013
class C_0009914069156030260013 {
__
}
class "::nlohmann::detail::is_transparent<T>" as C_0017083515891121347044
class C_0017083515891121347044 {
__
}
class "::nlohmann::detail::is_detected<nlohmann::detail::string_can_append,StringType,Arg>" as C_0011162835554834108736
class C_0011162835554834108736 {
__
}
class "::nlohmann::detail::is_detected<nlohmann::detail::string_can_append_op,StringType,Arg>" as C_0001612822085036938220
class C_0001612822085036938220 {
__
}
class "::nlohmann::detail::is_detected<nlohmann::detail::string_can_append_iter,StringType,Arg>" as C_0016571854676322759413
class C_0016571854676322759413 {
__
}
class "::nlohmann::detail::is_detected<nlohmann::detail::string_can_append_data,StringType,Arg>" as C_0000488624743077816439
class C_0000488624743077816439 {
__
}
class "::nlohmann::detail::exception" as C_0009728034640419511916
class C_0009728034640419511916 {
#exception(int id_, const char * what_arg) : void
..
{static} #diagnostics(std::nullptr_t) : std::string
{static} #diagnostics<BasicJsonType>(const BasicJsonType * leaf_element) : std::string
{static} -get_byte_positions<BasicJsonType>(const BasicJsonType * leaf_element) : std::string
{static} #name(const std::string & ename, int id_) : std::string
+what() const noexcept : const char *
__
+id : const int
-m : std::runtime_error
}
class "::nlohmann::detail::parse_error" as C_0018310182602106031747
class C_0018310182602106031747 {
-parse_error(int id_, std::size_t byte_, const char * what_arg) : void
..
{static} +create<BasicJsonContext,enable_if_t<is_basic_json_context<BasicJsonContext>::value, int>=0>(int id_, const position_t & pos, const std::string & what_arg, BasicJsonContext context) : parse_error
{static} +create<BasicJsonContext,enable_if_t<is_basic_json_context<BasicJsonContext>::value, int>=0>(int id_, std::size_t byte_, const std::string & what_arg, BasicJsonContext context) : parse_error
{static} -position_string(const position_t & pos) : std::string
__
+byte : const std::size_t
}
class "::nlohmann::detail::invalid_iterator" as C_0010540431456137922445
class C_0010540431456137922445 {
-invalid_iterator(int id_, const char * what_arg) : void
..
{static} +create<BasicJsonContext,enable_if_t<is_basic_json_context<BasicJsonContext>::value, int>=0>(int id_, const std::string & what_arg, BasicJsonContext context) : invalid_iterator
__
}
class "::nlohmann::detail::type_error" as C_0011999608394822785130
class C_0011999608394822785130 {
-type_error(int id_, const char * what_arg) : void
..
{static} +create<BasicJsonContext,enable_if_t<is_basic_json_context<BasicJsonContext>::value, int>=0>(int id_, const std::string & what_arg, BasicJsonContext context) : type_error
__
}
class "::nlohmann::detail::out_of_range" as C_0018175764830680090181
class C_0018175764830680090181 {
-out_of_range(int id_, const char * what_arg) : void
..
{static} +create<BasicJsonContext,enable_if_t<is_basic_json_context<BasicJsonContext>::value, int>=0>(int id_, const std::string & what_arg, BasicJsonContext context) : out_of_range
__
}
class "::nlohmann::detail::other_error" as C_0005117297347899704054
class C_0005117297347899704054 {
-other_error(int id_, const char * what_arg) : void
..
{static} +create<BasicJsonContext,enable_if_t<is_basic_json_context<BasicJsonContext>::value, int>=0>(int id_, const std::string & what_arg, BasicJsonContext context) : other_error
__
}
class "::nlohmann::detail::identity_tag<T>" as C_0010641974657988272800
class C_0010641974657988272800 {
__
}
class "::nlohmann::detail::from_json_fn" as C_0003053798518000637863
class C_0003053798518000637863 {
+operator()<BasicJsonType,T>(const BasicJsonType & j, T && val) const noexcept : decltype(from_json(j, std::forward<T>(val)))
__
}
class "::nlohmann::detail::iteration_proxy_value<IteratorType>" as C_0004971891629230563059
class C_0004971891629230563059 {
+iteration_proxy_value() = default : void
+iteration_proxy_value(IteratorType it, std::size_t array_index_ = 0) noexcept : void
+iteration_proxy_value(const iteration_proxy_value<IteratorType> &) = default : void
+iteration_proxy_value(iteration_proxy_value<IteratorType> &&) noexcept = default : void
+~iteration_proxy_value() = default : void
..
+operator=(const iteration_proxy_value<IteratorType> &) = default : iteration_proxy_value<IteratorType> &
+operator=(iteration_proxy_value<IteratorType> &&) noexcept = default : iteration_proxy_value<IteratorType> &
..
+operator!=(const iteration_proxy_value<IteratorType> & o) const : bool
+operator*() const : const iteration_proxy_value<IteratorType> &
+operator++() : iteration_proxy_value<IteratorType> &
+operator++(int) : iteration_proxy_value<IteratorType>
+operator==(const iteration_proxy_value<IteratorType> & o) const : bool
..
+key() const : const string_type &
+value() const : typename IteratorType::reference
__
-anchor : IteratorType
-array_index : std::size_t
-array_index_last : std::size_t
-array_index_str : string_type
-empty_str : string_type
}
class "::nlohmann::detail::iteration_proxy<IteratorType>" as C_0013644362285416196689
class C_0013644362285416196689 {
+iteration_proxy() = default : void
+iteration_proxy(typename IteratorType::reference cont) noexcept : void
+iteration_proxy(const iteration_proxy<IteratorType> &) = default : void
+iteration_proxy(iteration_proxy<IteratorType> &&) noexcept = default : void
+~iteration_proxy() = default : void
..
+operator=(const iteration_proxy<IteratorType> &) = default : iteration_proxy<IteratorType> &
+operator=(iteration_proxy<IteratorType> &&) noexcept = default : iteration_proxy<IteratorType> &
..
+begin() const noexcept : iteration_proxy_value<IteratorType>
+end() const noexcept : iteration_proxy_value<IteratorType>
__
-container : typename IteratorType::pointer
}
class "::nlohmann::detail::external_constructor<nlohmann::detail::value_t::boolean>" as C_0006008682906480716649
class C_0006008682906480716649 {
{static} +construct<BasicJsonType>(BasicJsonType & j, typename BasicJsonType::boolean_t b) noexcept : void
__
}
class "::nlohmann::detail::external_constructor<nlohmann::detail::value_t::string>" as C_0016272036920895983596
class C_0016272036920895983596 {
{static} +construct<BasicJsonType>(BasicJsonType & j, const typename BasicJsonType::string_t & s) : void
{static} +construct<BasicJsonType>(BasicJsonType & j, typename BasicJsonType::string_t && s) : void
{static} +construct<BasicJsonType,CompatibleStringType,enable_if_t<!std::is_same<CompatibleStringType, typename BasicJsonType::string_t>::value, int>=0>(BasicJsonType & j, const CompatibleStringType & str) : void
__
}
class "::nlohmann::detail::external_constructor<nlohmann::detail::value_t::binary>" as C_0009869249561694896948
class C_0009869249561694896948 {
{static} +construct<BasicJsonType>(BasicJsonType & j, const typename BasicJsonType::binary_t & b) : void
{static} +construct<BasicJsonType>(BasicJsonType & j, typename BasicJsonType::binary_t && b) : void
__
}
class "::nlohmann::detail::external_constructor<nlohmann::detail::value_t::number_float>" as C_0018278686030687458683
class C_0018278686030687458683 {
{static} +construct<BasicJsonType>(BasicJsonType & j, typename BasicJsonType::number_float_t val) noexcept : void
__
}
class "::nlohmann::detail::external_constructor<nlohmann::detail::value_t::number_unsigned>" as C_0010696280542309684438
class C_0010696280542309684438 {
{static} +construct<BasicJsonType>(BasicJsonType & j, typename BasicJsonType::number_unsigned_t val) noexcept : void
__
}
class "::nlohmann::detail::external_constructor<nlohmann::detail::value_t::number_integer>" as C_0016237388092727753527
class C_0016237388092727753527 {
{static} +construct<BasicJsonType>(BasicJsonType & j, typename BasicJsonType::number_integer_t val) noexcept : void
__
}
class "::nlohmann::detail::external_constructor<nlohmann::detail::value_t::array>" as C_0006248441366823821910
class C_0006248441366823821910 {
{static} +construct<BasicJsonType>(BasicJsonType & j, const typename BasicJsonType::array_t & arr) : void
{static} +construct<BasicJsonType>(BasicJsonType & j, typename BasicJsonType::array_t && arr) : void
{static} +construct<BasicJsonType,CompatibleArrayType,enable_if_t<!std::is_same<CompatibleArrayType, typename BasicJsonType::array_t>::value, int>=0>(BasicJsonType & j, const CompatibleArrayType & arr) : void
{static} +construct<BasicJsonType>(BasicJsonType & j, const std::vector<bool> & arr) : void
{static} +construct<BasicJsonType,T,enable_if_t<std::is_convertible<T, BasicJsonType>::value, int>=0>(BasicJsonType & j, const std::valarray<T> & arr) : void
__
}
class "::nlohmann::detail::external_constructor<nlohmann::detail::value_t::object>" as C_0004276669238741261302
class C_0004276669238741261302 {
{static} +construct<BasicJsonType>(BasicJsonType & j, const typename BasicJsonType::object_t & obj) : void
{static} +construct<BasicJsonType>(BasicJsonType & j, typename BasicJsonType::object_t && obj) : void
{static} +construct<BasicJsonType,CompatibleObjectType,enable_if_t<!std::is_same<CompatibleObjectType, typename BasicJsonType::object_t>::value, int>=0>(BasicJsonType & j, const CompatibleObjectType & obj) : void
__
}
class "::nlohmann::detail::to_json_fn" as C_0004820385613509396878
class C_0004820385613509396878 {
+operator()<BasicJsonType,T>(BasicJsonType & j, T && val) const noexcept : decltype(to_json(j, std::forward<T>(val)) , void())
__
}
enum "::nlohmann::detail::input_format_t" as C_0004916776437443635586
enum C_0004916776437443635586 {
json
cbor
msgpack
ubjson
bson
bjdata
}
class "::nlohmann::detail::file_input_adapter" as C_0013735294017004299894
class C_0013735294017004299894 {
+file_input_adapter(std::FILE * f) noexcept : void
+file_input_adapter(const file_input_adapter &) = deleted : void
+file_input_adapter(file_input_adapter &&) noexcept = default : void
+~file_input_adapter() = default : void
..
+operator=(const file_input_adapter &) = deleted : file_input_adapter &
+operator=(file_input_adapter &&) = deleted : file_input_adapter &
..
+get_character() noexcept : std::char_traits<char>::int_type
+get_elements<T>(T * dest, std::size_t count = 1) : std::size_t
__
-m_file : std::FILE *
}
class "::nlohmann::detail::input_stream_adapter" as C_0014619140364682429838
class C_0014619140364682429838 {
+input_stream_adapter(std::istream & i) : void
+input_stream_adapter(const input_stream_adapter &) = deleted : void
+input_stream_adapter(input_stream_adapter && rhs) noexcept : void
+~input_stream_adapter() : void
..
+operator=(input_stream_adapter &) = deleted : input_stream_adapter &
+operator=(input_stream_adapter &&) = deleted : input_stream_adapter &
..
+get_character() : std::char_traits<char>::int_type
+get_elements<T>(T * dest, std::size_t count = 1) : std::size_t
__
-is : std::istream *
-sb : std::streambuf *
}
class "::nlohmann::detail::iterator_input_adapter<IteratorType>" as C_0006621992980108402466
class C_0006621992980108402466 {
+iterator_input_adapter(IteratorType first, IteratorType last) : void
..
-empty() const : bool
+get_character() : typename char_traits<char_type>::int_type
+get_elements<T>(T * dest, std::size_t count = 1) : std::size_t
__
-current : IteratorType
-end : IteratorType
}
class "::nlohmann::detail::wide_string_input_helper<BaseInputAdapter,4>" as C_0015266931292129070608
class C_0015266931292129070608 {
{static} +fill_buffer(BaseInputAdapter & input, std::array<std::char_traits<char>::int_type,4> & utf8_bytes, size_t & utf8_bytes_index, size_t & utf8_bytes_filled) : void
__
}
class "::nlohmann::detail::wide_string_input_helper<BaseInputAdapter,2>" as C_0015268760879478035262
class C_0015268760879478035262 {
{static} +fill_buffer(BaseInputAdapter & input, std::array<std::char_traits<char>::int_type,4> & utf8_bytes, size_t & utf8_bytes_index, size_t & utf8_bytes_filled) : void
__
}
class "::nlohmann::detail::wide_string_input_adapter<BaseInputAdapter,WideCharType>" as C_0014168768777020386332
class C_0014168768777020386332 {
+wide_string_input_adapter(BaseInputAdapter base) : void
..
-fill_buffer<size_t T>() : void
+get_character() noexcept : typename std::char_traits<char>::int_type
+get_elements<T>(T *, std::size_t  = 1) : std::size_t
__
-base_adapter : BaseInputAdapter
-utf8_bytes : std::array<std::char_traits<char>::int_type,4>
-utf8_bytes_filled : std::size_t
-utf8_bytes_index : std::size_t
}
class "::nlohmann::detail::iterator_input_adapter<nlohmann::detail::iterator_input_adapter_factory::iterator_type>" as C_0005473164555112960287
class C_0005473164555112960287 {
__
}
class "::nlohmann::detail::iterator_input_adapter_factory<IteratorType,Enable=void>" as C_0014109776010686179387
class C_0014109776010686179387 {
{static} +create(IteratorType first, IteratorType last) : adapter_type
__
}
class "::nlohmann::detail::is_iterator_of_multibyte<T>" as C_0001670063725694153228
class C_0001670063725694153228 {
__
+value : enum
}
class "::nlohmann::detail::iterator_input_adapter<iterator_type>" as C_0018187889487049892961
class C_0018187889487049892961 {
__
}
class "::nlohmann::detail::wide_string_input_adapter<nlohmann::detail::iterator_input_adapter<iterator_type>,char_type>" as C_0008253466530933028102
class C_0008253466530933028102 {
__
}
class "::nlohmann::detail::iterator_input_adapter_factory<IteratorType,typename enable_if<is_iterator_of_multibyte<IteratorType>::value,void>::type>" as C_0002400039489856265359
class C_0002400039489856265359 {
{static} +create(IteratorType first, IteratorType last) : adapter_type
__
}
class "::nlohmann::detail::container_input_adapter_factory_impl::container_input_adapter_factory<ContainerType,Enable=void>" as C_0003559763008402467459
class C_0003559763008402467459 {
__
}
class "::nlohmann::detail::container_input_adapter_factory_impl::container_input_adapter_factory<ContainerType,typename make_void<decltype(begin(std::declval<ContainerType>()) ,end(std::declval<ContainerType>()))>::type>" as C_0002655046891830058362
class C_0002655046891830058362 {
{static} +create(const ContainerType & container) : adapter_type
__
}
class "::nlohmann::detail::iterator_input_adapter<nlohmann::detail::iterator_input_adapter_factory<const char *>::iterator_type>" as C_0011362165756382129028
class C_0011362165756382129028 {
__
}
class "::nlohmann::detail::span_input_adapter" as C_0001047283704899970072
class C_0001047283704899970072 {
+span_input_adapter<CharT,typename std::enable_if<std::is_pointer<CharT>::value && std::is_integral<typename std::remove_pointer<CharT>::type>::value && sizeof(typename std::remove_pointer<CharT>::type) == 1, int>::type=0>(CharT b, std::size_t l) : void
+span_input_adapter<IteratorType,typename std::enable_if<std::is_same<typename iterator_traits<IteratorType>::iterator_category, std::random_access_iterator_tag>::value, int>::type=0>(IteratorType first, IteratorType last) : void
..
+get() : contiguous_bytes_input_adapter &&
__
-ia : contiguous_bytes_input_adapter
}
class "::nlohmann::detail::lexer_base<BasicJsonType>" as C_0008593943866357657893
class C_0008593943866357657893 {
{static} +token_type_name(const token_type t) noexcept : const char *
__
}
enum "::nlohmann::detail::lexer_base::token_type" as C_0005663643532533441261
enum C_0005663643532533441261 {
uninitialized
literal_true
literal_false
literal_null
value_string
value_unsigned
value_integer
value_float
begin_array
begin_object
end_array
end_object
name_separator
value_separator
parse_error
end_of_input
literal_or_value
}
class "::nlohmann::detail::lexer<BasicJsonType,InputAdapterType>" as C_0000761657787676069264
class C_0000761657787676069264 {
+lexer(InputAdapterType && adapter, bool ignore_comments_ = false) noexcept : void
+lexer(const lexer<BasicJsonType,InputAdapterType> &) = deleted : void
+lexer(lexer<BasicJsonType,InputAdapterType> &&) = default : void
+~lexer() = default : void
..
+operator=(lexer<BasicJsonType,InputAdapterType> &) = deleted : lexer<BasicJsonType,InputAdapterType> &
+operator=(lexer<BasicJsonType,InputAdapterType> &&) = default : lexer<BasicJsonType,InputAdapterType> &
..
-add(char_int_type c) : void
-get() : char_int_type
-get_codepoint() : int
{static} -get_decimal_point() noexcept : char
+get_error_message() constexpr const noexcept : const char *
+get_number_float() constexpr const noexcept : number_float_t
+get_number_integer() constexpr const noexcept : number_integer_t
+get_number_unsigned() constexpr const noexcept : number_unsigned_t
+get_position() constexpr const noexcept : position_t
+get_string() : string_t &
+get_token_string() const : std::string
-next_byte_in_range(std::initializer_list<char_int_type> ranges) : bool
-reset() noexcept : void
+scan() : token_type
-scan_comment() : bool
-scan_literal(const char_type * literal_text, const std::size_t length, token_type return_type) : token_type
-scan_number() : token_type
-scan_string() : token_type
+skip_bom() : bool
+skip_whitespace() : void
{static} -strtof(float & f, const char * str, char ** endptr) noexcept : void
{static} -strtof(double & f, const char * str, char ** endptr) noexcept : void
{static} -strtof(long double & f, const char * str, char ** endptr) noexcept : void
-unget() : void
__
-current : char_int_type
-decimal_point_char : const char_int_type
-decimal_point_position : std::size_t
-error_message : const char *
-ia : InputAdapterType
-ignore_comments : const bool
-next_unget : bool
-position : position_t
-token_buffer : string_t
-token_string : std::vector<char_type>
-value_float : number_float_t
-value_integer : number_integer_t
-value_unsigned : number_unsigned_t
}
class "::nlohmann::detail::json_sax_dom_parser<BasicJsonType,InputAdapterType>" as C_0013043275955951264970
class C_0013043275955951264970 {
+json_sax_dom_parser(BasicJsonType & r, const bool allow_exceptions_ = true, lexer_t * lexer_ = nullptr) : void
+json_sax_dom_parser(const json_sax_dom_parser<BasicJsonType,InputAdapterType> &) = deleted : void
+json_sax_dom_parser(json_sax_dom_parser<BasicJsonType,InputAdapterType> &&) = default : void
+~json_sax_dom_parser() = default : void
..
+operator=(const json_sax_dom_parser<BasicJsonType,InputAdapterType> &) = deleted : json_sax_dom_parser<BasicJsonType,InputAdapterType> &
+operator=(json_sax_dom_parser<BasicJsonType,InputAdapterType> &&) = default : json_sax_dom_parser<BasicJsonType,InputAdapterType> &
..
+binary(binary_t & val) : bool
+boolean(bool val) : bool
+end_array() : bool
+end_object() : bool
-handle_value<Value>(Value && v) : BasicJsonType *
+is_errored() constexpr const : bool
+key(string_t & val) : bool
+null() : bool
+number_float(number_float_t val, const string_t &) : bool
+number_integer(number_integer_t val) : bool
+number_unsigned(number_unsigned_t val) : bool
+parse_error<Exception>(std::size_t, const std::string &, const Exception & ex) : _Bool
+start_array(std::size_t len) : bool
+start_object(std::size_t len) : bool
+string(string_t & val) : bool
__
-allow_exceptions : const bool
-errored : bool
-m_lexer_ref : lexer_t *
-object_element : BasicJsonType *
-ref_stack : std::vector<BasicJsonType *>
-root : BasicJsonType &
}
class "::nlohmann::detail::json_sax_dom_callback_parser<BasicJsonType,InputAdapterType>" as C_0000397706670933694118
class C_0000397706670933694118 {
+json_sax_dom_callback_parser(BasicJsonType & r, parser_callback_t cb, const bool allow_exceptions_ = true, lexer_t * lexer_ = nullptr) : void
+json_sax_dom_callback_parser(const json_sax_dom_callback_parser<BasicJsonType,InputAdapterType> &) = deleted : void
+json_sax_dom_callback_parser(json_sax_dom_callback_parser<BasicJsonType,InputAdapterType> &&) = default : void
+~json_sax_dom_callback_parser() = default : void
..
+operator=(const json_sax_dom_callback_parser<BasicJsonType,InputAdapterType> &) = deleted : json_sax_dom_callback_parser<BasicJsonType,InputAdapterType> &
+operator=(json_sax_dom_callback_parser<BasicJsonType,InputAdapterType> &&) = default : json_sax_dom_callback_parser<BasicJsonType,InputAdapterType> &
..
+binary(binary_t & val) : bool
+boolean(bool val) : bool
+end_array() : bool
+end_object() : bool
-handle_value<Value>(Value && v, const bool skip_callback = false) : std::pair<_Bool, BasicJsonType *>
+is_errored() constexpr const : bool
+key(string_t & val) : bool
+null() : bool
+number_float(number_float_t val, const string_t &) : bool
+number_integer(number_integer_t val) : bool
+number_unsigned(number_unsigned_t val) : bool
+parse_error<Exception>(std::size_t, const std::string &, const Exception & ex) : _Bool
+start_array(std::size_t len) : bool
+start_object(std::size_t len) : bool
+string(string_t & val) : bool
__
-allow_exceptions : const bool
-callback : const parser_callback_t
-discarded : BasicJsonType
-errored : bool
-keep_stack : std::vector<bool>
-key_keep_stack : std::vector<bool>
-m_lexer_ref : lexer_t *
-object_element : BasicJsonType *
-ref_stack : std::vector<BasicJsonType *>
-root : BasicJsonType &
}
class "::nlohmann::detail::json_sax_acceptor<BasicJsonType>" as C_0006499754387027152172
class C_0006499754387027152172 {
+binary(binary_t &) : bool
+boolean(bool) : bool
+end_array() : bool
+end_object() : bool
+key(string_t &) : bool
+null() : bool
+number_float(number_float_t, const string_t &) : bool
+number_integer(number_integer_t) : bool
+number_unsigned(number_unsigned_t) : bool
+parse_error(std::size_t, const std::string &, const detail::exception &) : bool
+start_array(std::size_t  = detail::unknown_size()) : bool
+start_object(std::size_t  = detail::unknown_size()) : bool
+string(string_t &) : bool
__
}
class "::nlohmann::detail::is_sax<SAX,BasicJsonType>" as C_0006986089484001851754
class C_0006986089484001851754 {
__
{static} +value : const bool
}
class "::nlohmann::detail::is_sax_static_asserts<SAX,BasicJsonType>" as C_0012700037231473356891
class C_0012700037231473356891 {
__
}
enum "::nlohmann::detail::cbor_tag_handler_t" as C_0004679976416536424420
enum C_0004679976416536424420 {
error
ignore
store
}
class "::nlohmann::detail::binary_reader<BasicJsonType,InputAdapterType,SAX=json_sax_dom_parser<BasicJsonType, InputAdapterType>>" as C_0001132719292669958761
class C_0001132719292669958761 {
+binary_reader(InputAdapterType && adapter, const input_format_t format = input_format_t::json) noexcept : void
+binary_reader(const binary_reader<BasicJsonType,InputAdapterType,SAX> &) = deleted : void
+binary_reader(binary_reader<BasicJsonType,InputAdapterType,SAX> &&) = default : void
+~binary_reader() = default : void
..
+operator=(const binary_reader<BasicJsonType,InputAdapterType,SAX> &) = deleted : binary_reader<BasicJsonType,InputAdapterType,SAX> &
+operator=(binary_reader<BasicJsonType,InputAdapterType,SAX> &&) = default : binary_reader<BasicJsonType,InputAdapterType,SAX> &
..
{static} -byte_swap<NumberType>(NumberType & number) : void
-exception_message(const input_format_t format, const std::string & detail, const std::string & context) const : std::string
-get() : char_int_type
-get_binary<NumberType>(const input_format_t format, const NumberType len, binary_t & result) : _Bool
-get_bson_binary<NumberType>(const NumberType len, binary_t & result) : _Bool
-get_bson_cstr(string_t & result) : bool
-get_bson_string<NumberType>(const NumberType len, string_t & result) : _Bool
-get_cbor_array(const std::size_t len, const cbor_tag_handler_t tag_handler) : bool
-get_cbor_binary(binary_t & result) : bool
-get_cbor_object(const std::size_t len, const cbor_tag_handler_t tag_handler) : bool
-get_cbor_string(string_t & result) : bool
-get_ignore_noop() : char_int_type
-get_msgpack_array(const std::size_t len) : bool
-get_msgpack_binary(binary_t & result) : bool
-get_msgpack_object(const std::size_t len) : bool
-get_msgpack_string(string_t & result) : bool
-get_number<NumberType,_Bool InputIsLittleEndian=false>(const input_format_t format, NumberType & result) : _Bool
-get_string<NumberType>(const input_format_t format, const NumberType len, string_t & result) : _Bool
-get_to<T>(T & dest, const input_format_t format, const char * context) : _Bool
-get_token_string() const : std::string
-get_ubjson_array() : bool
-get_ubjson_high_precision_number() : bool
-get_ubjson_ndarray_size(std::vector<size_t> & dim) : bool
-get_ubjson_object() : bool
-get_ubjson_size_type(std::pair<std::size_t,char_int_type> & result, bool inside_ndarray = false) : bool
-get_ubjson_size_value(std::size_t & result, bool & is_ndarray, char_int_type prefix = 0) : bool
-get_ubjson_string(string_t & result, const bool get_char = true) : bool
-get_ubjson_value(const char_int_type prefix) : bool
-parse_bson_array() : bool
-parse_bson_element_internal(const char_int_type element_type, const std::size_t element_type_parse_position) : bool
-parse_bson_element_list(const bool is_array) : bool
-parse_bson_internal() : bool
-parse_cbor_internal(const bool get_char, const cbor_tag_handler_t tag_handler) : bool
-parse_msgpack_internal() : bool
-parse_ubjson_internal(const bool get_char = true) : bool
+sax_parse(const input_format_t format, json_sax_t * sax_, const bool strict = true, const cbor_tag_handler_t tag_handler = cbor_tag_handler_t::error) : bool
-unexpect_eof(const input_format_t format, const char * context) const : bool
__
-bjd_optimized_type_markers : const decltype(make_array<char_int_type>('F','H','N','S','T','Z','[','{'))
-bjd_types_map : const decltype(make_array<bjd_type>(bjd_type{'B',"byte"},bjd_type{'C',"char"},bjd_type{'D',"double"},bjd_type{'I',"int16"},bjd_type{'L',"int64"},bjd_type{'M',"uint64"},bjd_type{'U',"uint8"},bjd_type{'d',"single"},bjd_type{'i',"int8"},bjd_type{'l',"int32"},bjd_type{'m',"uint32"},bjd_type{'u',"uint16"}))
-chars_read : std::size_t
-current : char_int_type
-ia : InputAdapterType
-input_format : const input_format_t
-is_little_endian : const bool
{static} -npos : const std::size_t
-sax : json_sax_t *
}
enum "::nlohmann::detail::parse_event_t" as C_0014167386448206763714
enum C_0014167386448206763714 {
object_start
object_end
array_start
array_end
key
value
}
class "::nlohmann::detail::parser<BasicJsonType,InputAdapterType>" as C_0003475126511257489795
class C_0003475126511257489795 {
+parser(InputAdapterType && adapter, parser_callback_t<BasicJsonType> cb = nullptr, const bool allow_exceptions_ = true, const bool ignore_comments = false, const bool ignore_trailing_commas_ = false) : void
..
+accept(const bool strict = true) : bool
-exception_message(const token_type expected, const std::string & context) : std::string
-get_token() : token_type
+parse(const bool strict, BasicJsonType & result) : void
+sax_parse<SAX>(SAX * sax, const bool strict = true) : _Bool
-sax_parse_internal<SAX>(SAX * sax) : _Bool
__
-allow_exceptions : const bool
-callback : const parser_callback_t<BasicJsonType>
-ignore_trailing_commas : const bool
-last_token : token_type
-m_lexer : lexer_t
}
class "::nlohmann::detail::primitive_iterator_t" as C_0002140325376960758468
class C_0002140325376960758468 {
+operator+(difference_type n) noexcept : primitive_iterator_t
+operator++() noexcept : primitive_iterator_t &
+operator++(int) noexcept : primitive_iterator_t
+operator+=(difference_type n) noexcept : primitive_iterator_t &
+operator--() noexcept : primitive_iterator_t &
+operator--(int) noexcept : primitive_iterator_t
+operator-=(difference_type n) noexcept : primitive_iterator_t &
..
+get_value() constexpr const noexcept : difference_type
+is_begin() constexpr const noexcept : bool
+is_end() constexpr const noexcept : bool
+set_begin() noexcept : void
+set_end() noexcept : void
__
{static} -begin_value : const difference_type
{static} -end_value : const difference_type
-m_it : difference_type
}
class "::nlohmann::detail::internal_iterator<BasicJsonType>" as C_0012222963126016674741
class C_0012222963126016674741 {
__
+array_iterator : typename BasicJsonType::array_t::iterator
+object_iterator : typename BasicJsonType::object_t::iterator
+primitive_iterator : primitive_iterator_t
}
class "::nlohmann::detail::iter_impl<BasicJsonType const>" as C_0000980121232047552291
class C_0000980121232047552291 {
__
}
class "::nlohmann::detail::iter_impl<typename std::remove_const<BasicJsonType>::type>" as C_0016728699670600112306
class C_0016728699670600112306 {
__
}
class "::nlohmann::detail::internal_iterator<typename std::remove_const<BasicJsonType>::type>" as C_0011974418780336300573
class C_0011974418780336300573 {
__
}
class "::nlohmann::detail::iter_impl<BasicJsonType>" as C_0000214903283525339790
class C_0000214903283525339790 {
+iter_impl() = default : void
+iter_impl(iter_impl<BasicJsonType> &&) noexcept = default : void
+iter_impl(pointer object) noexcept : void
+iter_impl(const iter_impl<const BasicJsonType> & other) noexcept : void
+iter_impl(const iter_impl<typename std::remove_const<BasicJsonType>::type> & other) noexcept : void
+~iter_impl() = default : void
..
+operator=(iter_impl<BasicJsonType> &&) noexcept = default : iter_impl<BasicJsonType> &
..
+operator(const iter_impl<BasicJsonType> & other) const : bool
+operator(const iter_impl<BasicJsonType> & other) const : bool
+operator!=<IterImpl,detail::enable_if_t<(std::is_same<IterImpl, iter_impl<BasicJsonType> >::value || std::is_same<IterImpl, other_iter_impl>::value), std::nullptr_t>=nullptr>(const IterImpl & other) const : _Bool
+operator*() const : reference
+operator+(difference_type i) const : iter_impl<BasicJsonType>
+operator++(int) : iter_impl<BasicJsonType>
+operator++() : iter_impl<BasicJsonType> &
+operator+=(difference_type i) : iter_impl<BasicJsonType> &
+operator-(difference_type i) const : iter_impl<BasicJsonType>
+operator-(const iter_impl<BasicJsonType> & other) const : difference_type
+operator--(int) : iter_impl<BasicJsonType>
+operator--() : iter_impl<BasicJsonType> &
+operator-=(difference_type i) : iter_impl<BasicJsonType> &
+operator->() const : pointer
+operator=(const iter_impl<const BasicJsonType> & other) noexcept : iter_impl<BasicJsonType> &
+operator=(const iter_impl<typename std::remove_const<BasicJsonType>::type> & other) noexcept : iter_impl<BasicJsonType> &
+operator==<IterImpl,detail::enable_if_t<(std::is_same<IterImpl, iter_impl<BasicJsonType> >::value || std::is_same<IterImpl, other_iter_impl>::value), std::nullptr_t>=nullptr>(const IterImpl & other) const : _Bool
+operator>(const iter_impl<BasicJsonType> & other) const : bool
+operator>=(const iter_impl<BasicJsonType> & other) const : bool
+operator[](difference_type n) const : reference
..
+key() const : const typename object_t::key_type &
-set_begin() noexcept : void
-set_end() noexcept : void
+value() const : reference
__
-m_it : internal_iterator<typename std::remove_const<BasicJsonType>::type>
-m_object : pointer
}
class "::nlohmann::detail::json_reverse_iterator<Base>" as C_0004789242766678850930
class C_0004789242766678850930 {
+json_reverse_iterator(const typename base_iterator::iterator_type & it) noexcept : void
+json_reverse_iterator(const base_iterator & it) noexcept : void
..
+operator+(difference_type i) const : json_reverse_iterator<Base>
+operator++(int) : json_reverse_iterator<Base>
+operator++() : json_reverse_iterator<Base> &
+operator+=(difference_type i) : json_reverse_iterator<Base> &
+operator-(difference_type i) const : json_reverse_iterator<Base>
+operator-(const json_reverse_iterator<Base> & other) const : difference_type
+operator--(int) : json_reverse_iterator<Base>
+operator--() : json_reverse_iterator<Base> &
+operator[](difference_type n) const : reference
..
+key() const : decltype(std::declval<Base>().key())
+value() const : reference
__
}
class "::nlohmann::detail::json_default_base" as C_0006286910116030241869
class C_0006286910116030241869 {
__
}
class "::nlohmann::detail::json_ref<BasicJsonType>" as C_0008437439238484674351
class C_0008437439238484674351 {
+json_ref(value_type && value) : void
+json_ref(const value_type & value) : void
+json_ref(std::initializer_list<json_ref<type-parameter-0-0>> init) : void
+json_ref(json_ref<type-parameter-0-0> &&) noexcept = default : void
+json_ref(const json_ref<type-parameter-0-0> &) = deleted : void
+json_ref<Args...,enable_if_t<std::is_constructible<value_type, Args...>::value, int>=0>(Args &&... args) : void
+~json_ref() = default : void
..
+operator=(const json_ref<type-parameter-0-0> &) = deleted : json_ref<type-parameter-0-0> &
+operator=(json_ref<type-parameter-0-0> &&) = deleted : json_ref<type-parameter-0-0> &
..
+operator*() const : const value_type &
+operator->() const : const value_type *
..
+moved_or_copied() const : value_type
__
-owned_value : value_type
-value_ref : const value_type *
}
abstract "::nlohmann::detail::output_adapter_protocol<CharType>" as C_0003964592163109186449
abstract C_0003964592163109186449 {
+output_adapter_protocol() = default : void
+output_adapter_protocol(const output_adapter_protocol<CharType> &) = default : void
+output_adapter_protocol(output_adapter_protocol<CharType> &&) noexcept = default : void
+~output_adapter_protocol() = default : void
..
+operator=(const output_adapter_protocol<CharType> &) = default : output_adapter_protocol<CharType> &
+operator=(output_adapter_protocol<CharType> &&) noexcept = default : output_adapter_protocol<CharType> &
..
{abstract} +write_character(CharType c) = 0 : void
{abstract} +write_characters(const CharType * s, std::size_t length) = 0 : void
__
}
class "::nlohmann::detail::output_vector_adapter<CharType,AllocatorType=std::allocator<CharType>>" as C_0002019726958066453062
class C_0002019726958066453062 {
+output_vector_adapter(std::vector<CharType,AllocatorType> & vec) noexcept : void
..
+write_character(CharType c) : void
+write_characters(const CharType * s, std::size_t length) : void
__
-v : std::vector<CharType,AllocatorType> &
}
class "::nlohmann::detail::output_stream_adapter<CharType>" as C_0017758658371578109305
class C_0017758658371578109305 {
+output_stream_adapter(std::basic_ostream<CharType> & s) noexcept : void
..
+write_character(CharType c) : void
+write_characters(const CharType * s, std::size_t length) : void
__
-stream : std::basic_ostream<CharType> &
}
class "::nlohmann::detail::output_string_adapter<CharType,StringType=std::basic_string<CharType>>" as C_0017165405306620593919
class C_0017165405306620593919 {
+output_string_adapter(StringType & s) noexcept : void
..
+write_character(CharType c) : void
+write_characters(const CharType * s, std::size_t length) : void
__
-str : StringType &
}
class "::nlohmann::detail::output_adapter<CharType,StringType=std::basic_string<CharType>>" as C_0007832261217543977815
class C_0007832261217543977815 {
+output_adapter(std::basic_ostream<CharType> & s) : void
+output_adapter(StringType & s) : void
+output_adapter<AllocatorType=std::allocator<CharType>>(std::vector<CharType,AllocatorType> & vec) : void
..
+operator shared_ptr() : output_adapter_t<CharType>
__
-oa : output_adapter_t<CharType>
}
enum "::nlohmann::detail::bjdata_version_t" as C_0014409290388128406787
enum C_0014409290388128406787 {
draft2
draft3
}
class "::nlohmann::detail::binary_writer<BasicJsonType,CharType>" as C_0017094469583249189690
class C_0017094469583249189690 {
+binary_writer(output_adapter_t<CharType> adapter) : void
..
{static} -calc_bson_array_size(const typename BasicJsonType::array_t & value) : std::size_t
{static} -calc_bson_binary_size(const typename BasicJsonType::binary_t & value) : std::size_t
{static} -calc_bson_element_size(const string_t & name, const BasicJsonType & j) : std::size_t
{static} -calc_bson_entry_header_size(const string_t & name, const BasicJsonType & j) : std::size_t
{static} -calc_bson_integer_size(const std::int64_t value) : std::size_t
{static} -calc_bson_object_size(const typename BasicJsonType::object_t & value) : std::size_t
{static} -calc_bson_string_size(const string_t & value) : std::size_t
{static} -calc_bson_unsigned_size(const std::uint64_t value) constexpr noexcept : std::size_t
{static} -get_cbor_float_prefix(double) constexpr : CharType
{static} -get_cbor_float_prefix(float) constexpr : CharType
{static} -get_msgpack_float_prefix(float) constexpr : CharType
{static} -get_msgpack_float_prefix(double) constexpr : CharType
{static} -get_ubjson_float_prefix(double) constexpr : CharType
{static} -get_ubjson_float_prefix(float) constexpr : CharType
{static} +to_char_type<C=CharType,enable_if_t<std::is_signed<C>::value && std::is_unsigned<char>::value> *=nullptr>(std::uint8_t x) noexcept : CharType
{static} +to_char_type<C=CharType,enable_if_t<std::is_unsigned<C>::value> *=nullptr>(std::uint8_t x) constexpr noexcept : CharType
{static} +to_char_type<InputCharType,C=CharType,enable_if_t<std::is_signed<C>::value && std::is_signed<char>::value && std::is_same<char, typename std::remove_cv<InputCharType>::type>::value> *=nullptr>(InputCharType x) constexpr noexcept : CharType
{static} +to_char_type<C=CharType,enable_if_t<std::is_signed<C>::value && std::is_signed<char>::value> *=nullptr>(std::uint8_t x) constexpr noexcept : CharType
-ubjson_prefix(const BasicJsonType & j, const bool use_bjdata) const noexcept : CharType
-write_bjdata_ndarray(const typename BasicJsonType::object_t & value, const bool use_count, const bool use_type, const bjdata_version_t bjdata_version) : bool
+write_bson(const BasicJsonType & j) : void
-write_bson_array(const string_t & name, const typename BasicJsonType::array_t & value) : void
-write_bson_binary(const string_t & name, const binary_t & value) : void
-write_bson_boolean(const string_t & name, const bool value) : void
-write_bson_double(const string_t & name, const double value) : void
-write_bson_element(const string_t & name, const BasicJsonType & j) : void
-write_bson_entry_header(const string_t & name, const std::uint8_t element_type) : void
-write_bson_integer(const string_t & name, const std::int64_t value) : void
-write_bson_null(const string_t & name) : void
-write_bson_object(const typename BasicJsonType::object_t & value) : void
-write_bson_object_entry(const string_t & name, const typename BasicJsonType::object_t & value) : void
-write_bson_string(const string_t & name, const string_t & value) : void
-write_bson_unsigned(const string_t & name, const BasicJsonType & j) : void
+write_cbor(const BasicJsonType & j) : void
-write_compact_float(const number_float_t n, detail::input_format_t format) : void
+write_msgpack(const BasicJsonType & j) : void
-write_number<NumberType>(const NumberType n, const bool OutputIsLittleEndian = false) : void
-write_number_with_ubjson_prefix<NumberType,typename std::enable_if<std::is_floating_point<NumberType>::value, int>::type=0>(const NumberType n, const bool add_prefix, const bool use_bjdata) : void
-write_number_with_ubjson_prefix<NumberType,typename std::enable_if<std::is_unsigned<NumberType>::value, int>::type=0>(const NumberType n, const bool add_prefix, const bool use_bjdata) : void
-write_number_with_ubjson_prefix<NumberType,typename std::enable_if<std::is_signed<NumberType>::value && !std::is_floating_point<NumberType>::value, int>::type=0>(const NumberType n, const bool add_prefix, const bool use_bjdata) : void
+write_ubjson(const BasicJsonType & j, const bool use_count, const bool use_type, const bool add_prefix = true, const bool use_bjdata = false, const bjdata_version_t bjdata_version = bjdata_version_t::draft2) : void
__
-is_little_endian : const bool
-oa : output_adapter_t<CharType>
}
class "::nlohmann::detail::dtoa_impl::diyfp" as C_0000235281456725890462
class C_0000235281456725890462 {
+diyfp(std::uint64_t f_, int e_) noexcept : void
..
{static} +mul(const diyfp & x, const diyfp & y) noexcept : diyfp
{static} +normalize(diyfp x) noexcept : diyfp
{static} +normalize_to(const diyfp & x, const int target_exponent) noexcept : diyfp
{static} +sub(const diyfp & x, const diyfp & y) noexcept : diyfp
__
+e : int
+f : std::uint64_t
{static} +kPrecision : const int
}
class "::nlohmann::detail::dtoa_impl::boundaries" as C_0012009832844553155212
class C_0012009832844553155212 {
__
+minus : diyfp
+plus : diyfp
+w : diyfp
}
class "::nlohmann::detail::dtoa_impl::cached_power" as C_0000299876450521222778
class C_0000299876450521222778 {
__
+e : int
+f : std::uint64_t
+k : int
}
enum "::nlohmann::detail::error_handler_t" as C_0017562012376225285899
enum C_0017562012376225285899 {
strict
replace
ignore
}
class "::nlohmann::detail::output_adapter_protocol<char>" as C_0013791808793373566873
class C_0013791808793373566873 {
__
}
class "::nlohmann::detail::serializer<BasicJsonType>" as C_0006902772873057495275
class C_0006902772873057495275 {
+serializer(output_adapter_t<char> s, const char ichar, error_handler_t error_handler_ = error_handler_t::strict) : void
+serializer(const serializer<BasicJsonType> &) = deleted : void
+serializer(serializer<BasicJsonType> &&) = deleted : void
+~serializer() = default : void
..
+operator=(const serializer<BasicJsonType> &) = deleted : serializer<BasicJsonType> &
+operator=(serializer<BasicJsonType> &&) = deleted : serializer<BasicJsonType> &
..
-count_digits(number_unsigned_t x) noexcept : unsigned int
{static} -decode(std::uint8_t & state, std::uint32_t & codep, const std::uint8_t byte) noexcept : std::uint8_t
+dump(const BasicJsonType & val, const bool pretty_print, const bool ensure_ascii, const unsigned int indent_step, const unsigned int current_indent = 0) : void
-dump_escaped(const string_t & s, const bool ensure_ascii) : void
-dump_float(number_float_t x) : void
-dump_float(number_float_t x, std::true_type) : void
-dump_float(number_float_t x, std::false_type) : void
-dump_integer<NumberType,detail::enable_if_t<std::is_integral<NumberType>::value || std::is_same<NumberType, number_unsigned_t>::value || std::is_same<NumberType, number_integer_t>::value || std::is_same<NumberType, binary_char_t>::value, int>=0>(NumberType x) : void
{static} -hex_bytes(std::uint8_t byte) : std::string
-is_negative_number<NumberType,enable_if_t<std::is_signed<NumberType>::value, int>=0>(NumberType x) : _Bool
-is_negative_number<NumberType,enable_if_t<std::is_unsigned<NumberType>::value, int>=0>(NumberType) : _Bool
-remove_sign(number_unsigned_t x) : number_unsigned_t
-remove_sign(number_integer_t x) noexcept : number_unsigned_t
__
{static} -UTF8_ACCEPT : const std::uint8_t
{static} -UTF8_REJECT : const std::uint8_t
-decimal_point : const char
-error_handler : const error_handler_t
-indent_char : const char
-indent_string : string_t
-loc : const std::lconv *
-number_buffer : std::array<char,64>
-o : output_adapter_t<char>
-string_buffer : std::array<char,512>
-thousands_sep : const char
}
class "::nlohmann::detail::iter_impl<basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>>" as C_0005906445652397385174
class C_0005906445652397385174 {
__
}
class "::nlohmann::detail::json_ref<basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>>" as C_0007214016775132775361
class C_0007214016775132775361 {
__
}
class "::nlohmann::detail::json_reverse_iterator<nlohmann::basic_json::iter_impl<basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>>>" as C_0018190389434112853768
class C_0018190389434112853768 {
__
}
class "::nlohmann::detail::iteration_proxy<nlohmann::basic_json::iter_impl<basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>>>" as C_0001796107616732404770
class C_0001796107616732404770 {
__
}
class "::nlohmann::detail::output_adapter<uint8_t>" as C_0016177209754425373221
class C_0016177209754425373221 {
__
}
class "::nlohmann::detail::output_adapter<char>" as C_0014379797749062527144
class C_0014379797749062527144 {
__
}
class "::nlohmann::detail::priority_tag<1>" as C_0006656470767880963391
class C_0006656470767880963391 {
__
}
class "::nlohmann::detail::priority_tag<2>" as C_0006657453731276394800
class C_0006657453731276394800 {
__
}
class "::nlohmann::detail::priority_tag<3>" as C_0006658441092718339053
class C_0006658441092718339053 {
__
}
class "::nlohmann::detail::priority_tag<4>" as C_0006659424056113770462
class C_0006659424056113770462 {
__
}
class "::nlohmann::detail::json_base_class<CustomBaseClass>" as C_0017579432404403852004
class C_0017579432404403852004 {
__
}
class "::nlohmann::detail::iteration_proxy<Iterator>" as C_0005323843489718286265
class C_0005323843489718286265 {
__
}
class "::nlohmann::detail::binary_reader<basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>,InputType>" as C_0000264343333966433378
class C_0000264343333966433378 {
__
}
class "::nlohmann::detail::binary_writer<basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>,CharType>" as C_0008925428260237146618
class C_0008925428260237146618 {
__
}
class "::nlohmann::detail::actual_object_comparator_t<basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>>" as C_0001312628201749139443
class C_0001312628201749139443 {
__
}
class "::nlohmann::detail::is_comparable<nlohmann::detail::actual_object_comparator_t<basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>>,const typename object_t::key_type &,KeyType>" as C_0007619769105314755569
class C_0007619769105314755569 {
__
}
class "::nlohmann::detail::value_in_range_of_impl1<OfType,T,_Bool NeverOutOfRange=never_out_of_range<OfType, T>::value,typename=detail::enable_if_t<all_integral<OfType, T>::value>>" as C_0001072375176681338427
class C_0001072375176681338427 {
__
}
class "::nlohmann::detail::parser<BasicJsonType,InputType>" as C_0001875169804233302258
class C_0001875169804233302258 {
__
}
class "::nlohmann::detail::binary_reader<BasicJsonType,InputType,SAX>" as C_0003719820232337782558
class C_0003719820232337782558 {
__
}
class "::nlohmann::detail::external_constructor<value_t>" as C_0005359400944107636849
class C_0005359400944107636849 {
__
}
class "::nlohmann::detail::value_in_range_of_impl2<OfType,T,_Bool OfTypeSigned=std::is_signed<OfType>::value,_Bool TSigned=std::is_signed<T>::value>" as C_0009137768992691744710
class C_0009137768992691744710 {
__
}
class "::nlohmann::detail::json_ref<typename>" as C_0009593016138778439160
class C_0009593016138778439160 {
__
}
class "::nlohmann::detail::external_constructor<detail::value_t>" as C_0015814606520349875088
class C_0015814606520349875088 {
__
}
class "::nlohmann::detail::wide_string_input_helper<BaseInputAdapter,size_t T>" as C_0016176728632403541834
class C_0016176728632403541834 {
__
}
class "::nlohmann::detail2::begin_tag" as C_0009939198450379868551
class C_0009939198450379868551 {
__
}
class "::nlohmann::detail2::would_call_std_begin<T...>" as C_0017172492572927389477
class C_0017172492572927389477 {
__
{static} +value : const auto
}
class "::nlohmann::detail2::end_tag" as C_0000785099130831324683
class C_0000785099130831324683 {
__
}
class "::nlohmann::detail2::would_call_std_end<T...>" as C_0012786878856479145045
class C_0012786878856479145045 {
__
{static} +value : const auto
}
class "::nlohmann::would_call_std_begin<T...>" as C_0012103242131726258080
class C_0012103242131726258080 {
__
}
class "::nlohmann::would_call_std_end<T...>" as C_0017000360236316607292
class C_0017000360236316607292 {
__
}
class "::nlohmann::basic_json<(anonymous),(anonymous),StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,(anonymous),(anonymous),BinaryType,CustomBaseClass>" as C_0014934282435397205555
class C_0014934282435397205555 {
__
}
class "::nlohmann::adl_serializer<ValueType=void,typename=void>" as C_0008711924302124692770
class C_0008711924302124692770 {
{static} +from_json<BasicJsonType,TargetType=ValueType>(BasicJsonType && j, TargetType & val) noexcept : decltype(::nlohmann::from_json(std::forward<BasicJsonType>(j), val) , void())
{static} +from_json<BasicJsonType,TargetType=ValueType>(BasicJsonType && j) noexcept : decltype(::nlohmann::from_json(std::forward<BasicJsonType>(j), detail::identity_tag<TargetType>{}))
{static} +to_json<BasicJsonType,TargetType=ValueType>(BasicJsonType & j, TargetType && val) noexcept : decltype(::nlohmann::to_json(j, std::forward<TargetType>(val)) , void())
__
}
class "::nlohmann::byte_container_with_subtype<BinaryType>" as C_0011342400754638986813
class C_0011342400754638986813 {
+byte_container_with_subtype() noexcept : void
+byte_container_with_subtype(const container_type & b) noexcept : void
+byte_container_with_subtype(container_type && b) noexcept : void
+byte_container_with_subtype(const container_type & b, subtype_type subtype_) noexcept : void
+byte_container_with_subtype(container_type && b, subtype_type subtype_) noexcept : void
..
+operator!=(const byte_container_with_subtype<BinaryType> & rhs) const : bool
+operator==(const byte_container_with_subtype<BinaryType> & rhs) const : bool
..
+clear_subtype() noexcept : void
+has_subtype() constexpr const noexcept : bool
+set_subtype(subtype_type subtype_) noexcept : void
+subtype() constexpr const noexcept : subtype_type
__
-m_has_subtype : bool
-m_subtype : subtype_type
}
abstract "::nlohmann::json_sax<BasicJsonType>" as C_0017245355991805481171
abstract C_0017245355991805481171 {
+json_sax() = default : void
+json_sax(const json_sax<BasicJsonType> &) = default : void
+json_sax(json_sax<BasicJsonType> &&) noexcept = default : void
+~json_sax() = default : void
..
+operator=(const json_sax<BasicJsonType> &) = default : json_sax<BasicJsonType> &
+operator=(json_sax<BasicJsonType> &&) noexcept = default : json_sax<BasicJsonType> &
..
{abstract} +binary(binary_t & val) = 0 : bool
{abstract} +boolean(bool val) = 0 : bool
{abstract} +end_array() = 0 : bool
{abstract} +end_object() = 0 : bool
{abstract} +key(string_t & val) = 0 : bool
{abstract} +null() = 0 : bool
{abstract} +number_float(number_float_t val, const string_t & s) = 0 : bool
{abstract} +number_integer(number_integer_t val) = 0 : bool
{abstract} +number_unsigned(number_unsigned_t val) = 0 : bool
{abstract} +parse_error(std::size_t position, const std::string & last_token, const detail::exception & ex) = 0 : bool
{abstract} +start_array(std::size_t elements) = 0 : bool
{abstract} +start_object(std::size_t elements) = 0 : bool
{abstract} +string(string_t & val) = 0 : bool
__
}
class "::nlohmann::json_pointer<nlohmann::json_pointer::string_t>" as C_0002823094918210814555
class C_0002823094918210814555 {
__
}
class "::nlohmann::json_pointer<RefStringType>" as C_0000089368552579575884
class C_0000089368552579575884 {
+json_pointer(const string_t & s = "") : void
..
+operator/=(const json_pointer<RefStringType> & ptr) : json_pointer<RefStringType> &
+operator/=(string_t token) : json_pointer<RefStringType> &
+operator/=(std::size_t array_idx) : json_pointer<RefStringType> &
..
{static} -array_index<BasicJsonType>(const string_t & s) : typename BasicJsonType::size_type
+back() const : const string_t &
-contains<BasicJsonType>(const BasicJsonType * ptr) const : _Bool
-convert() const : json_pointer<string_t>
-convert() : json_pointer<string_t>
+empty() const noexcept : bool
{static} -flatten<BasicJsonType>(const string_t & reference_string, const BasicJsonType & value, BasicJsonType & result) : void
-get_and_create<BasicJsonType>(BasicJsonType & j) const : BasicJsonType &
-get_checked<BasicJsonType>(BasicJsonType * ptr) const : BasicJsonType &
-get_checked<BasicJsonType>(const BasicJsonType * ptr) const : const BasicJsonType &
-get_unchecked<BasicJsonType>(BasicJsonType * ptr) const : BasicJsonType &
-get_unchecked<BasicJsonType>(const BasicJsonType * ptr) const : const BasicJsonType &
+operator typename string_t_helper() const : string_t
+parent_pointer() const : json_pointer<RefStringType>
+pop_back() : void
+push_back(const string_t & token) : void
+push_back(string_t && token) : void
{static} -split(const string_t & reference_string) : std::vector<string_t>
+to_string() const : string_t
-top() const : json_pointer<RefStringType>
{static} -unflatten<BasicJsonType>(const BasicJsonType & value) : BasicJsonType
__
-reference_tokens : std::vector<string_t>
}
class "::nlohmann::json_pointer::string_t_helper<T>" as C_0009942378099335048691
class C_0009942378099335048691 {
__
}
class "::nlohmann::json_pointer::string_t_helper<nlohmann::basic_json<(anonymous),(anonymous),StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,(anonymous),(anonymous),BinaryType,CustomBaseClass>>" as C_0006223594193132192555
class C_0006223594193132192555 {
__
}
class "::nlohmann::ordered_map<Key,T,IgnoredLess=std::less<Key>,Allocator=std::allocator<std::pair<const Key, T>>>" as C_0003528135397299469723
class C_0003528135397299469723 {
+ordered_map() noexcept : void
+ordered_map(const Allocator & alloc) noexcept : void
+ordered_map(std::initializer_list<value_type> init, const Allocator & alloc = Allocator()) : void
+ordered_map<It>(It first, It last, const Allocator & alloc = Allocator()) : void
..
+operator[](const key_type & key) : T &
+operator[](const key_type & key) const : const T &
+operator[]<KeyType,detail::enable_if_t<detail::is_usable_as_key_type<key_compare, key_type, KeyType>::value, int>=0>(KeyType && key) : T &
+operator[]<KeyType,detail::enable_if_t<detail::is_usable_as_key_type<key_compare, key_type, KeyType>::value, int>=0>(KeyType && key) const : const T &
..
+at(const key_type & key) : T &
+at(const key_type & key) const : const T &
+at<KeyType,detail::enable_if_t<detail::is_usable_as_key_type<key_compare, key_type, KeyType>::value, int>=0>(KeyType && key) : T &
+at<KeyType,detail::enable_if_t<detail::is_usable_as_key_type<key_compare, key_type, KeyType>::value, int>=0>(KeyType && key) const : const T &
+count(const key_type & key) const : size_type
+count<KeyType,detail::enable_if_t<detail::is_usable_as_key_type<key_compare, key_type, KeyType>::value, int>=0>(KeyType && key) const : size_type
+emplace(const key_type & key, T && t) : std::pair<iterator,bool>
+emplace<KeyType,detail::enable_if_t<detail::is_usable_as_key_type<key_compare, key_type, KeyType>::value, int>=0>(KeyType && key, T && t) : std::pair<iterator, _Bool>
+erase(const key_type & key) : size_type
+erase(iterator pos) : iterator
+erase(iterator first, iterator last) : iterator
+erase<KeyType,detail::enable_if_t<detail::is_usable_as_key_type<key_compare, key_type, KeyType>::value, int>=0>(KeyType && key) : size_type
+find(const key_type & key) : iterator
+find(const key_type & key) const : const_iterator
+find<KeyType,detail::enable_if_t<detail::is_usable_as_key_type<key_compare, key_type, KeyType>::value, int>=0>(KeyType && key) : iterator
+insert(value_type && value) : std::pair<iterator,bool>
+insert(const value_type & value) : std::pair<iterator,bool>
+insert<InputIt,typename=require_input_iter<InputIt>>(InputIt first, InputIt last) : void
__
-m_compare : key_compare
}
class "::nlohmann::json_pointer<StringType>" as C_0001273001567991732395
class C_0001273001567991732395 {
__
}
class "::nlohmann::json_pointer<BasicJsonType>" as C_0014226678465228549040
class C_0014226678465228549040 {
__
}
class "::nlohmann::basic_json<ObjectType<>=std::map,ArrayType<>=std::vector,StringType=std::string,BooleanType=bool,NumberIntegerType=std::int64_t,NumberUnsignedType=std::uint64_t,NumberFloatType=double,AllocatorType<>=std::allocator,JSONSerializer<>=nlohmann::adl_serializer,BinaryType=std::vector<std::uint8_t>,CustomBaseClass=void>" as C_0013976964827490787623
class C_0013976964827490787623 {
+basic_json(const value_t v) : void
+basic_json(std::nullptr_t  = nullptr) noexcept : void
+basic_json(initializer_list_t init, bool type_deduction = true, value_t manual_type = value_t::array) : void
+basic_json(size_type cnt, const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & val) : void
+basic_json(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & other) : void
+basic_json(basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> && other) noexcept : void
+basic_json<CompatibleType,U=detail::uncvref_t<CompatibleType>,detail::enable_if_t<!detail::is_basic_json<U>::value && detail::is_compatible_type<basic_json_t, U>::value, int>=0>(CompatibleType && val) noexcept : void
+basic_json<BasicJsonType,detail::enable_if_t<detail::is_basic_json<BasicJsonType>::value && !std::is_same<basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>, BasicJsonType>::value, int>=0>(const BasicJsonType & val) : void
+basic_json<InputIT,typename std::enable_if<std::is_same<InputIT, typename nlohmann::basic_json::iterator>::value || std::is_same<InputIT, typename nlohmann::basic_json::const_iterator>::value, int>::type=0>(InputIT first, InputIT last) : void
+basic_json<JsonRef,detail::enable_if_t<detail::conjunction<detail::is_json_ref<JsonRef>, std::is_same<typename JsonRef::value_type, basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass> > >::value, int>=0>(const JsonRef & ref) : void
+~basic_json() noexcept : void
..
+operator=(basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> other) noexcept : basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> &
..
+operator+=(basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> && val) : reference
+operator+=(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & val) : reference
+operator+=(const typename object_t::value_type & val) : reference
+operator+=(initializer_list_t init) : reference
+operator[](size_type idx) : reference
+operator[](size_type idx) const : const_reference
+operator[](typename object_t::key_type key) : reference
+operator[](const typename object_t::key_type & key) const : const_reference
+operator[](const json_pointer & ptr) : reference
+operator[](const json_pointer & ptr) const : const_reference
+operator[]<T>(T * key) : reference
+operator[]<T>(T * key) const : const_reference
+operator[]<KeyType,detail::enable_if_t<detail::is_usable_as_basic_json_key_type<basic_json_t, KeyType>::value, int>=0>(KeyType && key) : reference
+operator[]<KeyType,detail::enable_if_t<detail::is_usable_as_basic_json_key_type<basic_json_t, KeyType>::value, int>=0>(KeyType && key) const : const_reference
+operator[]<BasicJsonType,detail::enable_if_t<detail::is_basic_json<BasicJsonType>::value, int>=0>(const ::nlohmann::json_pointer<BasicJsonType> & ptr) : reference
+operator[]<BasicJsonType,detail::enable_if_t<detail::is_basic_json<BasicJsonType>::value, int>=0>(const ::nlohmann::json_pointer<BasicJsonType> & ptr) const : const_reference
..
{static} +accept<InputType>(InputType && i, const bool ignore_comments = false, const bool ignore_trailing_commas = false) : _Bool
{static} +accept<IteratorType>(IteratorType first, IteratorType last, const bool ignore_comments = false, const bool ignore_trailing_commas = false) : _Bool
{static} +accept(detail::span_input_adapter && i, const bool ignore_comments = false, const bool ignore_trailing_commas = false) : bool
{static} +array(initializer_list_t init = {}) : basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>
-assert_invariant(bool check_parents = true) const noexcept : void
+at(size_type idx) const : const_reference
+at(const typename object_t::key_type & key) const : const_reference
+at<KeyType,detail::enable_if_t<detail::is_usable_as_basic_json_key_type<basic_json_t, KeyType>::value, int>=0>(KeyType && key) const : const_reference
+at(const typename object_t::key_type & key) : reference
+at<KeyType,detail::enable_if_t<detail::is_usable_as_basic_json_key_type<basic_json_t, KeyType>::value, int>=0>(KeyType && key) : reference
+at<BasicJsonType,detail::enable_if_t<detail::is_basic_json<BasicJsonType>::value, int>=0>(const ::nlohmann::json_pointer<BasicJsonType> & ptr) const : const_reference
+at(size_type idx) : reference
+at(const json_pointer & ptr) const : const_reference
+at(const json_pointer & ptr) : reference
+at<BasicJsonType,detail::enable_if_t<detail::is_basic_json<BasicJsonType>::value, int>=0>(const ::nlohmann::json_pointer<BasicJsonType> & ptr) : reference
+back() const : const_reference
+back() : reference
+begin() const noexcept : const_iterator
+begin() noexcept : iterator
{static} +binary(const typename binary_t::container_type & init) : basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>
{static} +binary(const typename binary_t::container_type & init, typename binary_t::subtype_type subtype) : basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>
{static} +binary(typename binary_t::container_type && init) : basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>
{static} +binary(typename binary_t::container_type && init, typename binary_t::subtype_type subtype) : basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>
+cbegin() const noexcept : const_iterator
+cend() const noexcept : const_iterator
+clear() noexcept : void
-compares_unordered(const_reference rhs, bool inverse = false) const noexcept : bool
{static} -compares_unordered(const_reference lhs, const_reference rhs, bool inverse = false) noexcept : bool
+contains(const json_pointer & ptr) const : bool
+contains(const typename object_t::key_type & key) const : bool
+contains<BasicJsonType,detail::enable_if_t<detail::is_basic_json<BasicJsonType>::value, int>=0>(const typename ::nlohmann::json_pointer<BasicJsonType> & ptr) const : _Bool
+contains<KeyType,detail::enable_if_t<detail::is_usable_as_basic_json_key_type<basic_json_t, KeyType>::value, int>=0>(KeyType && key) const : _Bool
+count<KeyType,detail::enable_if_t<detail::is_usable_as_basic_json_key_type<basic_json_t, KeyType>::value, int>=0>(KeyType && key) const : size_type
+count(const typename object_t::key_type & key) const : size_type
+crbegin() const noexcept : const_reverse_iterator
{static} -create<T,Args...>(Args &&... args) : T *
+crend() const noexcept : const_reverse_iterator
{static} +diff(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & source, const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & target, const string_t & path = "") : basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>
+dump(const int indent = -1, const char indent_char = ' ', const bool ensure_ascii = false, const error_handler_t error_handler = error_handler_t::strict) const : string_t
+emplace<Args...>(Args &&... args) : std::pair<iterator, _Bool>
+emplace_back<Args...>(Args &&... args) : reference
+empty() const noexcept : bool
+end() const noexcept : const_iterator
+end() noexcept : iterator
+erase<IteratorType,detail::enable_if_t<std::is_same<IteratorType, typename basic_json_t::iterator>::value || std::is_same<IteratorType, typename basic_json_t::const_iterator>::value, int>=0>(IteratorType first, IteratorType last) : IteratorType
+erase<IteratorType,detail::enable_if_t<std::is_same<IteratorType, typename basic_json_t::iterator>::value || std::is_same<IteratorType, typename basic_json_t::const_iterator>::value, int>=0>(IteratorType pos) : IteratorType
+erase(const typename object_t::key_type & key) : size_type
+erase(const size_type idx) : void
+erase<KeyType,detail::enable_if_t<detail::is_usable_as_basic_json_key_type<basic_json_t, KeyType>::value, int>=0>(KeyType && key) : size_type
-erase_internal<KeyType,detail::enable_if_t<!detail::has_erase_with_key_type<basic_json_t, KeyType>::value, int>=0>(KeyType && key) : size_type
-erase_internal<KeyType,detail::enable_if_t<detail::has_erase_with_key_type<basic_json_t, KeyType>::value, int>=0>(KeyType && key) : size_type
+find(const typename object_t::key_type & key) const : const_iterator
+find<KeyType,detail::enable_if_t<detail::is_usable_as_basic_json_key_type<basic_json_t, KeyType>::value, int>=0>(KeyType && key) const : const_iterator
+find<KeyType,detail::enable_if_t<detail::is_usable_as_basic_json_key_type<basic_json_t, KeyType>::value, int>=0>(KeyType && key) : iterator
+find(const typename object_t::key_type & key) : iterator
+flatten() const : basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>
{static} +from_bjdata<IteratorType>(IteratorType first, IteratorType last, const bool strict = true, const bool allow_exceptions = true) : basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>
{static} +from_bjdata<InputType>(InputType && i, const bool strict = true, const bool allow_exceptions = true) : basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>
{static} +from_bson<IteratorType>(IteratorType first, IteratorType last, const bool strict = true, const bool allow_exceptions = true) : basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>
{static} +from_bson(detail::span_input_adapter && i, const bool strict = true, const bool allow_exceptions = true) : basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>
{static} +from_bson<InputType>(InputType && i, const bool strict = true, const bool allow_exceptions = true) : basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>
{static} +from_bson<T>(const T * ptr, std::size_t len, const bool strict = true, const bool allow_exceptions = true) : basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>
{static} +from_cbor<T>(const T * ptr, std::size_t len, const bool strict = true, const bool allow_exceptions = true, const cbor_tag_handler_t tag_handler = cbor_tag_handler_t::error) : basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>
{static} +from_cbor<IteratorType>(IteratorType first, IteratorType last, const bool strict = true, const bool allow_exceptions = true, const cbor_tag_handler_t tag_handler = cbor_tag_handler_t::error) : basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>
{static} +from_cbor<InputType>(InputType && i, const bool strict = true, const bool allow_exceptions = true, const cbor_tag_handler_t tag_handler = cbor_tag_handler_t::error) : basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>
{static} +from_cbor(detail::span_input_adapter && i, const bool strict = true, const bool allow_exceptions = true, const cbor_tag_handler_t tag_handler = cbor_tag_handler_t::error) : basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>
{static} +from_msgpack<IteratorType>(IteratorType first, IteratorType last, const bool strict = true, const bool allow_exceptions = true) : basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>
{static} +from_msgpack(detail::span_input_adapter && i, const bool strict = true, const bool allow_exceptions = true) : basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>
{static} +from_msgpack<InputType>(InputType && i, const bool strict = true, const bool allow_exceptions = true) : basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>
{static} +from_msgpack<T>(const T * ptr, std::size_t len, const bool strict = true, const bool allow_exceptions = true) : basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>
{static} +from_ubjson<InputType>(InputType && i, const bool strict = true, const bool allow_exceptions = true) : basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>
{static} +from_ubjson<IteratorType>(IteratorType first, IteratorType last, const bool strict = true, const bool allow_exceptions = true) : basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>
{static} +from_ubjson<T>(const T * ptr, std::size_t len, const bool strict = true, const bool allow_exceptions = true) : basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>
{static} +from_ubjson(detail::span_input_adapter && i, const bool strict = true, const bool allow_exceptions = true) : basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>
+front() : reference
+front() const : const_reference
+get<PointerType,typename std::enable_if<std::is_pointer<PointerType>::value, int>::type=0>() noexcept : decltype(std::declval<basic_json_t &>().template get_ptr<PointerType>())
+get<ValueTypeCV,ValueType=detail::uncvref_t<ValueTypeCV>>() constexpr const noexcept : decltype(std::declval<const basic_json_t &>().template get_impl<ValueType>(detail::priority_tag<4>{}))
{static} +get_allocator() : allocator_type
+get_binary() const : const binary_t &
+get_binary() : binary_t &
-get_impl<ValueType,detail::enable_if_t<detail::has_non_default_from_json<basic_json_t, ValueType>::value, int>=0>(nlohmann::detail::priority_tag<1>) const noexcept : ValueType
-get_impl<BasicJsonType,detail::enable_if_t<std::is_same<BasicJsonType, basic_json_t>::value, int>=0>(nlohmann::detail::priority_tag<3>) const : basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>
-get_impl<PointerType,detail::enable_if_t<std::is_pointer<PointerType>::value, int>=0>(nlohmann::detail::priority_tag<4>) constexpr const noexcept : decltype(std::declval<const basic_json_t &>().template get_ptr<PointerType>())
-get_impl<ValueType,detail::enable_if_t<detail::is_default_constructible<ValueType>::value && detail::has_from_json<basic_json_t, ValueType>::value, int>=0>(nlohmann::detail::priority_tag<0>) const noexcept : ValueType
-get_impl<BasicJsonType,detail::enable_if_t<detail::is_basic_json<BasicJsonType>::value, int>=0>(nlohmann::detail::priority_tag<2>) const : BasicJsonType
-get_impl(boolean_t *) const : boolean_t
-get_impl_ptr(number_unsigned_t *) noexcept : number_unsigned_t *
-get_impl_ptr(object_t *) noexcept : object_t *
-get_impl_ptr(const object_t *) constexpr const noexcept : const object_t *
-get_impl_ptr(array_t *) noexcept : array_t *
-get_impl_ptr(const array_t *) constexpr const noexcept : const array_t *
-get_impl_ptr(string_t *) noexcept : string_t *
-get_impl_ptr(const number_unsigned_t *) constexpr const noexcept : const number_unsigned_t *
-get_impl_ptr(number_integer_t *) noexcept : number_integer_t *
-get_impl_ptr(number_float_t *) noexcept : number_float_t *
-get_impl_ptr(binary_t *) noexcept : binary_t *
-get_impl_ptr(const binary_t *) constexpr const noexcept : const binary_t *
-get_impl_ptr(const number_float_t *) constexpr const noexcept : const number_float_t *
-get_impl_ptr(const string_t *) constexpr const noexcept : const string_t *
-get_impl_ptr(boolean_t *) noexcept : boolean_t *
-get_impl_ptr(const boolean_t *) constexpr const noexcept : const boolean_t *
-get_impl_ptr(const number_integer_t *) constexpr const noexcept : const number_integer_t *
+get_ptr<PointerType,typename std::enable_if<std::is_pointer<PointerType>::value, int>::type=0>() noexcept : decltype(std::declval<basic_json_t &>().get_impl_ptr(std::declval<PointerType>()))
+get_ptr<PointerType,typename std::enable_if<std::is_pointer<PointerType>::value && std::is_const<typename std::remove_pointer<PointerType>::type>::value, int>::type=0>() constexpr const noexcept : decltype(std::declval<const basic_json_t &>().get_impl_ptr(std::declval<PointerType>()))
+get_ref<ReferenceType,typename std::enable_if<std::is_reference<ReferenceType>::value, int>::type=0>() : ReferenceType
+get_ref<ReferenceType,typename std::enable_if<std::is_reference<ReferenceType>::value && std::is_const<typename std::remove_reference<ReferenceType>::type>::value, int>::type=0>() const : ReferenceType
{static} -get_ref_impl<ReferenceType,ThisType>(ThisType & obj) : ReferenceType
+get_to<T,std::size_t N,Array=T (&)[N],detail::enable_if_t<detail::has_from_json<basic_json_t, Array>::value, int>=0>(T (&)[N] v) const noexcept : Array
+get_to<ValueType,detail::enable_if_t<detail::is_basic_json<ValueType>::value, int>=0>(ValueType & v) const : ValueType &
+get_to<ValueType,detail::enable_if_t<!detail::is_basic_json<ValueType>::value && detail::has_from_json<basic_json_t, ValueType>::value, int>=0>(ValueType & v) const noexcept : ValueType &
+insert(const_iterator first, const_iterator last) : void
+insert(const_iterator pos, initializer_list_t ilist) : iterator
+insert(const_iterator pos, const_iterator first, const_iterator last) : iterator
+insert(const_iterator pos, size_type cnt, const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & val) : iterator
+insert(const_iterator pos, basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> && val) : iterator
+insert(const_iterator pos, const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & val) : iterator
+insert_iterator<Args...>(const_iterator pos, Args &&... args) : iterator
+is_array() constexpr const noexcept : bool
+is_binary() constexpr const noexcept : bool
+is_boolean() constexpr const noexcept : bool
+is_discarded() constexpr const noexcept : bool
+is_null() constexpr const noexcept : bool
+is_number() constexpr const noexcept : bool
+is_number_float() constexpr const noexcept : bool
+is_number_integer() constexpr const noexcept : bool
+is_number_unsigned() constexpr const noexcept : bool
+is_object() constexpr const noexcept : bool
+is_primitive() constexpr const noexcept : bool
+is_string() constexpr const noexcept : bool
+is_structured() constexpr const noexcept : bool
+items() noexcept : iteration_proxy<iterator>
+items() const noexcept : iteration_proxy<const_iterator>
{static} +iterator_wrapper(reference ref) noexcept : iteration_proxy<iterator>
{static} +iterator_wrapper(const_reference ref) noexcept : iteration_proxy<const_iterator>
+max_size() const noexcept : size_type
+merge_patch(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & apply_patch) : void
{static} +meta() : basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>
{static} +object(initializer_list_t init = {}) : basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>
+operator nlohmann::detail::value_t() constexpr const noexcept : value_t
+operator type-parameter-1-0<ValueType,typename std::enable_if<detail::conjunction<negation<std::is_pointer<ValueType> >, negation<std::is_same<ValueType, std::nullptr_t> >, negation<std::is_same<ValueType, detail::json_ref<basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass> > > >, negation<std::is_same<ValueType, typename string_t::value_type> >, negation<detail::is_basic_json<ValueType> >, negation<std::is_same<ValueType, std::initializer_list<typename string_t::value_type> > >, negation<std::is_same<ValueType, std::any> >, is_detected_lazy<detail::get_template_function, const basic_json_t &, ValueType> >::value, int>::type=0>() const : ValueType
{static} +parse<InputType>(InputType && i, parser_callback_t cb = nullptr, const bool allow_exceptions = true, const bool ignore_comments = false, const bool ignore_trailing_commas = false) : basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>
{static} +parse(detail::span_input_adapter && i, parser_callback_t cb = nullptr, const bool allow_exceptions = true, const bool ignore_comments = false, const bool ignore_trailing_commas = false) : basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>
{static} +parse<IteratorType>(IteratorType first, IteratorType last, parser_callback_t cb = nullptr, const bool allow_exceptions = true, const bool ignore_comments = false, const bool ignore_trailing_commas = false) : basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>
{static} -parser<InputAdapterType>(InputAdapterType adapter, detail::parser_callback_t<basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>> cb = nullptr, const bool allow_exceptions = true, const bool ignore_comments = false, const bool ignore_trailing_commas = false) : ::nlohmann::detail::parser<basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType, CustomBaseClass>, InputAdapterType>
+patch(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & json_patch) const : basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>
+patch_inplace(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & json_patch) : void
+push_back(initializer_list_t init) : void
+push_back(const typename object_t::value_type & val) : void
+push_back(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & val) : void
+push_back(basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> && val) : void
+rbegin() noexcept : reverse_iterator
+rbegin() const noexcept : const_reverse_iterator
+rend() const noexcept : const_reverse_iterator
+rend() noexcept : reverse_iterator
{static} +sax_parse<InputType,SAX>(InputType && i, SAX * sax, input_format_t format = input_format_t::json, const bool strict = true, const bool ignore_comments = false, const bool ignore_trailing_commas = false) : _Bool
{static} +sax_parse<SAX>(detail::span_input_adapter && i, SAX * sax, input_format_t format = input_format_t::json, const bool strict = true, const bool ignore_comments = false, const bool ignore_trailing_commas = false) : _Bool
{static} +sax_parse<IteratorType,SAX>(IteratorType first, IteratorType last, SAX * sax, input_format_t format = input_format_t::json, const bool strict = true, const bool ignore_comments = false, const bool ignore_trailing_commas = false) : _Bool
-set_parent(reference j, std::size_t old_capacity = detail::unknown_size()) : reference
-set_parents() : void
-set_parents(iterator it, typename iterator::difference_type count_set_parents) : iterator
+size() const noexcept : size_type
+swap(array_t & other) : void
+swap(binary_t & other) : void
+swap(object_t & other) : void
+swap(string_t & other) : void
+swap(typename binary_t::container_type & other) : void
+swap(reference other) noexcept : void
{static} +to_bjdata(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & j, nlohmann::detail::output_adapter<std::uint8_t> o, const bool use_size = false, const bool use_type = false, const bjdata_version_t version = bjdata_version_t::draft2) : void
{static} +to_bjdata(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & j, nlohmann::detail::output_adapter<char> o, const bool use_size = false, const bool use_type = false, const bjdata_version_t version = bjdata_version_t::draft2) : void
{static} +to_bjdata(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & j, const bool use_size = false, const bool use_type = false, const bjdata_version_t version = bjdata_version_t::draft2) : std::vector<std::uint8_t>
{static} +to_bson(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & j, nlohmann::detail::output_adapter<char> o) : void
{static} +to_bson(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & j, nlohmann::detail::output_adapter<std::uint8_t> o) : void
{static} +to_bson(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & j) : std::vector<std::uint8_t>
{static} +to_cbor(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & j, nlohmann::detail::output_adapter<char> o) : void
{static} +to_cbor(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & j, nlohmann::detail::output_adapter<std::uint8_t> o) : void
{static} +to_cbor(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & j) : std::vector<std::uint8_t>
{static} +to_msgpack(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & j, nlohmann::detail::output_adapter<std::uint8_t> o) : void
{static} +to_msgpack(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & j) : std::vector<std::uint8_t>
{static} +to_msgpack(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & j, nlohmann::detail::output_adapter<char> o) : void
{static} +to_ubjson(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & j, nlohmann::detail::output_adapter<char> o, const bool use_size = false, const bool use_type = false) : void
{static} +to_ubjson(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & j, nlohmann::detail::output_adapter<std::uint8_t> o, const bool use_size = false, const bool use_type = false) : void
{static} +to_ubjson(const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & j, const bool use_size = false, const bool use_type = false) : std::vector<std::uint8_t>
+type() constexpr const noexcept : value_t
+type_name() const noexcept : const char *
+unflatten() const : basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass>
+update(const_iterator first, const_iterator last, bool merge_objects = false) : void
+update(const_reference j, bool merge_objects = false) : void
+value<ValueType,BasicJsonType,ReturnType=typename value_return_type<ValueType>::type,detail::enable_if_t<detail::is_basic_json<BasicJsonType>::value && detail::is_getable<basic_json_t, ReturnType>::value && !std::is_same<value_t, detail::uncvref_t<ValueType> >::value, int>=0>(const ::nlohmann::json_pointer<BasicJsonType> & ptr, ValueType && default_value) const : ReturnType
+value<ValueType,BasicJsonType,detail::enable_if_t<detail::is_basic_json<BasicJsonType>::value && detail::is_getable<basic_json_t, ValueType>::value && !std::is_same<value_t, detail::uncvref_t<ValueType> >::value, int>=0>(const ::nlohmann::json_pointer<BasicJsonType> & ptr, const ValueType & default_value) const : ValueType
+value<ValueType,ReturnType=typename value_return_type<ValueType>::type,detail::enable_if_t<detail::is_getable<basic_json_t, ReturnType>::value && !std::is_same<value_t, detail::uncvref_t<ValueType> >::value, int>=0>(const json_pointer & ptr, ValueType && default_value) const : ReturnType
+value<ValueType,detail::enable_if_t<detail::is_getable<basic_json_t, ValueType>::value && !std::is_same<value_t, detail::uncvref_t<ValueType> >::value, int>=0>(const json_pointer & ptr, const ValueType & default_value) const : ValueType
+value<ValueType,KeyType,ReturnType=typename value_return_type<ValueType>::type,detail::enable_if_t<detail::is_transparent<object_comparator_t>::value && !detail::is_json_pointer<KeyType>::value && is_comparable_with_object_key<KeyType>::value && detail::is_getable<basic_json_t, ReturnType>::value && !std::is_same<value_t, detail::uncvref_t<ValueType> >::value, int>=0>(KeyType && key, ValueType && default_value) const : ReturnType
+value<ValueType,KeyType,detail::enable_if_t<detail::is_transparent<object_comparator_t>::value && !detail::is_json_pointer<KeyType>::value && is_comparable_with_object_key<KeyType>::value && detail::is_getable<basic_json_t, ValueType>::value && !std::is_same<value_t, detail::uncvref_t<ValueType> >::value, int>=0>(KeyType && key, const ValueType & default_value) const : ValueType
+value<ValueType,ReturnType=typename value_return_type<ValueType>::type,detail::enable_if_t<!detail::is_transparent<object_comparator_t>::value && detail::is_getable<basic_json_t, ReturnType>::value && !std::is_same<value_t, detail::uncvref_t<ValueType> >::value, int>=0>(const typename object_t::key_type & key, ValueType && default_value) const : ReturnType
+value<ValueType,detail::enable_if_t<!detail::is_transparent<object_comparator_t>::value && detail::is_getable<basic_json_t, ValueType>::value && !std::is_same<value_t, detail::uncvref_t<ValueType> >::value, int>=0>(const typename object_t::key_type & key, const ValueType & default_value) const : ValueType
__
-m_data : data
}
class "::nlohmann::basic_json::json_value" as C_0013070433456217567529
class C_0013070433456217567529 {
+destroy(value_t t) : void
+json_value() = default : void
+json_value(boolean_t v) noexcept : void
+json_value(number_integer_t v) noexcept : void
+json_value(number_unsigned_t v) noexcept : void
+json_value(number_float_t v) noexcept : void
+json_value(value_t t) : void
+json_value(const string_t & value) : void
+json_value(string_t && value) : void
+json_value(const object_t & value) : void
+json_value(object_t && value) : void
+json_value(const array_t & value) : void
+json_value(array_t && value) : void
+json_value(const typename binary_t::container_type & value) : void
+json_value(typename binary_t::container_type && value) : void
+json_value(const binary_t & value) : void
+json_value(binary_t && value) : void
__
+array : array_t *
+binary : binary_t *
+boolean : boolean_t
+number_float : number_float_t
+number_integer : number_integer_t
+number_unsigned : number_unsigned_t
+object : object_t *
+string : string_t *
}
class "::nlohmann::basic_json::data" as C_0003100486735034805177
class C_0003100486735034805177 {
+operator=(data &&) noexcept = deleted : data &
+operator=(const data &) noexcept = deleted : data &
..
+data(const value_t v) : void
+data(size_type cnt, const basic_json<ObjectType,ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType,JSONSerializer,BinaryType,CustomBaseClass> & val) : void
+data() noexcept = default : void
+data(data &&) noexcept = default : void
+data(const data &) noexcept = deleted : void
+~data() noexcept : void
__
+m_type : value_t
+m_value : json_value
}
class "::nlohmann::basic_json<std::hash<basic_json<template-parameter-0-0, template-parameter-0-1, type-parameter-0-2, type-parameter-0-3, type-parameter-0-4, type-parameter-0-5, type-parameter-0-6, template-parameter-0-7, template-parameter-0-8, type-parameter-0-9, type-parameter-0-10>>::ObjectType,std::hash<basic_json<template-parameter-0-0, template-parameter-0-1, type-parameter-0-2, type-parameter-0-3, type-parameter-0-4, type-parameter-0-5, type-parameter-0-6, template-parameter-0-7, template-parameter-0-8, type-parameter-0-9, type-parameter-0-10>>::ArrayType,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,std::hash<basic_json<template-parameter-0-0, template-parameter-0-1, type-parameter-0-2, type-parameter-0-3, type-parameter-0-4, type-parameter-0-5, type-parameter-0-6, template-parameter-0-7, template-parameter-0-8, type-parameter-0-9, type-parameter-0-10>>::AllocatorType,std::hash<basic_json<template-parameter-0-0, template-parameter-0-1, type-parameter-0-2, type-parameter-0-3, type-parameter-0-4, type-parameter-0-5, type-parameter-0-6, template-parameter-0-7, template-parameter-0-8, type-parameter-0-9, type-parameter-0-10>>::JSONSerializer,BinaryType,CustomBaseClass>" as C_0018434997120923591378
class C_0018434997120923591378 {
__
}
class "::nlohmann::basic_json" as C_0011887994287659977427
class C_0011887994287659977427 {
__
}
class "::nlohmann::json_pointer<typename>" as C_0002554138123198031449
class C_0002554138123198031449 {
__
}
class "::nlohmann::basic_json<ObjectType<>,ArrayType<>,StringType,BooleanType,NumberIntegerType,NumberUnsignedType,NumberFloatType,AllocatorType<>,JSONSerializer<>,BinaryType,CustomBaseClass>" as C_0008795898313235117002
class C_0008795898313235117002 {
__
}
class "::nlohmann::adl_serializer<T=void,SFINAE=void>" as C_0017034276277983278488
class C_0017034276277983278488 {
__
}
class "::nlohmann::ordered_map<Key,T,IgnoredLess,Allocator>" as C_0017652637225839983995
class C_0017652637225839983995 {
__
}
class "::<Args...>" as C_0015871576225587044182
class C_0015871576225587044182 {
__
}
enum "::json11::JsonParse" as C_0014724136800666747878
enum C_0014724136800666747878 {
STANDARD
COMMENTS
}
class "::json11::Json" as C_0010139421007835667699
class C_0010139421007835667699 {
+Json() noexcept : void
+Json(std::nullptr_t) noexcept : void
+Json(double value) : void
+Json(int value) : void
+Json(bool value) : void
+Json(const std::string & value) : void
+Json(std::string && value) : void
+Json(const char * value) : void
+Json(const array & values) : void
+Json(array && values) : void
+Json(const object & values) : void
+Json(object && values) : void
+Json(void *) = deleted : void
+Json<T,typename=decltype(& T::to_json)>(const T & t) : void
+Json<M,typename std::enable_if<std::is_constructible<std::string, decltype(std::declval<M>().begin()->first)>::value && std::is_constructible<json11::Json, decltype(std::declval<M>().begin()->second)>::value, int>::type=0>(const M & m) : void
+Json<V,typename std::enable_if<std::is_constructible<json11::Json, decltype(* std::declval<V>().begin())>::value, int>::type=0>(const V & v) : void
..
+operator!=(const Json & rhs) const : bool
+operator<(const Json & rhs) const : bool
+operator<=(const Json & rhs) const : bool
+operator==(const Json & rhs) const : bool
+operator>(const Json & rhs) const : bool
+operator>=(const Json & rhs) const : bool
+operator[](size_t i) const : const Json &
+operator[](const std::string & key) const : const Json &
..
+array_items() const : const array &
+bool_value() const : bool
+dump(std::string & out) const : void
+dump() const : std::string
+has_shape(const shape & types, std::string & err) const : bool
+int_value() const : int
+is_array() const : bool
+is_bool() const : bool
+is_null() const : bool
+is_number() const : bool
+is_object() const : bool
+is_string() const : bool
+number_value() const : double
+object_items() const : const object &
{static} +parse(const std::string & in, std::string & err, JsonParse strategy = JsonParse::STANDARD) : Json
{static} +parse(const char * in, std::string & err, JsonParse strategy = JsonParse::STANDARD) : Json
{static} +parse_multi(const std::string & in, std::string::size_type & parser_stop_pos, std::string & err, JsonParse strategy = JsonParse::STANDARD) : std::vector<Json>
{static} +parse_multi(const std::string & in, std::string & err, JsonParse strategy = JsonParse::STANDARD) : std::vector<Json>
+string_value() const : const std::string &
+type() const : Type
__
-m_ptr : std::shared_ptr<JsonValue>
}
enum "::json11::Json::Type" as C_0016233900043594275073
enum C_0016233900043594275073 {
NUL
NUMBER
BOOL
STRING
ARRAY
OBJECT
}
abstract "::json11::JsonValue" as C_0002607653258708998320
abstract C_0002607653258708998320 {
#~JsonValue() : void
..
#operator[](size_t i) const : const Json &
#operator[](const std::string & key) const : const Json &
..
#array_items() const : const Json::array &
#bool_value() const : bool
{abstract} #dump(std::string & out) const = 0 : void
{abstract} #equals(const JsonValue * other) const = 0 : bool
#int_value() const : int
{abstract} #less(const JsonValue * other) const = 0 : bool
#number_value() const : double
#object_items() const : const Json::object &
#string_value() const : const std::string &
{abstract} #type() const = 0 : Json::Type
__
}
class "::json11::NullStruct" as C_0000856530212584457701
class C_0000856530212584457701 {
+operator<(NullStruct) const : bool
+operator==(NullStruct) const : bool
__
}
class "::json11::Value<class Json::Type tag,T>" as C_0013571702330955892798
class C_0013571702330955892798 {
#Value(const T & value) : void
#Value(T && value) : void
..
#dump(string & out) const : void
#equals(const JsonValue * other) const : bool
#less(const JsonValue * other) const : bool
#type() const : Json::Type
__
#m_value : const T
}
class "::json11::Value<Json::NUMBER,double>" as C_0009894467231443762452
class C_0009894467231443762452 {
__
}
class "::json11::JsonDouble" as C_0000233996457487908510
class C_0000233996457487908510 {
+JsonDouble(double value) : void
..
-equals(const JsonValue * other) const : bool
-int_value() const : int
-less(const JsonValue * other) const : bool
-number_value() const : double
__
}
class "::json11::Value<Json::NUMBER,int>" as C_0009704634521652133818
class C_0009704634521652133818 {
__
}
class "::json11::JsonInt" as C_0002906962476794599356
class C_0002906962476794599356 {
+JsonInt(int value) : void
..
-equals(const JsonValue * other) const : bool
-int_value() const : int
-less(const JsonValue * other) const : bool
-number_value() const : double
__
}
class "::json11::Value<Json::BOOL,bool>" as C_0008852292400489330158
class C_0008852292400489330158 {
__
}
class "::json11::JsonBoolean" as C_0005908302963436697905
class C_0005908302963436697905 {
+JsonBoolean(bool value) : void
..
-bool_value() const : bool
__
}
class "::json11::Value<Json::STRING,std::string>" as C_0011964205152211542885
class C_0011964205152211542885 {
__
}
class "::json11::JsonString" as C_0011101007382934642742
class C_0011101007382934642742 {
+JsonString(const string & value) : void
+JsonString(string && value) : void
..
-string_value() const : const string &
__
}
class "::json11::Value<Json::ARRAY,std::vector<json11::Json>>" as C_0015467111695170823371
class C_0015467111695170823371 {
__
}
class "::json11::JsonArray" as C_0016793447300566078888
class C_0016793447300566078888 {
+JsonArray(const Json::array & value) : void
+JsonArray(Json::array && value) : void
..
-operator[](size_t i) const : const Json &
..
-array_items() const : const Json::array &
__
}
class "::json11::Value<Json::OBJECT,std::map<std::string,json11::Json>>" as C_0014373868160292497274
class C_0014373868160292497274 {
__
}
class "::json11::JsonObject" as C_0001330406478916972840
class C_0001330406478916972840 {
+JsonObject(const Json::object & value) : void
+JsonObject(Json::object && value) : void
..
-operator[](const string & key) const : const Json &
..
-object_items() const : const Json::object &
__
}
class "::json11::Value<Json::NUL,json11::NullStruct>" as C_0013927293302149665249
class C_0013927293302149665249 {
__
}
class "::json11::JsonNull" as C_0015367068557833211910
class C_0015367068557833211910 {
+JsonNull() : void
__
}
class "::json11::Statics" as C_0012757214638790164104
class C_0012757214638790164104 {
+Statics() : void
__
+empty_map : const map<string,Json>
+empty_string : const string
+empty_vector : const vector<Json>
+f : const std::shared_ptr<JsonValue>
+null : const std::shared_ptr<JsonValue>
+t : const std::shared_ptr<JsonValue>
}
class "::json11::JsonParser" as C_0003944293068452959356
class C_0003944293068452959356 {
+consume_comment() : bool
+consume_garbage() : void
+consume_whitespace() : void
+encode_utf8(long pt, string & out) : void
+expect(const string & expected, Json res) : Json
+fail(string && msg) : Json
+fail<T>(string && msg, const T err_ret) : T
+get_next_token() : char
+parse_json(int depth) : Json
+parse_number() : Json
+parse_string() : string
__
+err : string &
+failed : bool
+i : size_t
+str : const string &
+strategy : const JsonParse
}
class "::tson::Tools" as C_0017365092446087783656
class C_0017365092446087783656 {
+Tools() = deleted : void
+~Tools() = deleted : void
..
{static} +Base64DecodedStringToBytes(std::string_view str) : std::vector<uint8_t>
{static} +BytesToUnsignedInts(const std::vector<uint8_t> & bytes) : std::vector<uint32_t>
{static} +Equal(float a, float b, float precision = 8192.f) : bool
{static} +SplitString(const std::string & s, char delim) : std::vector<std::string>
{static} -split<Out>(const std::string & s, char delim, Out result) : void
__
}
abstract "::tson::IDecompressor<TIn,TOut>" as C_0003134520543056113127
abstract C_0003134520543056113127 {
+~IDecompressor() = default : void
..
{abstract} +decompress(const TIn & input) = 0 : TOut
{abstract} +decompress(const void * data, size_t size) = 0 : TOut
{abstract} +decompressFile(const fs::path & path) = 0 : TOut
{abstract} +name() const = 0 : const std::string &
__
}
class "::tson::IDecompressor<std::basic_string_view<char>,std::string>" as C_0018340852703644302525
class C_0018340852703644302525 {
__
}
class "::tson::Base64Decompressor" as C_0009889786774661840672
class C_0009889786774661840672 {
+decompress(const std::string_view & s) : std::string
+decompress(const void * data, size_t size) : std::string
+decompressFile(const fs::path & path) : std::string
+name() const : const std::string &
-pos_of_char(const unsigned char chr) : unsigned int
__
{static} -NAME : const std::string
}
class "::tson::DecompressorContainer" as C_0018425996662932967070
class C_0018425996662932967070 {
+DecompressorContainer() = default : void
..
+add<T,Args...>(Args &&... args) : void
+clear() : void
+contains(std::string_view name) const : bool
+empty() const : bool
+get(std::string_view name) : tson::IDecompressor<std::string_view,std::string> *
+remove(std::string_view name) : void
+size() const : size_t
__
-m_decompressors : std::vector<std::unique_ptr<IDecompressor<std::string_view,std::string>>>
}
class "::tson::MemoryBuffer" as C_0005664613277252816988
class C_0005664613277252816988 {
+MemoryBuffer(const uint8_t * p, size_t l) : void
__
}
class "::tson::MemoryStream" as C_0010893189800050134442
class C_0010893189800050134442 {
+MemoryStream(const uint8_t * p, size_t l) : void
__
-m_buffer : MemoryBuffer
}
class "::tson::Color<float>" as C_0006797771189997432652
class C_0006797771189997432652 {
__
}
class "::tson::Color<uint8_t>" as C_0015939156022177164375
class C_0015939156022177164375 {
__
}
class "::tson::Color<T>" as C_0013703873958216970662
class C_0013703873958216970662 {
+Color(const std::string & color) : void
+Color(T red, T green, T blue, T alpha) : void
+Color() : void
..
+operator!=(const Color<T> & rhs) const : bool
+operator==(const Color<T> & rhs) const : bool
+operator==(const std::string & rhs) const : bool
..
+asFloat() : tson::Color<float>
+asInt() : tson::Color<uint8_t>
-parseHexString(const std::string & color) : void
__
+a : T
+b : T
+g : T
+r : T
}
class "::tson::Vector2<T>" as C_0010053156768513679430
class C_0010053156768513679430 {
+Vector2(T xPos, T yPos) : void
+Vector2() : void
..
+operator!=(const Vector2<T> & rhs) const : bool
+operator==(const Vector2<T> & rhs) const : bool
__
+x : T
+y : T
}
abstract "::tson::IJson" as C_0007691470128151605506
abstract C_0007691470128151605506 {
+~IJson() = default : void
..
{abstract} +operator[](std::string_view key) = 0 : IJson &
..
{abstract} +any(std::string_view key) const = 0 : bool
{abstract} +array() = 0 : std::vector<std::unique_ptr<IJson>>
{abstract} +array(std::string_view key) = 0 : std::vector<std::unique_ptr<IJson>> &
{abstract} +at(std::string_view key) = 0 : IJson &
{abstract} +at(size_t pos) = 0 : IJson &
{abstract} +count(std::string_view key) const = 0 : size_t
{abstract} +create() = 0 : std::unique_ptr<IJson>
{abstract} +directory() const = 0 : fs::path
{abstract} +directory(const fs::path & directory) = 0 : void
+get<T>(std::string_view key) : T
+get<T>() : T
{abstract} #getBool(std::string_view key) = 0 : bool
{abstract} #getBool() = 0 : bool
{abstract} #getDouble(std::string_view key) = 0 : double
{abstract} #getDouble() = 0 : double
{abstract} #getFloat(std::string_view key) = 0 : float
{abstract} #getFloat() = 0 : float
{abstract} #getInt32(std::string_view key) = 0 : int32_t
{abstract} #getInt32() = 0 : int32_t
{abstract} #getInt64() = 0 : int64_t
{abstract} #getInt64(std::string_view key) = 0 : int64_t
{abstract} #getString(std::string_view key) = 0 : std::string
{abstract} #getString() = 0 : std::string
{abstract} #getUInt32() = 0 : uint32_t
{abstract} #getUInt32(std::string_view key) = 0 : uint32_t
{abstract} #getUInt64(std::string_view key) = 0 : uint64_t
{abstract} #getUInt64() = 0 : uint64_t
{abstract} +isArray() const = 0 : bool
{abstract} +isNull() const = 0 : bool
{abstract} +isObject() const = 0 : bool
{abstract} +parse(const fs::path & path) = 0 : bool
{abstract} +parse(const void * data, size_t size) = 0 : bool
{abstract} +size() const = 0 : size_t
__
}
class "::tson::NlohmannJson" as C_0012827235786350444092
class C_0012827235786350444092 {
+NlohmannJson() = default : void
+NlohmannJson(nlohmann::json * json) : void
..
+operator[](std::string_view key) : IJson &
..
+any(std::string_view key) const : bool
+array() : std::vector<std::unique_ptr<IJson>>
+array(std::string_view key) : std::vector<std::unique_ptr<IJson>> &
+at(std::string_view key) : IJson &
+at(size_t pos) : IJson &
-clearCache() : void
+count(std::string_view key) const : size_t
+create() : std::unique_ptr<IJson>
+directory() const : fs::path
+directory(const fs::path & directory) : void
#getBool(std::string_view key) : bool
#getBool() : bool
#getDouble(std::string_view key) : double
#getDouble() : double
#getFloat(std::string_view key) : float
#getFloat() : float
#getInt32(std::string_view key) : int32_t
#getInt32() : int32_t
#getInt64(std::string_view key) : int64_t
#getInt64() : int64_t
#getString(std::string_view key) : std::string
#getString() : std::string
#getUInt32(std::string_view key) : uint32_t
#getUInt32() : uint32_t
#getUInt64(std::string_view key) : uint64_t
#getUInt64() : uint64_t
+isArray() const : bool
+isNull() const : bool
+isObject() const : bool
+parse(const fs::path & path) : bool
+parse(const void * data, size_t size) : bool
+size() const : size_t
__
-m_arrayCache : std::map<std::string,std::unique_ptr<IJson>>
-m_arrayListDataCache : std::map<std::string,std::vector<std::unique_ptr<IJson>>>
-m_arrayPosCache : std::map<size_t,std::unique_ptr<IJson>>
-m_data : std::unique_ptr<nlohmann::json>
-m_json : nlohmann::json *
-m_path : fs::path
}
class "::tson::Json11" as C_0010090870188595573577
class C_0010090870188595573577 {
+Json11() = default : void
+Json11(const json11::Json & json) : void
..
+operator[](std::string_view key) : IJson &
..
+any(std::string_view key) const : bool
+array() : std::vector<std::unique_ptr<IJson>>
+array(std::string_view key) : std::vector<std::unique_ptr<IJson>> &
+at(std::string_view key) : IJson &
+at(size_t pos) : IJson &
-clearCache() : void
+count(std::string_view key) const : size_t
+create() : std::unique_ptr<IJson>
+directory() const : fs::path
+directory(const fs::path & directory) : void
#getBool(std::string_view key) : bool
#getBool() : bool
#getDouble(std::string_view key) : double
#getDouble() : double
#getFloat(std::string_view key) : float
#getFloat() : float
#getInt32(std::string_view key) : int32_t
#getInt32() : int32_t
#getInt64(std::string_view key) : int64_t
#getInt64() : int64_t
#getString(std::string_view key) : std::string
#getString() : std::string
#getUInt32(std::string_view key) : uint32_t
#getUInt32() : uint32_t
#getUInt64(std::string_view key) : uint64_t
#getUInt64() : uint64_t
+isArray() const : bool
+isNull() const : bool
+isObject() const : bool
+parse(const fs::path & path) : bool
+parse(const void * data, size_t size) : bool
+size() const : size_t
__
-m_arrayCache : std::map<std::string,std::unique_ptr<IJson>>
-m_arrayListDataCache : std::map<std::string,std::vector<std::unique_ptr<IJson>>>
-m_arrayPosCache : std::map<size_t,std::unique_ptr<IJson>>
-m_data : std::unique_ptr<json11::Json>
-m_json : const json11::Json *
-m_path : fs::path
}
class "::tson::Vector2<int>" as C_0014385917776685433885
class C_0014385917776685433885 {
__
}
class "::tson::Chunk" as C_0011586328468560530734
class C_0011586328468560530734 {
+Chunk() = default : void
+Chunk(IJson & json) : void
..
+getBase64Data() const : const std::string &
+getData() const : const std::vector<int> &
+getPosition() const : const Vector2i &
+getSize() const : const Vector2i &
+parse(IJson & json) : bool
__
-m_base64Data : std::string
-m_data : std::vector<int>
-m_position : tson::Vector2i
-m_size : tson::Vector2i
}
class "::tson::EnableBitMaskOperators<Enum>" as C_0010587030707792903691
class C_0010587030707792903691 {
__
{static} +enable : const bool
}
enum "::tson::Type" as C_0014197690837021065393
enum C_0014197690837021065393 {
Undefined
Color
File
Int
Boolean
Float
String
Class
Enum
Object
}
enum "::tson::LayerType" as C_0014983745689487859410
enum C_0014983745689487859410 {
Undefined
TileLayer
ObjectGroup
ImageLayer
Group
}
enum "::tson::TilesetType" as C_0002869522055985961371
enum C_0002869522055985961371 {
Undefined
ImageTileset
ImageCollectionTileset
}
enum "::tson::ParseStatus" as C_0010174362990264143858
enum C_0010174362990264143858 {
OK
FileNotFound
ParseError
MissingData
DecompressionError
}
enum "::tson::ObjectType" as C_0006712615923895960166
enum C_0006712615923895960166 {
Undefined
Object
Ellipse
Rectangle
Point
Polygon
Polyline
Text
Template
}
enum "::tson::TileFlipFlags" as C_0013384205240641505953
enum C_0013384205240641505953 {
None
Diagonally
Vertically
Horizontally
}
enum "::tson::ObjectAlignment" as C_0017739362352874342011
enum C_0017739362352874342011 {
Unspecified
TopLeft
Top
TopRight
Left
Center
Right
BottomLeft
Bottom
BottomRight
}
enum "::tson::TextAlignment" as C_0015516275354587417455
enum C_0015516275354587417455 {
Unresolved
Left
Center
Right
Justify
Top
Bottom
}
enum "::tson::TileRenderSize" as C_0001721263548193086372
enum C_0001721263548193086372 {
Undefined
Tile
Grid
}
enum "::tson::FillMode" as C_0018445499605134518791
enum C_0018445499605134518791 {
Undefined
Stretch
PreserveAspectFit
}
enum "::tson::EnumStorageType" as C_0007189842123411762805
enum C_0007189842123411762805 {
Unspecified
Int
String
}
class "::tson::EnableBitMaskOperators<tson::TileFlipFlags>" as C_0016510683529811157850
class C_0016510683529811157850 {
__
{static} +enable : const bool
}
class "::tson::Property" as C_0004320093529030414388
class C_0004320093529030414388 {
+Property() : void
+Property(IJson & json, tson::Project * project = nullptr) : void
+Property(std::string name, std::any value, Type type) : void
..
+getName() const : const std::string &
+getPropertyType() const : const std::string &
+getType() const : Type
+getValue() const : const std::any &
+getValue<T>() const : T
+getValueType() const : const std::type_info &
+getValueTypeInfo() : std::string
+setName(const std::string & name) : void
+setStrValue(const std::string & value) : void
#setTypeByString(const std::string & str) : void
+setValue(const std::any & value) : void
+setValueByType(IJson & json) : void
__
#m_name : std::string
#m_project : tson::Project *
#m_propertyType : std::string
#m_type : Type
#m_value : std::any
}
class "::tson::PropertyCollection" as C_0018398281171545643768
class C_0018398281171545643768 {
+PropertyCollection() = default : void
+PropertyCollection(std::string id) : void
..
+add(const tson::Property & property) : tson::Property *
+add(IJson & json, tson::Project * project = nullptr) : tson::Property *
+add(const std::string & name, const std::any & value, tson::Type type) : tson::Property *
+get() : std::vector<Property *>
+getId() const : const std::string &
+getProperties() : std::map<std::string,Property> &
+getProperty(const std::string & name) : tson::Property *
+getSize() const : size_t
+getValue<T>(const std::string & name) : T
+hasProperty(const std::string & name) : bool
+remove(const std::string & name) : void
+setId(const std::string & id) : void
+setProperty(const std::string & name, const tson::Property & value) : void
+setValue(const std::string & name, const std::any & value) : void
__
#m_id : std::string
#m_properties : std::map<std::string,tson::Property>
}
class "::tson::Text" as C_0016549048130367074010
class C_0016549048130367074010 {
+Text() = default : void
+Text(IJson & json) : void
..
-resolveTextAlignmentByString(const std::string & str) const : TextAlignment
__
+bold : bool
+color : tson::Colori
+fontFamily : std::string
+horizontalAlignment : TextAlignment
+italic : bool
+kerning : bool
+pixelSize : int
+strikeout : bool
+text : std::string
+underline : bool
+verticalAlignment : TextAlignment
+wrap : bool
}
class "::tson::Object" as C_0011463520910972780534
class C_0011463520910972780534 {
+Object() = default : void
+Object(IJson & json, tson::Map * map) : void
..
+get<T>(const std::string & name) : T
+getClass() : tson::TiledClass *
+getClassType() const : const std::string &
+getFlipFlags() const : TileFlipFlags
+getGid() const : uint32_t
+getId() const : int
+getName() const : const std::string &
+getObjectType() const : ObjectType
+getPolygons() const : const std::vector<tson::Vector2i> &
+getPolylines() const : const std::vector<tson::Vector2i> &
+getPosition() const : const Vector2i &
+getProp(const std::string & name) : tson::Property *
+getProperties() : PropertyCollection &
+getRotation() const : float
+getSize() const : const Vector2i &
+getTemplate() const : const std::string &
+getText() const : const Text &
+getType() const : const std::string &
+hasFlipFlags(TileFlipFlags flags) : bool
+isEllipse() const : bool
+isPoint() const : bool
+isVisible() const : bool
+parse(IJson & json, tson::Map * map) : bool
-setObjectTypeByJson(IJson & json, IJson * templ) : void
__
-m_class : std::shared_ptr<tson::TiledClass>
-m_ellipse : bool
-m_flipFlags : tson::TileFlipFlags
-m_gid : uint32_t
-m_id : int
-m_map : tson::Map *
-m_name : std::string
-m_objectType : ObjectType
-m_point : bool
-m_polygon : std::vector<tson::Vector2i>
-m_polyline : std::vector<tson::Vector2i>
-m_position : tson::Vector2i
-m_properties : tson::PropertyCollection
-m_rotation : float
-m_size : tson::Vector2i
-m_template : std::string
-m_text : tson::Text
-m_type : std::string
-m_visible : bool
}
class "::tson::Rect" as C_0013891178805115232827
class C_0013891178805115232827 {
+Rect() = default : void
+Rect(int x_, int y_, int width_, int height_) : void
..
+operator!=(const Rect & rhs) const : bool
+operator==(const Rect & rhs) const : bool
__
+height : int
+width : int
+x : int
+y : int
}
class "::tson::Vector2<float>" as C_0010542150686491040684
class C_0010542150686491040684 {
__
}
class "::tson::TileObject" as C_0012702542272812606522
class C_0012702542272812606522 {
+TileObject() = default : void
+TileObject(const std::tuple<int,int> & posInTileUnits, tson::Tile * tile) : void
..
+getDrawingRect() const : const tson::Rect &
+getPosition() const : const Vector2f &
+getPositionInTileUnits() const : const Vector2i &
+getTile() : Tile *
+initialize(const std::tuple<int,int> & posInTileUnits, tson::Tile * tile) : void
__
-m_posInTileUnits : tson::Vector2i
-m_position : tson::Vector2f
-m_tile : tson::Tile *
}
class "::tson::FlaggedTile" as C_0015138112189591346049
class C_0015138112189591346049 {
+FlaggedTile(size_t x_, size_t y_, uint32_t id_, uint32_t tileId_) : void
__
+id : uint32_t
+tileId : uint32_t
+x : size_t
+y : size_t
}
class "::tson::Layer" as C_0004904525272387115810
class C_0004904525272387115810 {
+Layer() = default : void
+Layer(IJson & json, tson::Map * map) : void
..
+assignTileMap(std::map<uint32_t,tson::Tile *> * tileMap) : void
+createTileData(const Vector2i & mapSize, bool isInfiniteMap) : void
-decompressData() : void
+firstObj(const std::string & name) : tson::Object *
+get<T>(const std::string & name) : T
+getBase64Data() const : const std::string &
+getChunks() : std::vector<tson::Chunk> &
+getClass() : tson::TiledClass *
+getClassType() const : const std::string &
+getCompression() const : const std::string &
+getData() const : const std::vector<uint32_t> &
+getDrawOrder() const : const std::string &
+getEncoding() const : const std::string &
+getId() const : int
+getImage() const : const std::string &
+getLayers() : std::vector<tson::Layer> &
+getMap() const : tson::Map *
+getName() const : const std::string &
+getObj(int id) : tson::Object *
+getObjects() : std::vector<tson::Object> &
+getObjectsByName(const std::string & name) : std::vector<tson::Object>
+getObjectsByType(tson::ObjectType type) : std::vector<tson::Object>
+getOffset() const : const Vector2f &
+getOpacity() const : float
+getParallax() const : const Vector2f &
+getProp(const std::string & name) : tson::Property *
+getProperties() : PropertyCollection &
+getSize() const : const Vector2i &
+getTileData() const : const std::map<std::tuple<int,int>,tson::Tile *> &
+getTileData(int x, int y) : tson::Tile *
+getTileObject(int x, int y) : tson::TileObject *
+getTileObjects() : std::map<std::tuple<int,int>,tson::TileObject> &
+getTintColor() const : const Colori &
+getTransparentColor() const : const Colori &
+getType() const : LayerType
+getTypeStr() const : const std::string &
+getUniqueFlaggedTiles() const : const std::set<uint32_t> &
+getX() const : int
+getY() const : int
+hasRepeatX() const : bool
+hasRepeatY() const : bool
+isVisible() const : bool
+parse(IJson & json, tson::Map * map) : bool
-queueFlaggedTile(size_t x, size_t y, uint32_t id) : void
+resolveFlaggedTiles() : void
-setTypeByString() : void
__
-m_base64Data : std::string
-m_chunks : std::vector<tson::Chunk>
-m_class : std::shared_ptr<tson::TiledClass>
-m_classType : std::string
-m_compression : std::string
-m_data : std::vector<uint32_t>
-m_drawOrder : std::string
-m_encoding : std::string
-m_flaggedTiles : std::vector<tson::FlaggedTile>
-m_id : int
-m_image : std::string
-m_layers : std::vector<tson::Layer>
-m_map : tson::Map *
-m_name : std::string
-m_objects : std::vector<tson::Object>
-m_offset : tson::Vector2f
-m_opacity : float
-m_parallax : tson::Vector2f
-m_properties : tson::PropertyCollection
-m_repeatX : bool
-m_repeatY : bool
-m_size : tson::Vector2i
-m_tileData : std::map<std::tuple<int,int>,tson::Tile *>
-m_tileMap : std::map<uint32_t,tson::Tile *> *
-m_tileObjects : std::map<std::tuple<int,int>,tson::TileObject>
-m_tintColor : tson::Colori
-m_transparentColor : tson::Colori
-m_type : LayerType
-m_typeStr : std::string
-m_uniqueFlaggedTiles : std::set<uint32_t>
-m_visible : bool
-m_x : int
-m_y : int
}
class "::tson::Transformations" as C_0009560787131994474037
class C_0009560787131994474037 {
+Transformations() = default : void
+Transformations(IJson & json) : void
..
+allowHflip() const : bool
+allowPreferuntransformed() const : bool
+allowRotation() const : bool
+allowVflip() const : bool
+parse(IJson & json) : bool
__
-m_hflip : bool
-m_preferuntransformed : bool
-m_rotate : bool
-m_vflip : bool
}
class "::tson::WangColor" as C_0013015052646677278465
class C_0013015052646677278465 {
+WangColor() = default : void
+WangColor(IJson & json, tson::Map * map) : void
..
+get<T>(const std::string & name) : T
+getClass() : tson::TiledClass *
+getClassType() const : const std::string &
+getColor() const : const Colori &
+getName() const : const std::string &
+getProbability() const : float
+getProp(const std::string & name) : tson::Property *
+getProperties() : PropertyCollection &
+getTile() const : int
+parse(IJson & json, tson::Map * map) : bool
__
-m_class : std::shared_ptr<tson::TiledClass>
-m_classType : std::string
-m_color : tson::Colori
-m_map : tson::Map *
-m_name : std::string
-m_probability : float
-m_properties : tson::PropertyCollection
-m_tile : int
}
class "::tson::WangTile" as C_0003233086023795851738
class C_0003233086023795851738 {
+WangTile() = default : void
+WangTile(IJson & json) : void
..
+getTileid() const : uint32_t
+getWangIds() const : const std::vector<uint32_t> &
+hasDFlip() const : bool
+hasHFlip() const : bool
+hasVFlip() const : bool
+parse(IJson & json) : bool
__
-m_dflip : bool
-m_hflip : bool
-m_tileid : uint32_t
-m_vflip : bool
-m_wangId : std::vector<uint32_t>
}
class "::tson::WangSet" as C_0009452330323620423782
class C_0009452330323620423782 {
+WangSet() = default : void
+WangSet(IJson & json, tson::Map * map) : void
..
+get<T>(const std::string & name) : T
+getClass() : tson::TiledClass *
+getClassType() const : const std::string &
+getColor(const std::string & name) : tson::WangColor *
+getColors() const : const std::vector<tson::WangColor> &
+getCornerColors() const : const std::vector<tson::WangColor> &
+getEdgeColors() const : const std::vector<tson::WangColor> &
+getName() const : const std::string &
+getProp(const std::string & name) : tson::Property *
+getProperties() : PropertyCollection &
+getTile() const : int
+getWangTiles() const : const std::vector<tson::WangTile> &
+parse(IJson & json, tson::Map * map) : bool
-parseTiled15Props(IJson & json) : bool
__
-m_class : std::shared_ptr<tson::TiledClass>
-m_classType : std::string
-m_colors : std::vector<tson::WangColor>
-m_cornerColors : std::vector<tson::WangColor>
-m_edgeColors : std::vector<tson::WangColor>
-m_map : tson::Map *
-m_name : std::string
-m_properties : tson::PropertyCollection
-m_tile : int
-m_wangTiles : std::vector<tson::WangTile>
}
class "::tson::Frame" as C_0008522766561882952554
class C_0008522766561882952554 {
+Frame() = default : void
+Frame(int duration, uint32_t tileId) : void
+Frame(IJson & json) : void
..
+getDuration() const : int
+getTileId() const : uint32_t
+parse(IJson & json) : bool
__
-m_duration : int
-m_tileId : uint32_t
}
class "::tson::Animation" as C_0014353425171322453809
class C_0014353425171322453809 {
+Animation() = default : void
+Animation(const std::vector<tson::Frame> & frames) : void
..
+any() const : bool
+getCurrentFrame() const : const tson::Frame *
+getCurrentFrameNumber() const : uint32_t
+getCurrentTileId() const : uint32_t
+getFrames() const : const std::vector<tson::Frame> &
+getTimeDelta() const : float
-nextFrame() : int
+reset() : void
+setCurrentFrame(uint32_t currentFrame) : void
+setFrames(const std::vector<tson::Frame> & frames) : void
+setTimeDelta(float timeDelta) : void
+size() const : size_t
+update(float timeDeltaMs) : void
__
-m_currentFrame : uint32_t
-m_frames : std::vector<tson::Frame>
-m_timeDelta : float
}
class "::tson::Tile" as C_0005657317832455838789
class C_0005657317832455838789 {
+Tile() = default : void
+Tile(IJson & json, tson::Tileset * tileset, tson::Map * map) : void
..
{static} +CreateFlippedTile(uint32_t gid, tson::Map * map) : Tile
{static} +CreateMissingTile(uint32_t id, tson::Tileset * tileset, tson::Map * map) : Tile
+addTilesetAndPerformCalculations(tson::Tileset * tileset) : void
+get<T>(const std::string & name) : T
+getAnimation() : tson::Animation &
+getClass() : tson::TiledClass *
+getClassType() const : const std::string &
+getDrawingRect() const : const tson::Rect &
+getFlipFlags() const : TileFlipFlags
+getGid() const : uint32_t
+getId() const : uint32_t
+getImage() const : const fs::path &
+getImageSize() const : const Vector2i &
+getMap() const : tson::Map *
+getObjectgroup() : Layer &
+getPosition(const std::tuple<int,int> & tileDataPos) : const tson::Vector2f
+getPositionInTileUnits(const std::tuple<int,int> & tileDataPos) : const tson::Vector2i
+getProp(const std::string & name) : tson::Property *
+getProperties() : PropertyCollection &
+getSubRectangle() const : const Rect &
+getTerrain() const : const std::vector<int> &
+getTileSize() const : const tson::Vector2i
+getTileset() const : tson::Tileset *
+getType() const : const std::string &
+hasFlipFlags(TileFlipFlags flags) : bool
-manageFlipFlagsByIdThenRemoveFlags(uint32_t & id) : void
+parse(IJson & json, tson::Tileset * tileset, tson::Map * map) : bool
+parseId(IJson & json) : bool
-performDataCalculations() : void
+setProperties(const tson::PropertyCollection & properties) : void
__
-m_animation : tson::Animation
-m_class : std::shared_ptr<tson::TiledClass>
-m_drawingRect : tson::Rect
-m_flipFlags : tson::TileFlipFlags
-m_gid : uint32_t
-m_id : uint32_t
-m_image : fs::path
-m_imageSize : tson::Vector2i
-m_map : tson::Map *
-m_objectgroup : tson::Layer
-m_properties : tson::PropertyCollection
-m_subRect : tson::Rect
-m_terrain : std::vector<int>
-m_tileset : tson::Tileset *
-m_type : std::string
}
class "::tson::Terrain" as C_0000309840976076098146
class C_0000309840976076098146 {
+Terrain() = default : void
+Terrain(std::string name, int tile) : void
+Terrain(IJson & json) : void
..
+get<T>(const std::string & name) : T
+getName() const : const std::string &
+getProp(const std::string & name) : tson::Property *
+getProperties() : PropertyCollection &
+getTile() const : int
+parse(IJson & json) : bool
__
-m_name : std::string
-m_properties : tson::PropertyCollection
-m_tile : int
}
class "::tson::Grid" as C_0004607124311145448133
class C_0004607124311145448133 {
+Grid() = default : void
+Grid(IJson & json) : void
..
+getOrientation() const : const std::string &
+getSize() const : const Vector2i &
+parse(IJson & json) : bool
__
-m_orientation : std::string
-m_size : tson::Vector2i
}
class "::tson::Tileset" as C_0011779487683031078083
class C_0011779487683031078083 {
+Tileset() = default : void
+Tileset(IJson & json, tson::Map * map) : void
..
{static} +StringToAlignment(std::string_view str) : tson::ObjectAlignment
-generateMissingTiles() : void
+get<T>(const std::string & name) : T
+getClass() : tson::TiledClass *
+getClassType() const : const std::string &
+getColumns() const : int
+getFillMode() const : FillMode
+getFirstgid() const : int
+getFullImagePath() const : const fs::path &
+getGrid() const : const Grid &
+getImage() const : const fs::path &
+getImagePath() const : const fs::path &
+getImageSize() const : const Vector2i &
+getMap() const : tson::Map *
+getMargin() const : int
+getMarginSpacingOffset(const tson::Vector2i & posInTileUnits) : tson::Vector2i
+getName() const : const std::string &
+getObjectAlignment() const : ObjectAlignment
-getProject() const : tson::Project *
+getProp(const std::string & name) : tson::Property *
+getProperties() : PropertyCollection &
+getSpacing() const : int
+getTerrain(const std::string & name) : tson::Terrain *
+getTerrains() const : const std::vector<tson::Terrain> &
+getTile(uint32_t id) : tson::Tile *
+getTileCount() const : int
+getTileOffset() const : const Vector2i &
+getTileRenderSize() const : TileRenderSize
+getTileSize() const : const Vector2i &
+getTiles() : std::vector<tson::Tile> &
+getTransformations() const : const Transformations &
+getTransparentColor() const : const Colori &
+getType() const : TilesetType
+getTypeStr() const : const std::string &
+getWangset(const std::string & name) : tson::WangSet *
+getWangsets() const : const std::vector<tson::WangSet> &
+parse(IJson & json, tson::Map * map) : bool
__
-m_class : std::shared_ptr<tson::TiledClass>
-m_classType : std::string
-m_columns : int
-m_fillMode : FillMode
-m_firstgid : int
-m_grid : tson::Grid
-m_image : fs::path
-m_imagePath : fs::path
-m_imageSize : tson::Vector2i
-m_map : tson::Map *
-m_margin : int
-m_name : std::string
-m_objectAlignment : tson::ObjectAlignment
-m_path : fs::path
-m_properties : tson::PropertyCollection
-m_source : fs::path
-m_spacing : int
-m_terrains : std::vector<tson::Terrain>
-m_tileCount : int
-m_tileOffset : tson::Vector2i
-m_tileRenderSize : TileRenderSize
-m_tileSize : tson::Vector2i
-m_tiles : std::vector<tson::Tile>
-m_transformations : Transformations
-m_transparentColor : tson::Colori
-m_type : TilesetType
-m_typeStr : std::string
-m_wangsets : std::vector<tson::WangSet>
}
class "::tson::Map" as C_0017557341881008908213
class C_0017557341881008908213 {
+Map() = default : void
+Map(ParseStatus status, std::string description) : void
+Map(IJson & json, tson::DecompressorContainer * decompressors, tson::Project * project, tson::LinkedFileParser linkedFileParser = nullptr) : void
..
-createTilesetData(IJson & json) : bool
+get<T>(const std::string & name) : T
+getBackgroundColor() const : const Colori &
+getClass() : tson::TiledClass *
+getClassType() const : const std::string &
+getCompressionLevel() const : int
+getDecompressors() : DecompressorContainer *
+getHexsideLength() const : int
+getLayer(const std::string & name) : Layer *
+getLayers() : std::vector<tson::Layer> &
+getNextLayerId() const : int
+getNextObjectId() const : int
+getOrientation() const : const std::string &
+getParallaxOrigin() const : const Vector2f &
+getProject() : Project *
+getProp(const std::string & name) : tson::Property *
+getProperties() : PropertyCollection &
+getRenderOrder() const : const std::string &
+getSize() const : const Vector2i &
+getStaggerAxis() const : const std::string &
+getStaggerIndex() const : const std::string &
+getStatus() const : ParseStatus
+getStatusMessage() const : const std::string &
+getTileMap() const : const std::map<uint32_t,tson::Tile *> &
+getTileSize() const : const Vector2i &
+getTiledVersion() const : const std::string &
+getTileset(const std::string & name) : Tileset *
+getTilesetByGid(uint32_t gid) : Tileset *
+getTilesets() : std::vector<tson::Tileset> &
+getType() const : const std::string &
+isInfinite() const : bool
+parse(IJson & json, tson::DecompressorContainer * decompressors, tson::Project * project, tson::LinkedFileParser linkedFileParser = nullptr) : bool
-parseLinkedFile(const std::string & path) : IJson *
-processData() : void
__
-m_backgroundColor : Colori
-m_class : std::shared_ptr<tson::TiledClass>
-m_classType : std::string
-m_compressionLevel : int
-m_decompressors : tson::DecompressorContainer *
-m_flaggedTileMap : std::map<uint32_t,tson::Tile>
-m_hexsideLength : int
-m_isInfinite : bool
-m_layers : std::vector<tson::Layer>
-m_linkedFileParser : tson::LinkedFileParser
-m_linkedFiles : std::map<std::string,std::unique_ptr<IJson>>
-m_nextLayerId : int
-m_nextObjectId : int
-m_orientation : std::string
-m_parallaxOrigin : tson::Vector2f
-m_project : tson::Project *
-m_properties : tson::PropertyCollection
-m_renderOrder : std::string
-m_size : Vector2i
-m_staggerAxis : std::string
-m_staggerIndex : std::string
-m_status : ParseStatus
-m_statusMessage : std::string
-m_tileMap : std::map<uint32_t,tson::Tile *>
-m_tileSize : Vector2i
-m_tiledVersion : std::string
-m_tilesets : std::vector<tson::Tileset>
-m_type : std::string
}
class "::tson::EnumDefinition" as C_0007053002749163351949
class C_0007053002749163351949 {
+EnumDefinition(IJson & json) : void
..
+exists(const std::string & str) : bool
+exists(uint32_t num) : bool
+getId() const : uint32_t
+getMaxValue() const : uint32_t
+getName() const : const std::string &
+getStorageType() const : EnumStorageType
+getValue(const std::string & str) : uint32_t
+getValue(uint32_t num) : std::string
+getValues(uint32_t num) : std::vector<std::string>
-hasFlag(uint32_t value, uint32_t flag) const : bool
+hasValuesAsFlags() const : bool
__
-m_id : uint32_t
-m_maxValue : uint32_t
-m_name : std::string
-m_storageType : EnumStorageType
-m_values : std::map<uint32_t,std::string>
-m_valuesAsFlags : bool
}
class "::tson::EnumValue" as C_0009641377677345536605
class C_0009641377677345536605 {
+EnumValue() = default : void
+EnumValue(uint32_t value, EnumDefinition * definition) : void
+EnumValue(const std::string & value, EnumDefinition * definition) : void
..
+containsValueName(const std::string & value) const : bool
+getDefinition() const : EnumDefinition *
+getValue() const : uint32_t
+getValueName() const : std::string
+getValueNames() const : std::vector<std::string>
+hasAnyFlag<T>(T flags) const : _Bool
+hasAnyFlagValue(uint32_t flags) const : bool
+hasFlag<T>(T flags) const : _Bool
+hasFlagValue(uint32_t flag) const : bool
__
-m_definition : EnumDefinition *
-m_value : uint32_t
}
class "::tson::TiledClass" as C_0009502915912803314917
class C_0009502915912803314917 {
+TiledClass() = default : void
+TiledClass(IJson & json, tson::Project * project = nullptr) : void
..
+get<T>(const std::string & name) : T
+getId() const : uint32_t
+getMember(const std::string & name) : tson::Property *
+getMembers() : PropertyCollection &
+getName() const : const std::string &
+getType() const : const std::string &
+update(IJson & json) : void
+update(PropertyCollection & properties) : void
__
-m_id : uint32_t
-m_members : PropertyCollection
-m_name : std::string
-m_type : std::string
}
class "::tson::WorldMapData" as C_0018055335264037754599
class C_0018055335264037754599 {
+WorldMapData(const fs::path & folder_, IJson & json) : void
..
+parse(const fs::path & folder_, IJson & json) : void
__
+fileName : std::string
+folder : fs::path
+path : fs::path
+position : tson::Vector2i
+size : tson::Vector2i
}
class "::tson::World" as C_0015149931815032336831
class C_0015149931815032336831 {
+World(std::unique_ptr<tson::IJson> jsonParser = std::make_unique<tson::Json11>()) : void
+World(const fs::path & path, std::unique_ptr<tson::IJson> jsonParser = std::make_unique<tson::Json11>()) : void
..
+contains(std::string_view filename) : bool
+get(std::string_view filename) const : const WorldMapData *
+getFolder() const : const fs::path &
+getMapData() const : const std::vector<WorldMapData> &
+getMaps() const : const std::vector<std::unique_ptr<tson::Map>> &
+getPath() const : const fs::path &
+getType() const : const std::string &
+loadMaps(tson::Tileson * parser) : std::size_t
+onlyShowAdjacentMaps() const : bool
+parse(const fs::path & path) : bool
-parseJson(IJson & json) : void
__
-m_folder : fs::path
-m_json : std::unique_ptr<IJson>
-m_mapData : std::vector<WorldMapData>
-m_maps : std::vector<std::unique_ptr<tson::Map>>
-m_onlyShowAdjacentMaps : bool
-m_path : fs::path
-m_type : std::string
}
class "::tson::ProjectPropertyTypes" as C_0008829823092709361764
class C_0008829823092709361764 {
+ProjectPropertyTypes() = default : void
..
+getClass(std::string_view name) : tson::TiledClass *
+getClasses() const : const std::vector<tson::TiledClass> &
+getEnumDefinition(std::string_view name) : tson::EnumDefinition *
+getEnums() const : const std::vector<tson::EnumDefinition> &
+isUnhandledContentFound() const : bool
+parse(IJson & json, tson::Project * project) : bool
__
-m_classes : std::vector<tson::TiledClass>
-m_enums : std::vector<tson::EnumDefinition>
-m_unhandledContentFound : bool
}
class "::tson::ProjectFolder" as C_0012729313111428749818
class C_0012729313111428749818 {
+ProjectFolder(const fs::path & path) : void
..
+getFiles() const : const std::vector<fs::path> &
+getPath() const : const fs::path &
+getSubFolders() const : const std::vector<ProjectFolder> &
+getWorld() const : const World &
+hasWorldFile() const : bool
-loadData() : void
__
-m_files : std::vector<fs::path>
-m_hasWorldFile : bool
-m_path : fs::path
-m_subFolders : std::vector<ProjectFolder>
-m_world : tson::World
}
class "::tson::ProjectData" as C_0013922245933573462882
class C_0013922245933573462882 {
+ProjectData() = default : void
__
+automappingRulesFile : std::string
+basePath : fs::path
+commands : std::vector<std::string>
+extensionsPath : std::string
+folderPaths : std::vector<tson::ProjectFolder>
+folders : std::vector<std::string>
+objectTypesFile : std::string
+projectPropertyTypes : ProjectPropertyTypes
}
class "::tson::Project" as C_0002226086523813738130
class C_0002226086523813738130 {
+Project(std::unique_ptr<tson::IJson> jsonParser = std::make_unique<tson::Json11>()) : void
+Project(const fs::path & path, std::unique_ptr<tson::IJson> jsonParser = std::make_unique<tson::Json11>()) : void
..
+getClass(std::string_view name) : tson::TiledClass *
+getData() const : const ProjectData &
+getEnumDefinition(std::string_view name) : tson::EnumDefinition *
+getFolders() const : const std::vector<ProjectFolder> &
+getPath() const : const fs::path &
+parse(const fs::path & path) : bool
+parse() : void
-parseJson(IJson & json) : void
__
-m_data : ProjectData
-m_folders : std::vector<ProjectFolder>
-m_json : std::unique_ptr<IJson>
-m_path : fs::path
}
class "::tson::IDecompressor<std::vector<uint8_t>,std::vector<uint8_t>>" as C_0005168395140250155706
class C_0005168395140250155706 {
__
}
class "::tson::Tileson" as C_0011785145769868716539
class C_0011785145769868716539 {
+Tileson(std::unique_ptr<tson::IJson> jsonParser = std::make_unique<tson::Json11>(), bool includeBase64Decoder = true) : void
+Tileson(tson::Project * project, std::unique_ptr<tson::IJson> jsonParser = std::make_unique<tson::Json11>(), bool includeBase64Decoder = true) : void
..
+decompressors() : tson::DecompressorContainer *
+parse(const fs::path & path, std::unique_ptr<IDecompressor<std::vector<uint8_t>,std::vector<uint8_t>>> decompressor = nullptr) : std::unique_ptr<tson::Map>
+parse(const void * data, size_t size, std::unique_ptr<IDecompressor<std::vector<uint8_t>,std::vector<uint8_t>>> decompressor = nullptr) : std::unique_ptr<tson::Map>
-parseJson() : std::unique_ptr<tson::Map>
__
-m_decompressors : tson::DecompressorContainer
-m_json : std::unique_ptr<tson::IJson>
-m_project : tson::Project *
}
class "::Map" as C_0002168616371899218417
class C_0002168616371899218417 {
__
+data : void *
+height : int
+tileHeight : int
+tileWidth : int
+width : int
}
class "::UI" as C_0000662366728407457659
class C_0000662366728407457659 {
+UI() : void
+~UI() : void
..
{static} +JsonToRectangleVector(const json & Json) : std::vector<Rectangle>
-UnLoadAllResources() : void
{static} +darkenColor(Color & color, int amount) : void
{static} +drawBackground() : void
{static} +drawLogo() : void
{static} +drawtext2(string message, int X, int Y, Color color) : void
{static} +getMaxTextSize(int charCount) : Vector2
-initBackgrounds() : void
-initGameMaps() : void
-initSprites() : void
{static} +interpolateColors(Color & color1, Color & color2, float t) : Color
{static} +lightenColor(Color & color, int amount) : void
__
{static} +font : Font
{static} +fontSize : const float
{static} +gameMap : std::unordered_map<string,Map>
{static} +jsonMap : std::unordered_map<string,json>
{static} +lastScreenHeight : int
{static} +lastScreenWidth : int
{static} +screenHeight : int
{static} +screenWidth : int
{static} +spacing : const float
{static} +textureMap : std::unordered_map<string,Texture2D>
}
enum "::sceneType" as C_0012864650144745875435
enum C_0012864650144745875435 {
MENU
GAME
}
abstract "::Scene" as C_0005375663403181666835
abstract C_0005375663403181666835 {
+~Scene() = default : void
..
{abstract} +displayScene() = 0 : void
{abstract} +displaySceneInCamera() = 0 : void
{abstract} +init() = 0 : void
{abstract} +updateScene() = 0 : void
{abstract} +updateSceneInCamera(Camera2D cam) = 0 : void
__
+CurrentScene : sceneType
}
class "::b2BodyUserData" as C_0010480396786040081666
class C_0010480396786040081666 {
+b2BodyUserData() : void
__
+pointer : uintptr_t
}
class "::b2FixtureUserData" as C_0012712027340285676933
class C_0012712027340285676933 {
+b2FixtureUserData() : void
__
+pointer : uintptr_t
}
class "::b2JointUserData" as C_0002674177373500377244
class C_0002674177373500377244 {
+b2JointUserData() : void
__
+pointer : uintptr_t
}
class "::b2Version" as C_0003032260073042759623
class C_0003032260073042759623 {
__
+major : int32
+minor : int32
+revision : int32
}
class "::b2Vec2" as C_0003812822555961955525
class C_0003812822555961955525 {
+b2Vec2() : void
+b2Vec2(float xIn, float yIn) : void
..
+operator()(int32 i) const : float
+operator()(int32 i) : float &
+operator*=(float a) : void
+operator+=(const b2Vec2 & v) : void
+operator-() const : b2Vec2
+operator-=(const b2Vec2 & v) : void
..
+IsValid() const : bool
+Length() const : float
+LengthSquared() const : float
+Normalize() : float
+Set(float x_, float y_) : void
+SetZero() : void
+Skew() const : b2Vec2
__
+x : float
+y : float
}
class "::b2Vec3" as C_0003812821456450327314
class C_0003812821456450327314 {
+b2Vec3() : void
+b2Vec3(float xIn, float yIn, float zIn) : void
..
+operator*=(float s) : void
+operator+=(const b2Vec3 & v) : void
+operator-() const : b2Vec3
+operator-=(const b2Vec3 & v) : void
..
+Set(float x_, float y_, float z_) : void
+SetZero() : void
__
+x : float
+y : float
+z : float
}
class "::b2Mat22" as C_0017980204731109064877
class C_0017980204731109064877 {
+b2Mat22() : void
+b2Mat22(const b2Vec2 & c1, const b2Vec2 & c2) : void
+b2Mat22(float a11, float a12, float a21, float a22) : void
..
+GetInverse() const : b2Mat22
+Set(const b2Vec2 & c1, const b2Vec2 & c2) : void
+SetIdentity() : void
+SetZero() : void
+Solve(const b2Vec2 & b) const : b2Vec2
__
+ex : b2Vec2
+ey : b2Vec2
}
class "::b2Mat33" as C_0017979209673085723147
class C_0017979209673085723147 {
+b2Mat33() : void
+b2Mat33(const b2Vec3 & c1, const b2Vec3 & c2, const b2Vec3 & c3) : void
..
+GetInverse22(b2Mat33 * M) const : void
+GetSymInverse33(b2Mat33 * M) const : void
+SetZero() : void
+Solve22(const b2Vec2 & b) const : b2Vec2
+Solve33(const b2Vec3 & b) const : b2Vec3
__
+ex : b2Vec3
+ey : b2Vec3
+ez : b2Vec3
}
class "::b2Rot" as C_0009644708234245857598
class C_0009644708234245857598 {
+b2Rot() : void
+b2Rot(float angle) : void
..
+GetAngle() const : float
+GetXAxis() const : b2Vec2
+GetYAxis() const : b2Vec2
+Set(float angle) : void
+SetIdentity() : void
__
+c : float
+s : float
}
class "::b2Transform" as C_0000346652009110516107
class C_0000346652009110516107 {
+b2Transform() : void
+b2Transform(const b2Vec2 & position, const b2Rot & rotation) : void
..
+Set(const b2Vec2 & position, float angle) : void
+SetIdentity() : void
__
+p : b2Vec2
+q : b2Rot
}
class "::b2Sweep" as C_0009333950187171621811
class C_0009333950187171621811 {
+Advance(float alpha) : void
+GetTransform(b2Transform * transform, float beta) const : void
+Normalize() : void
__
+a : float
+a0 : float
+alpha0 : float
+c : b2Vec2
+c0 : b2Vec2
+localCenter : b2Vec2
}
class "::b2Color" as C_0013906766942335327112
class C_0013906766942335327112 {
+b2Color() : void
+b2Color(float rIn, float gIn, float bIn, float aIn = 1.0f) : void
..
+Set(float rIn, float gIn, float bIn, float aIn = 1.0f) : void
__
+a : float
+b : float
+g : float
+r : float
}
abstract "::b2Draw" as C_0009217690173079532323
abstract C_0009217690173079532323 {
+b2Draw() : void
+~b2Draw() : void
..
+AppendFlags(uint32 flags) : void
+ClearFlags(uint32 flags) : void
{abstract} +DrawCircle(const b2Vec2 & center, float radius, const b2Color & color) = 0 : void
{abstract} +DrawPoint(const b2Vec2 & p, float size, const b2Color & color) = 0 : void
{abstract} +DrawPolygon(const b2Vec2 * vertices, int32 vertexCount, const b2Color & color) = 0 : void
{abstract} +DrawSegment(const b2Vec2 & p1, const b2Vec2 & p2, const b2Color & color) = 0 : void
{abstract} +DrawSolidCircle(const b2Vec2 & center, float radius, const b2Vec2 & axis, const b2Color & color) = 0 : void
{abstract} +DrawSolidPolygon(const b2Vec2 * vertices, int32 vertexCount, const b2Color & color) = 0 : void
{abstract} +DrawTransform(const b2Transform & xf) = 0 : void
+GetFlags() const : uint32
+SetFlags(uint32 flags) : void
__
+e_aabbBit : enum
+e_centerOfMassBit : enum
+e_jointBit : enum
+e_pairBit : enum
+e_shapeBit : enum
#m_drawFlags : uint32
}
class "::b2Timer" as C_0016263447212579339442
class C_0016263447212579339442 {
+b2Timer() : void
..
+GetMilliseconds() const : float
+Reset() : void
__
-m_start : double
{static} -s_invFrequency : double
}
class "::b2ContactFeature" as C_0018319343159754925143
class C_0018319343159754925143 {
__
+indexA : uint8
+indexB : uint8
+typeA : uint8
+typeB : uint8
}
enum "::b2ContactFeature::Type" as C_0005121733713352763813
enum C_0005121733713352763813 {
e_vertex
e_face
}
class "::b2ContactID" as C_0005884986936425598494
class C_0005884986936425598494 {
__
+cf : b2ContactFeature
+key : uint32
}
class "::b2ManifoldPoint" as C_0012733301075816404269
class C_0012733301075816404269 {
__
+id : b2ContactID
+localPoint : b2Vec2
+normalImpulse : float
+tangentImpulse : float
}
class "::b2Manifold" as C_0005019529119190885233
class C_0005019529119190885233 {
__
+localNormal : b2Vec2
+localPoint : b2Vec2
+pointCount : int32
+points : b2ManifoldPoint[2]
+type : Type
}
enum "::b2Manifold::Type" as C_0001114162067435375447
enum C_0001114162067435375447 {
e_circles
e_faceA
e_faceB
}
class "::b2WorldManifold" as C_0016070028742615763547
class C_0016070028742615763547 {
+Initialize(const b2Manifold * manifold, const b2Transform & xfA, float radiusA, const b2Transform & xfB, float radiusB) : void
__
+normal : b2Vec2
+points : b2Vec2[2]
+separations : float[2]
}
enum "::b2PointState" as C_0000831053613539757170
enum C_0000831053613539757170 {
b2_nullState
b2_addState
b2_persistState
b2_removeState
}
class "::b2ClipVertex" as C_0007683782363630523341
class C_0007683782363630523341 {
__
+id : b2ContactID
+v : b2Vec2
}
class "::b2RayCastInput" as C_0000196167065570127636
class C_0000196167065570127636 {
__
+maxFraction : float
+p1 : b2Vec2
+p2 : b2Vec2
}
class "::b2RayCastOutput" as C_0009056456749649225917
class C_0009056456749649225917 {
__
+fraction : float
+normal : b2Vec2
}
class "::b2AABB" as C_0000226836367160902599
class C_0000226836367160902599 {
+Combine(const b2AABB & aabb) : void
+Combine(const b2AABB & aabb1, const b2AABB & aabb2) : void
+Contains(const b2AABB & aabb) const : bool
+GetCenter() const : b2Vec2
+GetExtents() const : b2Vec2
+GetPerimeter() const : float
+IsValid() const : bool
+RayCast(b2RayCastOutput * output, const b2RayCastInput & input) const : bool
__
+lowerBound : b2Vec2
+upperBound : b2Vec2
}
class "::b2MassData" as C_0010216570007280807313
class C_0010216570007280807313 {
__
+I : float
+center : b2Vec2
+mass : float
}
abstract "::b2Shape" as C_0003000371448486356854
abstract C_0003000371448486356854 {
+~b2Shape() : void
..
{abstract} +Clone(b2BlockAllocator * allocator) const = 0 : b2Shape *
{abstract} +ComputeAABB(b2AABB * aabb, const b2Transform & xf, int32 childIndex) const = 0 : void
{abstract} +ComputeMass(b2MassData * massData, float density) const = 0 : void
{abstract} +GetChildCount() const = 0 : int32
+GetType() const : Type
{abstract} +RayCast(b2RayCastOutput * output, const b2RayCastInput & input, const b2Transform & transform, int32 childIndex) const = 0 : bool
{abstract} +TestPoint(const b2Transform & xf, const b2Vec2 & p) const = 0 : bool
__
+m_radius : float
+m_type : Type
}
enum "::b2Shape::Type" as C_0008723901415890597516
enum C_0008723901415890597516 {
e_circle
e_edge
e_polygon
e_chain
e_typeCount
}
class "::b2ChainShape" as C_0000478046569299558051
class C_0000478046569299558051 {
+b2ChainShape() : void
+~b2ChainShape() : void
..
+Clear() : void
+Clone(b2BlockAllocator * allocator) const : b2Shape *
+ComputeAABB(b2AABB * aabb, const b2Transform & transform, int32 childIndex) const : void
+ComputeMass(b2MassData * massData, float density) const : void
+CreateChain(const b2Vec2 * vertices, int32 count, const b2Vec2 & prevVertex, const b2Vec2 & nextVertex) : void
+CreateLoop(const b2Vec2 * vertices, int32 count) : void
+GetChildCount() const : int32
+GetChildEdge(b2EdgeShape * edge, int32 index) const : void
+RayCast(b2RayCastOutput * output, const b2RayCastInput & input, const b2Transform & transform, int32 childIndex) const : bool
+TestPoint(const b2Transform & transform, const b2Vec2 & p) const : bool
__
+m_count : int32
+m_nextVertex : b2Vec2
+m_prevVertex : b2Vec2
+m_vertices : b2Vec2 *
}
class "::b2CircleShape" as C_0015990385314185060778
class C_0015990385314185060778 {
+b2CircleShape() : void
..
+Clone(b2BlockAllocator * allocator) const : b2Shape *
+ComputeAABB(b2AABB * aabb, const b2Transform & transform, int32 childIndex) const : void
+ComputeMass(b2MassData * massData, float density) const : void
+GetChildCount() const : int32
+RayCast(b2RayCastOutput * output, const b2RayCastInput & input, const b2Transform & transform, int32 childIndex) const : bool
+TestPoint(const b2Transform & transform, const b2Vec2 & p) const : bool
__
+m_p : b2Vec2
}
class "::b2EdgeShape" as C_0012257255947819176353
class C_0012257255947819176353 {
+b2EdgeShape() : void
..
+Clone(b2BlockAllocator * allocator) const : b2Shape *
+ComputeAABB(b2AABB * aabb, const b2Transform & transform, int32 childIndex) const : void
+ComputeMass(b2MassData * massData, float density) const : void
+GetChildCount() const : int32
+RayCast(b2RayCastOutput * output, const b2RayCastInput & input, const b2Transform & transform, int32 childIndex) const : bool
+SetOneSided(const b2Vec2 & v0, const b2Vec2 & v1, const b2Vec2 & v2, const b2Vec2 & v3) : void
+SetTwoSided(const b2Vec2 & v1, const b2Vec2 & v2) : void
+TestPoint(const b2Transform & transform, const b2Vec2 & p) const : bool
__
+m_oneSided : bool
+m_vertex0 : b2Vec2
+m_vertex1 : b2Vec2
+m_vertex2 : b2Vec2
+m_vertex3 : b2Vec2
}
class "::b2PolygonShape" as C_0012772870077689880394
class C_0012772870077689880394 {
+b2PolygonShape() : void
..
+Clone(b2BlockAllocator * allocator) const : b2Shape *
+ComputeAABB(b2AABB * aabb, const b2Transform & transform, int32 childIndex) const : void
+ComputeMass(b2MassData * massData, float density) const : void
+GetChildCount() const : int32
+RayCast(b2RayCastOutput * output, const b2RayCastInput & input, const b2Transform & transform, int32 childIndex) const : bool
+Set(const b2Vec2 * points, int32 count) : void
+SetAsBox(float hx, float hy) : void
+SetAsBox(float hx, float hy, const b2Vec2 & center, float angle) : void
+TestPoint(const b2Transform & transform, const b2Vec2 & p) const : bool
+Validate() const : bool
__
+m_centroid : b2Vec2
+m_count : int32
+m_normals : b2Vec2[8]
+m_vertices : b2Vec2[8]
}
class "::b2GrowableStack<T,int32 N>" as C_0003462799278233051858
class C_0003462799278233051858 {
+b2GrowableStack() : void
+~b2GrowableStack() : void
..
+GetCount() : int32
+Pop() : T
+Push(const T & element) : void
__
-m_array : T[]
-m_capacity : int32
-m_count : int32
-m_stack : T *
}
class "::b2TreeNode" as C_0003151991409790156045
class C_0003151991409790156045 {
+IsLeaf() const : bool
__
+ : b2TreeNode::()
+aabb : b2AABB
+child1 : int32
+child2 : int32
+height : int32
+moved : bool
+userData : void *
}
class "::b2TreeNode::()" as C_0016152551541250679088
class C_0016152551541250679088 {
__
+next : int32
+parent : int32
}
class "::b2DynamicTree" as C_0005262335254171406786
class C_0005262335254171406786 {
+b2DynamicTree() : void
+~b2DynamicTree() : void
..
-AllocateNode() : int32
-Balance(int32 index) : int32
+ClearMoved(int32 proxyId) : void
-ComputeHeight() const : int32
-ComputeHeight(int32 nodeId) const : int32
+CreateProxy(const b2AABB & aabb, void * userData) : int32
+DestroyProxy(int32 proxyId) : void
-FreeNode(int32 node) : void
+GetAreaRatio() const : float
+GetFatAABB(int32 proxyId) const : const b2AABB &
+GetHeight() const : int32
+GetMaxBalance() const : int32
+GetUserData(int32 proxyId) const : void *
-InsertLeaf(int32 node) : void
+MoveProxy(int32 proxyId, const b2AABB & aabb1, const b2Vec2 & displacement) : bool
+Query<T>(T * callback, const b2AABB & aabb) const : void
+RayCast<T>(T * callback, const b2RayCastInput & input) const : void
+RebuildBottomUp() : void
-RemoveLeaf(int32 node) : void
+ShiftOrigin(const b2Vec2 & newOrigin) : void
+Validate() const : void
-ValidateMetrics(int32 index) const : void
-ValidateStructure(int32 index) const : void
+WasMoved(int32 proxyId) const : bool
__
-m_freeList : int32
-m_insertionCount : int32
-m_nodeCapacity : int32
-m_nodeCount : int32
-m_nodes : b2TreeNode *
-m_root : int32
}
class "::b2Pair" as C_0009090918250511209985
class C_0009090918250511209985 {
__
+proxyIdA : int32
+proxyIdB : int32
}
class "::b2BroadPhase" as C_0016410286386777299062
class C_0016410286386777299062 {
+b2BroadPhase() : void
+~b2BroadPhase() : void
..
-BufferMove(int32 proxyId) : void
+CreateProxy(const b2AABB & aabb, void * userData) : int32
+DestroyProxy(int32 proxyId) : void
+GetFatAABB(int32 proxyId) const : const b2AABB &
+GetProxyCount() const : int32
+GetTreeBalance() const : int32
+GetTreeHeight() const : int32
+GetTreeQuality() const : float
+GetUserData(int32 proxyId) const : void *
+MoveProxy(int32 proxyId, const b2AABB & aabb, const b2Vec2 & displacement) : void
+Query<T>(T * callback, const b2AABB & aabb) const : void
-QueryCallback(int32 proxyId) : bool
+RayCast<T>(T * callback, const b2RayCastInput & input) const : void
+ShiftOrigin(const b2Vec2 & newOrigin) : void
+TestOverlap(int32 proxyIdA, int32 proxyIdB) const : bool
+TouchProxy(int32 proxyId) : void
-UnBufferMove(int32 proxyId) : void
+UpdatePairs<T>(T * callback) : void
__
+e_nullProxy : enum
-m_moveBuffer : int32 *
-m_moveCapacity : int32
-m_moveCount : int32
-m_pairBuffer : b2Pair *
-m_pairCapacity : int32
-m_pairCount : int32
-m_proxyCount : int32
-m_queryProxyId : int32
-m_tree : b2DynamicTree
}
enum "::b2BodyType" as C_0000762258192194901165
enum C_0000762258192194901165 {
b2_staticBody
b2_kinematicBody
b2_dynamicBody
}
class "::b2BodyDef" as C_0010927236939767269964
class C_0010927236939767269964 {
+b2BodyDef() : void
__
+allowSleep : bool
+angle : float
+angularDamping : float
+angularVelocity : float
+awake : bool
+bullet : bool
+enabled : bool
+fixedRotation : bool
+gravityScale : float
+linearDamping : float
+linearVelocity : b2Vec2
+position : b2Vec2
+type : b2BodyType
+userData : b2BodyUserData
}
class "::b2Body" as C_0014431558028158227333
class C_0014431558028158227333 {
-b2Body(const b2BodyDef * bd, b2World * world) : void
-~b2Body() : void
..
-Advance(float t) : void
+ApplyAngularImpulse(float impulse, bool wake) : void
+ApplyForce(const b2Vec2 & force, const b2Vec2 & point, bool wake) : void
+ApplyForceToCenter(const b2Vec2 & force, bool wake) : void
+ApplyLinearImpulse(const b2Vec2 & impulse, const b2Vec2 & point, bool wake) : void
+ApplyLinearImpulseToCenter(const b2Vec2 & impulse, bool wake) : void
+ApplyTorque(float torque, bool wake) : void
+CreateFixture(const b2Shape * shape, float density) : b2Fixture *
+CreateFixture(const b2FixtureDef * def) : b2Fixture *
+DestroyFixture(b2Fixture * fixture) : void
+Dump() : void
+GetAngle() const : float
+GetAngularDamping() const : float
+GetAngularVelocity() const : float
+GetContactList() const : const b2ContactEdge *
+GetContactList() : b2ContactEdge *
+GetFixtureList() : b2Fixture *
+GetFixtureList() const : const b2Fixture *
+GetGravityScale() const : float
+GetInertia() const : float
+GetJointList() const : const b2JointEdge *
+GetJointList() : b2JointEdge *
+GetLinearDamping() const : float
+GetLinearVelocity() const : const b2Vec2 &
+GetLinearVelocityFromLocalPoint(const b2Vec2 & localPoint) const : b2Vec2
+GetLinearVelocityFromWorldPoint(const b2Vec2 & worldPoint) const : b2Vec2
+GetLocalCenter() const : const b2Vec2 &
+GetLocalPoint(const b2Vec2 & worldPoint) const : b2Vec2
+GetLocalVector(const b2Vec2 & worldVector) const : b2Vec2
+GetMass() const : float
+GetMassData(b2MassData * data) const : void
+GetNext() const : const b2Body *
+GetNext() : b2Body *
+GetPosition() const : const b2Vec2 &
+GetTransform() const : const b2Transform &
+GetType() const : b2BodyType
+GetUserData() : b2BodyUserData &
+GetWorld() : b2World *
+GetWorld() const : const b2World *
+GetWorldCenter() const : const b2Vec2 &
+GetWorldPoint(const b2Vec2 & localPoint) const : b2Vec2
+GetWorldVector(const b2Vec2 & localVector) const : b2Vec2
+IsAwake() const : bool
+IsBullet() const : bool
+IsEnabled() const : bool
+IsFixedRotation() const : bool
+IsSleepingAllowed() const : bool
+ResetMassData() : void
+SetAngularDamping(float angularDamping) : void
+SetAngularVelocity(float omega) : void
+SetAwake(bool flag) : void
+SetBullet(bool flag) : void
+SetEnabled(bool flag) : void
+SetFixedRotation(bool flag) : void
+SetGravityScale(float scale) : void
+SetLinearDamping(float linearDamping) : void
+SetLinearVelocity(const b2Vec2 & v) : void
+SetMassData(const b2MassData * data) : void
+SetSleepingAllowed(bool flag) : void
+SetTransform(const b2Vec2 & position, float angle) : void
+SetType(b2BodyType type) : void
+SetUserData(void * data) : void
-ShouldCollide(const b2Body * other) const : bool
-SynchronizeFixtures() : void
-SynchronizeTransform() : void
__
-e_autoSleepFlag : enum
-e_awakeFlag : enum
-e_bulletFlag : enum
-e_enabledFlag : enum
-e_fixedRotationFlag : enum
-e_islandFlag : enum
-e_toiFlag : enum
-m_I : float
-m_angularDamping : float
-m_angularVelocity : float
-m_contactList : b2ContactEdge *
-m_fixtureCount : int32
-m_fixtureList : b2Fixture *
-m_flags : uint16
-m_force : b2Vec2
-m_gravityScale : float
-m_invI : float
-m_invMass : float
-m_islandIndex : int32
-m_jointList : b2JointEdge *
-m_linearDamping : float
-m_linearVelocity : b2Vec2
-m_mass : float
-m_next : b2Body *
-m_prev : b2Body *
-m_sleepTime : float
-m_sweep : b2Sweep
-m_torque : float
-m_type : b2BodyType
-m_userData : b2BodyUserData
-m_world : b2World *
-m_xf : b2Transform
}
class "::b2Filter" as C_0012857986990123872391
class C_0012857986990123872391 {
+b2Filter() : void
__
+categoryBits : uint16
+groupIndex : int16
+maskBits : uint16
}
class "::b2FixtureDef" as C_0004055581291559354953
class C_0004055581291559354953 {
+b2FixtureDef() : void
__
+density : float
+filter : b2Filter
+friction : float
+isSensor : bool
+restitution : float
+restitutionThreshold : float
+shape : const b2Shape *
+userData : b2FixtureUserData
}
class "::b2FixtureProxy" as C_0009951921249395685630
class C_0009951921249395685630 {
__
+aabb : b2AABB
+childIndex : int32
+fixture : b2Fixture *
+proxyId : int32
}
class "::b2Fixture" as C_0004355695568106680866
class C_0004355695568106680866 {
#b2Fixture() : void
..
#Create(b2BlockAllocator * allocator, b2Body * body, const b2FixtureDef * def) : void
#CreateProxies(b2BroadPhase * broadPhase, const b2Transform & xf) : void
#Destroy(b2BlockAllocator * allocator) : void
#DestroyProxies(b2BroadPhase * broadPhase) : void
+Dump(int32 bodyIndex) : void
+GetAABB(int32 childIndex) const : const b2AABB &
+GetBody() : b2Body *
+GetBody() const : const b2Body *
+GetDensity() const : float
+GetFilterData() const : const b2Filter &
+GetFriction() const : float
+GetMassData(b2MassData * massData) const : void
+GetNext() : b2Fixture *
+GetNext() const : const b2Fixture *
+GetRestitution() const : float
+GetRestitutionThreshold() const : float
+GetShape() : b2Shape *
+GetShape() const : const b2Shape *
+GetType() const : b2Shape::Type
+GetUserData() : b2FixtureUserData &
+IsSensor() const : bool
+RayCast(b2RayCastOutput * output, const b2RayCastInput & input, int32 childIndex) const : bool
+Refilter() : void
+SetDensity(float density) : void
+SetFilterData(const b2Filter & filter) : void
+SetFriction(float friction) : void
+SetRestitution(float restitution) : void
+SetRestitutionThreshold(float threshold) : void
+SetSensor(bool sensor) : void
#Synchronize(b2BroadPhase * broadPhase, const b2Transform & xf1, const b2Transform & xf2) : void
+TestPoint(const b2Vec2 & p) const : bool
__
#m_body : b2Body *
#m_density : float
#m_filter : b2Filter
#m_friction : float
#m_isSensor : bool
#m_next : b2Fixture *
#m_proxies : b2FixtureProxy *
#m_proxyCount : int32
#m_restitution : float
#m_restitutionThreshold : float
#m_shape : b2Shape *
#m_userData : b2FixtureUserData
}
class "::b2ContactRegister" as C_0005398248481778728070
class C_0005398248481778728070 {
__
+createFcn : b2ContactCreateFcn *
+destroyFcn : b2ContactDestroyFcn *
+primary : bool
}
class "::b2ContactEdge" as C_0001201219153424373758
class C_0001201219153424373758 {
__
+contact : b2Contact *
+next : b2ContactEdge *
+other : b2Body *
+prev : b2ContactEdge *
}
abstract "::b2Contact" as C_0015346116249192293971
abstract C_0015346116249192293971 {
#b2Contact() : void
#b2Contact(b2Fixture * fixtureA, int32 indexA, b2Fixture * fixtureB, int32 indexB) : void
#~b2Contact() : void
..
{static} #AddType(b2ContactCreateFcn * createFcn, b2ContactDestroyFcn * destroyFcn, b2Shape::Type typeA, b2Shape::Type typeB) : void
{static} #Create(b2Fixture * fixtureA, int32 indexA, b2Fixture * fixtureB, int32 indexB, b2BlockAllocator * allocator) : b2Contact *
{static} #Destroy(b2Contact * contact, b2Shape::Type typeA, b2Shape::Type typeB, b2BlockAllocator * allocator) : void
{static} #Destroy(b2Contact * contact, b2BlockAllocator * allocator) : void
{abstract} +Evaluate(b2Manifold * manifold, const b2Transform & xfA, const b2Transform & xfB) = 0 : void
#FlagForFiltering() : void
+GetChildIndexA() const : int32
+GetChildIndexB() const : int32
+GetFixtureA() : b2Fixture *
+GetFixtureA() const : const b2Fixture *
+GetFixtureB() : b2Fixture *
+GetFixtureB() const : const b2Fixture *
+GetFriction() const : float
+GetManifold() : b2Manifold *
+GetManifold() const : const b2Manifold *
+GetNext() : b2Contact *
+GetNext() const : const b2Contact *
+GetRestitution() const : float
+GetRestitutionThreshold() const : float
+GetTangentSpeed() const : float
+GetWorldManifold(b2WorldManifold * worldManifold) const : void
{static} #InitializeRegisters() : void
+IsEnabled() const : bool
+IsTouching() const : bool
+ResetFriction() : void
+ResetRestitution() : void
+ResetRestitutionThreshold() : void
+SetEnabled(bool flag) : void
+SetFriction(float friction) : void
+SetRestitution(float restitution) : void
+SetRestitutionThreshold(float threshold) : void
+SetTangentSpeed(float speed) : void
#Update(b2ContactListener * listener) : void
__
#e_bulletHitFlag : enum
#e_enabledFlag : enum
#e_filterFlag : enum
#e_islandFlag : enum
#e_toiFlag : enum
#e_touchingFlag : enum
#m_fixtureA : b2Fixture *
#m_fixtureB : b2Fixture *
#m_flags : uint32
#m_friction : float
#m_indexA : int32
#m_indexB : int32
#m_manifold : b2Manifold
#m_next : b2Contact *
#m_nodeA : b2ContactEdge
#m_nodeB : b2ContactEdge
#m_prev : b2Contact *
#m_restitution : float
#m_restitutionThreshold : float
#m_tangentSpeed : float
#m_toi : float
#m_toiCount : int32
{static} #s_initialized : bool
{static} #s_registers : b2ContactRegister[4][4]
}
class "::b2Profile" as C_0001256548254881086590
class C_0001256548254881086590 {
__
+broadphase : float
+collide : float
+solve : float
+solveInit : float
+solvePosition : float
+solveTOI : float
+solveVelocity : float
+step : float
}
class "::b2TimeStep" as C_0003881792231892835462
class C_0003881792231892835462 {
__
+dt : float
+dtRatio : float
+inv_dt : float
+positionIterations : int32
+velocityIterations : int32
+warmStarting : bool
}
class "::b2Position" as C_0005082229002559074426
class C_0005082229002559074426 {
__
+a : float
+c : b2Vec2
}
class "::b2Velocity" as C_0002144828679823746754
class C_0002144828679823746754 {
__
+v : b2Vec2
+w : float
}
class "::b2SolverData" as C_0010824632440601676822
class C_0010824632440601676822 {
__
+positions : b2Position *
+step : b2TimeStep
+velocities : b2Velocity *
}
class "::b2BlockAllocator" as C_0012192574763141661931
class C_0012192574763141661931 {
+b2BlockAllocator() : void
+~b2BlockAllocator() : void
..
+Allocate(int32 size) : void *
+Clear() : void
+Free(void * p, int32 size) : void
__
-m_chunkCount : int32
-m_chunkSpace : int32
-m_chunks : b2Chunk *
-m_freeLists : b2Block *[14]
}
class "::b2ContactManager" as C_0016301306221368236258
class C_0016301306221368236258 {
+b2ContactManager() : void
..
+AddPair(void * proxyUserDataA, void * proxyUserDataB) : void
+Collide() : void
+Destroy(b2Contact * c) : void
+FindNewContacts() : void
__
+m_allocator : b2BlockAllocator *
+m_broadPhase : b2BroadPhase
+m_contactCount : int32
+m_contactFilter : b2ContactFilter *
+m_contactList : b2Contact *
+m_contactListener : b2ContactListener *
}
class "::b2StackEntry" as C_0000257776788775351993
class C_0000257776788775351993 {
__
+data : char *
+size : int32
+usedMalloc : bool
}
class "::b2StackAllocator" as C_0003390523873142708152
class C_0003390523873142708152 {
+b2StackAllocator() : void
+~b2StackAllocator() : void
..
+Allocate(int32 size) : void *
+Free(void * p) : void
+GetMaxAllocation() const : int32
__
-m_allocation : int32
-m_data : char[102400]
-m_entries : b2StackEntry[32]
-m_entryCount : int32
-m_index : int32
-m_maxAllocation : int32
}
abstract "::b2DestructionListener" as C_0012453610003246706635
abstract C_0012453610003246706635 {
+~b2DestructionListener() : void
..
{abstract} +SayGoodbye(b2Joint * joint) = 0 : void
{abstract} +SayGoodbye(b2Fixture * fixture) = 0 : void
__
}
class "::b2ContactFilter" as C_0005425839511774131293
class C_0005425839511774131293 {
+~b2ContactFilter() : void
..
+ShouldCollide(b2Fixture * fixtureA, b2Fixture * fixtureB) : bool
__
}
class "::b2ContactImpulse" as C_0012302709397322061810
class C_0012302709397322061810 {
__
+count : int32
+normalImpulses : float[2]
+tangentImpulses : float[2]
}
class "::b2ContactListener" as C_0017299758025154478123
class C_0017299758025154478123 {
+~b2ContactListener() : void
..
+BeginContact(b2Contact * contact) : void
+EndContact(b2Contact * contact) : void
+PostSolve(b2Contact * contact, const b2ContactImpulse * impulse) : void
+PreSolve(b2Contact * contact, const b2Manifold * oldManifold) : void
__
}
abstract "::b2QueryCallback" as C_0009157555385351992844
abstract C_0009157555385351992844 {
+~b2QueryCallback() : void
..
{abstract} +ReportFixture(b2Fixture * fixture) = 0 : bool
__
}
abstract "::b2RayCastCallback" as C_0007312336267933432555
abstract C_0007312336267933432555 {
+~b2RayCastCallback() : void
..
{abstract} +ReportFixture(b2Fixture * fixture, const b2Vec2 & point, const b2Vec2 & normal, float fraction) = 0 : float
__
}
class "::b2World" as C_0008094403704418488227
class C_0008094403704418488227 {
+b2World(const b2Vec2 & gravity) : void
+~b2World() : void
..
+ClearForces() : void
+CreateBody(const b2BodyDef * def) : b2Body *
+CreateJoint(const b2JointDef * def) : b2Joint *
+DebugDraw() : void
+DestroyBody(b2Body * body) : void
+DestroyJoint(b2Joint * joint) : void
-DrawShape(b2Fixture * shape, const b2Transform & xf, const b2Color & color) : void
+Dump() : void
+GetAllowSleeping() const : bool
+GetAutoClearForces() const : bool
+GetBodyCount() const : int32
+GetBodyList() const : const b2Body *
+GetBodyList() : b2Body *
+GetContactCount() const : int32
+GetContactList() : b2Contact *
+GetContactList() const : const b2Contact *
+GetContactManager() const : const b2ContactManager &
+GetContinuousPhysics() const : bool
+GetGravity() const : b2Vec2
+GetJointCount() const : int32
+GetJointList() : b2Joint *
+GetJointList() const : const b2Joint *
+GetProfile() const : const b2Profile &
+GetProxyCount() const : int32
+GetSubStepping() const : bool
+GetTreeBalance() const : int32
+GetTreeHeight() const : int32
+GetTreeQuality() const : float
+GetWarmStarting() const : bool
+IsLocked() const : bool
+QueryAABB(b2QueryCallback * callback, const b2AABB & aabb) const : void
+RayCast(b2RayCastCallback * callback, const b2Vec2 & point1, const b2Vec2 & point2) const : void
+SetAllowSleeping(bool flag) : void
+SetAutoClearForces(bool flag) : void
+SetContactFilter(b2ContactFilter * filter) : void
+SetContactListener(b2ContactListener * listener) : void
+SetContinuousPhysics(bool flag) : void
+SetDebugDraw(b2Draw * debugDraw) : void
+SetDestructionListener(b2DestructionListener * listener) : void
+SetGravity(const b2Vec2 & gravity) : void
+SetSubStepping(bool flag) : void
+SetWarmStarting(bool flag) : void
+ShiftOrigin(const b2Vec2 & newOrigin) : void
-Solve(const b2TimeStep & step) : void
-SolveTOI(const b2TimeStep & step) : void
+Step(float timeStep, int32 velocityIterations, int32 positionIterations) : void
__
-m_allowSleep : bool
-m_blockAllocator : b2BlockAllocator
-m_bodyCount : int32
-m_bodyList : b2Body *
-m_clearForces : bool
-m_contactManager : b2ContactManager
-m_continuousPhysics : bool
-m_debugDraw : b2Draw *
-m_destructionListener : b2DestructionListener *
-m_gravity : b2Vec2
-m_inv_dt0 : float
-m_jointCount : int32
-m_jointList : b2Joint *
-m_locked : bool
-m_newContacts : bool
-m_profile : b2Profile
-m_stackAllocator : b2StackAllocator
-m_stepComplete : bool
-m_subStepping : bool
-m_warmStarting : bool
}
enum "::b2JointType" as C_0001170358961472525663
enum C_0001170358961472525663 {
e_unknownJoint
e_revoluteJoint
e_prismaticJoint
e_distanceJoint
e_pulleyJoint
e_mouseJoint
e_gearJoint
e_wheelJoint
e_weldJoint
e_frictionJoint
e_ropeJoint
e_motorJoint
}
class "::b2Jacobian" as C_0008765251238376257108
class C_0008765251238376257108 {
__
+angularA : float
+angularB : float
+linear : b2Vec2
}
class "::b2JointEdge" as C_0010478572020270491714
class C_0010478572020270491714 {
__
+joint : b2Joint *
+next : b2JointEdge *
+other : b2Body *
+prev : b2JointEdge *
}
class "::b2JointDef" as C_0007772680418527516662
class C_0007772680418527516662 {
+b2JointDef() : void
__
+bodyA : b2Body *
+bodyB : b2Body *
+collideConnected : bool
+type : b2JointType
+userData : b2JointUserData
}
abstract "::b2Joint" as C_0008506373310679209255
abstract C_0008506373310679209255 {
#b2Joint(const b2JointDef * def) : void
#~b2Joint() : void
..
{static} #Create(const b2JointDef * def, b2BlockAllocator * allocator) : b2Joint *
{static} #Destroy(b2Joint * joint, b2BlockAllocator * allocator) : void
+Draw(b2Draw * draw) const : void
+Dump() : void
{abstract} +GetAnchorA() const = 0 : b2Vec2
{abstract} +GetAnchorB() const = 0 : b2Vec2
+GetBodyA() : b2Body *
+GetBodyB() : b2Body *
+GetCollideConnected() const : bool
+GetNext() : b2Joint *
+GetNext() const : const b2Joint *
{abstract} +GetReactionForce(float inv_dt) const = 0 : b2Vec2
{abstract} +GetReactionTorque(float inv_dt) const = 0 : float
+GetType() const : b2JointType
+GetUserData() : b2JointUserData &
{abstract} #InitVelocityConstraints(const b2SolverData & data) = 0 : void
+IsEnabled() const : bool
+ShiftOrigin(const b2Vec2 & newOrigin) : void
{abstract} #SolvePositionConstraints(const b2SolverData & data) = 0 : bool
{abstract} #SolveVelocityConstraints(const b2SolverData & data) = 0 : void
__
#m_bodyA : b2Body *
#m_bodyB : b2Body *
#m_collideConnected : bool
#m_edgeA : b2JointEdge
#m_edgeB : b2JointEdge
#m_index : int32
#m_islandFlag : bool
#m_next : b2Joint *
#m_prev : b2Joint *
#m_type : b2JointType
#m_userData : b2JointUserData
}
class "::b2DistanceJointDef" as C_0018002893780957913621
class C_0018002893780957913621 {
+b2DistanceJointDef() : void
..
+Initialize(b2Body * bodyA, b2Body * bodyB, const b2Vec2 & anchorA, const b2Vec2 & anchorB) : void
__
+damping : float
+length : float
+localAnchorA : b2Vec2
+localAnchorB : b2Vec2
+maxLength : float
+minLength : float
+stiffness : float
}
class "::b2DistanceJoint" as C_0014226923019769521758
class C_0014226923019769521758 {
#b2DistanceJoint(const b2DistanceJointDef * data) : void
..
+Draw(b2Draw * draw) const : void
+Dump() : void
+GetAnchorA() const : b2Vec2
+GetAnchorB() const : b2Vec2
+GetCurrentLength() const : float
+GetDamping() const : float
+GetLength() const : float
+GetLocalAnchorA() const : const b2Vec2 &
+GetLocalAnchorB() const : const b2Vec2 &
+GetMaxLength() const : float
+GetMinLength() const : float
+GetReactionForce(float inv_dt) const : b2Vec2
+GetReactionTorque(float inv_dt) const : float
+GetStiffness() const : float
#InitVelocityConstraints(const b2SolverData & data) : void
+SetDamping(float damping) : void
+SetLength(float length) : float
+SetMaxLength(float maxLength) : float
+SetMinLength(float minLength) : float
+SetStiffness(float stiffness) : void
#SolvePositionConstraints(const b2SolverData & data) : bool
#SolveVelocityConstraints(const b2SolverData & data) : void
__
#m_bias : float
#m_currentLength : float
#m_damping : float
#m_gamma : float
#m_impulse : float
#m_indexA : int32
#m_indexB : int32
#m_invIA : float
#m_invIB : float
#m_invMassA : float
#m_invMassB : float
#m_length : float
#m_localAnchorA : b2Vec2
#m_localAnchorB : b2Vec2
#m_localCenterA : b2Vec2
#m_localCenterB : b2Vec2
#m_lowerImpulse : float
#m_mass : float
#m_maxLength : float
#m_minLength : float
#m_rA : b2Vec2
#m_rB : b2Vec2
#m_softMass : float
#m_stiffness : float
#m_u : b2Vec2
#m_upperImpulse : float
}
class "::b2FrictionJointDef" as C_0006761813654598190276
class C_0006761813654598190276 {
+b2FrictionJointDef() : void
..
+Initialize(b2Body * bodyA, b2Body * bodyB, const b2Vec2 & anchor) : void
__
+localAnchorA : b2Vec2
+localAnchorB : b2Vec2
+maxForce : float
+maxTorque : float
}
class "::b2FrictionJoint" as C_0015238748518123560109
class C_0015238748518123560109 {
#b2FrictionJoint(const b2FrictionJointDef * def) : void
..
+Dump() : void
+GetAnchorA() const : b2Vec2
+GetAnchorB() const : b2Vec2
+GetLocalAnchorA() const : const b2Vec2 &
+GetLocalAnchorB() const : const b2Vec2 &
+GetMaxForce() const : float
+GetMaxTorque() const : float
+GetReactionForce(float inv_dt) const : b2Vec2
+GetReactionTorque(float inv_dt) const : float
#InitVelocityConstraints(const b2SolverData & data) : void
+SetMaxForce(float force) : void
+SetMaxTorque(float torque) : void
#SolvePositionConstraints(const b2SolverData & data) : bool
#SolveVelocityConstraints(const b2SolverData & data) : void
__
#m_angularImpulse : float
#m_angularMass : float
#m_indexA : int32
#m_indexB : int32
#m_invIA : float
#m_invIB : float
#m_invMassA : float
#m_invMassB : float
#m_linearImpulse : b2Vec2
#m_linearMass : b2Mat22
#m_localAnchorA : b2Vec2
#m_localAnchorB : b2Vec2
#m_localCenterA : b2Vec2
#m_localCenterB : b2Vec2
#m_maxForce : float
#m_maxTorque : float
#m_rA : b2Vec2
#m_rB : b2Vec2
}
class "::b2GearJointDef" as C_0006222303576440319089
class C_0006222303576440319089 {
+b2GearJointDef() : void
__
+joint1 : b2Joint *
+joint2 : b2Joint *
+ratio : float
}
class "::b2GearJoint" as C_0007027711723233256282
class C_0007027711723233256282 {
#b2GearJoint(const b2GearJointDef * data) : void
..
+Dump() : void
+GetAnchorA() const : b2Vec2
+GetAnchorB() const : b2Vec2
+GetJoint1() : b2Joint *
+GetJoint2() : b2Joint *
+GetRatio() const : float
+GetReactionForce(float inv_dt) const : b2Vec2
+GetReactionTorque(float inv_dt) const : float
#InitVelocityConstraints(const b2SolverData & data) : void
+SetRatio(float ratio) : void
#SolvePositionConstraints(const b2SolverData & data) : bool
#SolveVelocityConstraints(const b2SolverData & data) : void
__
#m_JvAC : b2Vec2
#m_JvBD : b2Vec2
#m_JwA : float
#m_JwB : float
#m_JwC : float
#m_JwD : float
#m_bodyC : b2Body *
#m_bodyD : b2Body *
#m_constant : float
#m_iA : float
#m_iB : float
#m_iC : float
#m_iD : float
#m_impulse : float
#m_indexA : int32
#m_indexB : int32
#m_indexC : int32
#m_indexD : int32
#m_joint1 : b2Joint *
#m_joint2 : b2Joint *
#m_lcA : b2Vec2
#m_lcB : b2Vec2
#m_lcC : b2Vec2
#m_lcD : b2Vec2
#m_localAnchorA : b2Vec2
#m_localAnchorB : b2Vec2
#m_localAnchorC : b2Vec2
#m_localAnchorD : b2Vec2
#m_localAxisC : b2Vec2
#m_localAxisD : b2Vec2
#m_mA : float
#m_mB : float
#m_mC : float
#m_mD : float
#m_mass : float
#m_ratio : float
#m_referenceAngleA : float
#m_referenceAngleB : float
#m_typeA : b2JointType
#m_typeB : b2JointType
}
class "::b2MotorJointDef" as C_0009893274845145225637
class C_0009893274845145225637 {
+b2MotorJointDef() : void
..
+Initialize(b2Body * bodyA, b2Body * bodyB) : void
__
+angularOffset : float
+correctionFactor : float
+linearOffset : b2Vec2
+maxForce : float
+maxTorque : float
}
class "::b2MotorJoint" as C_0008607260685315227662
class C_0008607260685315227662 {
#b2MotorJoint(const b2MotorJointDef * def) : void
..
+Dump() : void
+GetAnchorA() const : b2Vec2
+GetAnchorB() const : b2Vec2
+GetAngularOffset() const : float
+GetCorrectionFactor() const : float
+GetLinearOffset() const : const b2Vec2 &
+GetMaxForce() const : float
+GetMaxTorque() const : float
+GetReactionForce(float inv_dt) const : b2Vec2
+GetReactionTorque(float inv_dt) const : float
#InitVelocityConstraints(const b2SolverData & data) : void
+SetAngularOffset(float angularOffset) : void
+SetCorrectionFactor(float factor) : void
+SetLinearOffset(const b2Vec2 & linearOffset) : void
+SetMaxForce(float force) : void
+SetMaxTorque(float torque) : void
#SolvePositionConstraints(const b2SolverData & data) : bool
#SolveVelocityConstraints(const b2SolverData & data) : void
__
#m_angularError : float
#m_angularImpulse : float
#m_angularMass : float
#m_angularOffset : float
#m_correctionFactor : float
#m_indexA : int32
#m_indexB : int32
#m_invIA : float
#m_invIB : float
#m_invMassA : float
#m_invMassB : float
#m_linearError : b2Vec2
#m_linearImpulse : b2Vec2
#m_linearMass : b2Mat22
#m_linearOffset : b2Vec2
#m_localCenterA : b2Vec2
#m_localCenterB : b2Vec2
#m_maxForce : float
#m_maxTorque : float
#m_rA : b2Vec2
#m_rB : b2Vec2
}
class "::b2MouseJointDef" as C_0011451486969229982775
class C_0011451486969229982775 {
+b2MouseJointDef() : void
__
+damping : float
+maxForce : float
+stiffness : float
+target : b2Vec2
}
class "::b2MouseJoint" as C_0009412832561601879648
class C_0009412832561601879648 {
#b2MouseJoint(const b2MouseJointDef * def) : void
..
+Dump() : void
+GetAnchorA() const : b2Vec2
+GetAnchorB() const : b2Vec2
+GetDamping() const : float
+GetMaxForce() const : float
+GetReactionForce(float inv_dt) const : b2Vec2
+GetReactionTorque(float inv_dt) const : float
+GetStiffness() const : float
+GetTarget() const : const b2Vec2 &
#InitVelocityConstraints(const b2SolverData & data) : void
+SetDamping(float damping) : void
+SetMaxForce(float force) : void
+SetStiffness(float stiffness) : void
+SetTarget(const b2Vec2 & target) : void
+ShiftOrigin(const b2Vec2 & newOrigin) : void
#SolvePositionConstraints(const b2SolverData & data) : bool
#SolveVelocityConstraints(const b2SolverData & data) : void
__
#m_C : b2Vec2
#m_beta : float
#m_damping : float
#m_gamma : float
#m_impulse : b2Vec2
#m_indexA : int32
#m_indexB : int32
#m_invIB : float
#m_invMassB : float
#m_localAnchorB : b2Vec2
#m_localCenterB : b2Vec2
#m_mass : b2Mat22
#m_maxForce : float
#m_rB : b2Vec2
#m_stiffness : float
#m_targetA : b2Vec2
}
class "::b2PrismaticJointDef" as C_0011560069962214892868
class C_0011560069962214892868 {
+b2PrismaticJointDef() : void
..
+Initialize(b2Body * bodyA, b2Body * bodyB, const b2Vec2 & anchor, const b2Vec2 & axis) : void
__
+enableLimit : bool
+enableMotor : bool
+localAnchorA : b2Vec2
+localAnchorB : b2Vec2
+localAxisA : b2Vec2
+lowerTranslation : float
+maxMotorForce : float
+motorSpeed : float
+referenceAngle : float
+upperTranslation : float
}
class "::b2PrismaticJoint" as C_0013620335158683631149
class C_0013620335158683631149 {
#b2PrismaticJoint(const b2PrismaticJointDef * def) : void
..
+Draw(b2Draw * draw) const : void
+Dump() : void
+EnableLimit(bool flag) : void
+EnableMotor(bool flag) : void
+GetAnchorA() const : b2Vec2
+GetAnchorB() const : b2Vec2
+GetJointSpeed() const : float
+GetJointTranslation() const : float
+GetLocalAnchorA() const : const b2Vec2 &
+GetLocalAnchorB() const : const b2Vec2 &
+GetLocalAxisA() const : const b2Vec2 &
+GetLowerLimit() const : float
+GetMaxMotorForce() const : float
+GetMotorForce(float inv_dt) const : float
+GetMotorSpeed() const : float
+GetReactionForce(float inv_dt) const : b2Vec2
+GetReactionTorque(float inv_dt) const : float
+GetReferenceAngle() const : float
+GetUpperLimit() const : float
#InitVelocityConstraints(const b2SolverData & data) : void
+IsLimitEnabled() const : bool
+IsMotorEnabled() const : bool
+SetLimits(float lower, float upper) : void
+SetMaxMotorForce(float force) : void
+SetMotorSpeed(float speed) : void
#SolvePositionConstraints(const b2SolverData & data) : bool
#SolveVelocityConstraints(const b2SolverData & data) : void
__
#m_K : b2Mat22
#m_a1 : float
#m_a2 : float
#m_axialMass : float
#m_axis : b2Vec2
#m_enableLimit : bool
#m_enableMotor : bool
#m_impulse : b2Vec2
#m_indexA : int32
#m_indexB : int32
#m_invIA : float
#m_invIB : float
#m_invMassA : float
#m_invMassB : float
#m_localAnchorA : b2Vec2
#m_localAnchorB : b2Vec2
#m_localCenterA : b2Vec2
#m_localCenterB : b2Vec2
#m_localXAxisA : b2Vec2
#m_localYAxisA : b2Vec2
#m_lowerImpulse : float
#m_lowerTranslation : float
#m_maxMotorForce : float
#m_motorImpulse : float
#m_motorSpeed : float
#m_perp : b2Vec2
#m_referenceAngle : float
#m_s1 : float
#m_s2 : float
#m_translation : float
#m_upperImpulse : float
#m_upperTranslation : float
}
class "::b2PulleyJointDef" as C_0010287607937715979915
class C_0010287607937715979915 {
+b2PulleyJointDef() : void
..
+Initialize(b2Body * bodyA, b2Body * bodyB, const b2Vec2 & groundAnchorA, const b2Vec2 & groundAnchorB, const b2Vec2 & anchorA, const b2Vec2 & anchorB, float ratio) : void
__
+groundAnchorA : b2Vec2
+groundAnchorB : b2Vec2
+lengthA : float
+lengthB : float
+localAnchorA : b2Vec2
+localAnchorB : b2Vec2
+ratio : float
}
class "::b2PulleyJoint" as C_0013580075295292083604
class C_0013580075295292083604 {
#b2PulleyJoint(const b2PulleyJointDef * data) : void
..
+Dump() : void
+GetAnchorA() const : b2Vec2
+GetAnchorB() const : b2Vec2
+GetCurrentLengthA() const : float
+GetCurrentLengthB() const : float
+GetGroundAnchorA() const : b2Vec2
+GetGroundAnchorB() const : b2Vec2
+GetLengthA() const : float
+GetLengthB() const : float
+GetRatio() const : float
+GetReactionForce(float inv_dt) const : b2Vec2
+GetReactionTorque(float inv_dt) const : float
#InitVelocityConstraints(const b2SolverData & data) : void
+ShiftOrigin(const b2Vec2 & newOrigin) : void
#SolvePositionConstraints(const b2SolverData & data) : bool
#SolveVelocityConstraints(const b2SolverData & data) : void
__
#m_constant : float
#m_groundAnchorA : b2Vec2
#m_groundAnchorB : b2Vec2
#m_impulse : float
#m_indexA : int32
#m_indexB : int32
#m_invIA : float
#m_invIB : float
#m_invMassA : float
#m_invMassB : float
#m_lengthA : float
#m_lengthB : float
#m_localAnchorA : b2Vec2
#m_localAnchorB : b2Vec2
#m_localCenterA : b2Vec2
#m_localCenterB : b2Vec2
#m_mass : float
#m_rA : b2Vec2
#m_rB : b2Vec2
#m_ratio : float
#m_uA : b2Vec2
#m_uB : b2Vec2
}
class "::b2RevoluteJointDef" as C_0018445541165296481648
class C_0018445541165296481648 {
+b2RevoluteJointDef() : void
..
+Initialize(b2Body * bodyA, b2Body * bodyB, const b2Vec2 & anchor) : void
__
+enableLimit : bool
+enableMotor : bool
+localAnchorA : b2Vec2
+localAnchorB : b2Vec2
+lowerAngle : float
+maxMotorTorque : float
+motorSpeed : float
+referenceAngle : float
+upperAngle : float
}
class "::b2RevoluteJoint" as C_0007901616882537320777
class C_0007901616882537320777 {
#b2RevoluteJoint(const b2RevoluteJointDef * def) : void
..
+Draw(b2Draw * draw) const : void
+Dump() : void
+EnableLimit(bool flag) : void
+EnableMotor(bool flag) : void
+GetAnchorA() const : b2Vec2
+GetAnchorB() const : b2Vec2
+GetJointAngle() const : float
+GetJointSpeed() const : float
+GetLocalAnchorA() const : const b2Vec2 &
+GetLocalAnchorB() const : const b2Vec2 &
+GetLowerLimit() const : float
+GetMaxMotorTorque() const : float
+GetMotorSpeed() const : float
+GetMotorTorque(float inv_dt) const : float
+GetReactionForce(float inv_dt) const : b2Vec2
+GetReactionTorque(float inv_dt) const : float
+GetReferenceAngle() const : float
+GetUpperLimit() const : float
#InitVelocityConstraints(const b2SolverData & data) : void
+IsLimitEnabled() const : bool
+IsMotorEnabled() const : bool
+SetLimits(float lower, float upper) : void
+SetMaxMotorTorque(float torque) : void
+SetMotorSpeed(float speed) : void
#SolvePositionConstraints(const b2SolverData & data) : bool
#SolveVelocityConstraints(const b2SolverData & data) : void
__
#m_K : b2Mat22
#m_angle : float
#m_axialMass : float
#m_enableLimit : bool
#m_enableMotor : bool
#m_impulse : b2Vec2
#m_indexA : int32
#m_indexB : int32
#m_invIA : float
#m_invIB : float
#m_invMassA : float
#m_invMassB : float
#m_localAnchorA : b2Vec2
#m_localAnchorB : b2Vec2
#m_localCenterA : b2Vec2
#m_localCenterB : b2Vec2
#m_lowerAngle : float
#m_lowerImpulse : float
#m_maxMotorTorque : float
#m_motorImpulse : float
#m_motorSpeed : float
#m_rA : b2Vec2
#m_rB : b2Vec2
#m_referenceAngle : float
#m_upperAngle : float
#m_upperImpulse : float
}
class "::b2WeldJointDef" as C_0009518045412094874306
class C_0009518045412094874306 {
+b2WeldJointDef() : void
..
+Initialize(b2Body * bodyA, b2Body * bodyB, const b2Vec2 & anchor) : void
__
+damping : float
+localAnchorA : b2Vec2
+localAnchorB : b2Vec2
+referenceAngle : float
+stiffness : float
}
class "::b2WeldJoint" as C_0018185820375783791187
class C_0018185820375783791187 {
#b2WeldJoint(const b2WeldJointDef * def) : void
..
+Dump() : void
+GetAnchorA() const : b2Vec2
+GetAnchorB() const : b2Vec2
+GetDamping() const : float
+GetLocalAnchorA() const : const b2Vec2 &
+GetLocalAnchorB() const : const b2Vec2 &
+GetReactionForce(float inv_dt) const : b2Vec2
+GetReactionTorque(float inv_dt) const : float
+GetReferenceAngle() const : float
+GetStiffness() const : float
#InitVelocityConstraints(const b2SolverData & data) : void
+SetDamping(float damping) : void
+SetStiffness(float hz) : void
#SolvePositionConstraints(const b2SolverData & data) : bool
#SolveVelocityConstraints(const b2SolverData & data) : void
__
#m_bias : float
#m_damping : float
#m_gamma : float
#m_impulse : b2Vec3
#m_indexA : int32
#m_indexB : int32
#m_invIA : float
#m_invIB : float
#m_invMassA : float
#m_invMassB : float
#m_localAnchorA : b2Vec2
#m_localAnchorB : b2Vec2
#m_localCenterA : b2Vec2
#m_localCenterB : b2Vec2
#m_mass : b2Mat33
#m_rA : b2Vec2
#m_rB : b2Vec2
#m_referenceAngle : float
#m_stiffness : float
}
class "::b2WheelJointDef" as C_0014914544658837520271
class C_0014914544658837520271 {
+b2WheelJointDef() : void
..
+Initialize(b2Body * bodyA, b2Body * bodyB, const b2Vec2 & anchor, const b2Vec2 & axis) : void
__
+damping : float
+enableLimit : bool
+enableMotor : bool
+localAnchorA : b2Vec2
+localAnchorB : b2Vec2
+localAxisA : b2Vec2
+lowerTranslation : float
+maxMotorTorque : float
+motorSpeed : float
+stiffness : float
+upperTranslation : float
}
class "::b2WheelJoint" as C_0012646616223244875176
class C_0012646616223244875176 {
#b2WheelJoint(const b2WheelJointDef * def) : void
..
+Draw(b2Draw * draw) const : void
+Dump() : void
+EnableLimit(bool flag) : void
+EnableMotor(bool flag) : void
+GetAnchorA() const : b2Vec2
+GetAnchorB() const : b2Vec2
+GetDamping() const : float
+GetJointAngle() const : float
+GetJointAngularSpeed() const : float
+GetJointLinearSpeed() const : float
+GetJointTranslation() const : float
+GetLocalAnchorA() const : const b2Vec2 &
+GetLocalAnchorB() const : const b2Vec2 &
+GetLocalAxisA() const : const b2Vec2 &
+GetLowerLimit() const : float
+GetMaxMotorTorque() const : float
+GetMotorSpeed() const : float
+GetMotorTorque(float inv_dt) const : float
+GetReactionForce(float inv_dt) const : b2Vec2
+GetReactionTorque(float inv_dt) const : float
+GetStiffness() const : float
+GetUpperLimit() const : float
#InitVelocityConstraints(const b2SolverData & data) : void
+IsLimitEnabled() const : bool
+IsMotorEnabled() const : bool
+SetDamping(float damping) : void
+SetLimits(float lower, float upper) : void
+SetMaxMotorTorque(float torque) : void
+SetMotorSpeed(float speed) : void
+SetStiffness(float stiffness) : void
#SolvePositionConstraints(const b2SolverData & data) : bool
#SolveVelocityConstraints(const b2SolverData & data) : void
__
#m_ax : b2Vec2
#m_axialMass : float
#m_ay : b2Vec2
#m_bias : float
#m_damping : float
#m_enableLimit : bool
#m_enableMotor : bool
#m_gamma : float
#m_impulse : float
#m_indexA : int32
#m_indexB : int32
#m_invIA : float
#m_invIB : float
#m_invMassA : float
#m_invMassB : float
#m_localAnchorA : b2Vec2
#m_localAnchorB : b2Vec2
#m_localCenterA : b2Vec2
#m_localCenterB : b2Vec2
#m_localXAxisA : b2Vec2
#m_localYAxisA : b2Vec2
#m_lowerImpulse : float
#m_lowerTranslation : float
#m_mass : float
#m_maxMotorTorque : float
#m_motorImpulse : float
#m_motorMass : float
#m_motorSpeed : float
#m_sAx : float
#m_sAy : float
#m_sBx : float
#m_sBy : float
#m_springImpulse : float
#m_springMass : float
#m_stiffness : float
#m_translation : float
#m_upperImpulse : float
#m_upperTranslation : float
}
class "::Vec2Adapter" as C_0006909731403235205092
class C_0006909731403235205092 {
+Vec2Adapter() : void
+Vec2Adapter(Vector2 pixelVec) : void
+Vec2Adapter(float xPixels, float yPixels) : void
+Vec2Adapter(b2Vec2 meters) : void
..
+getHalfHeight() const : float
+getHalfWidth() const : float
+getOrigin() : Vector2
+operator Vector2() const noexcept : Vector2
+toMeters() const : b2Vec2
+toPixels() const : Vector2
+x() const : float
+y() const : float
__
+vec : Vector2
}
enum "::PlayerForm" as C_0003216586261115052089
enum C_0003216586261115052089 {
SMALL
BIG
FIRE
FORM_COUNT
}
enum "::stateType" as C_0006402511982670141126
enum C_0006402511982670141126 {
IDLE
WALK
RUN
JUMP
FALL
SKID
CROUCH
GROW
UNGROW
DEAD
}
enum "::Direction" as C_0015149798974371151882
enum C_0015149798974371151882 {
LEFT
BRUH
RIGHT
}
abstract "::State" as C_0012548033600169640822
abstract C_0012548033600169640822 {
+State() : void
+State(stateType Type, Character * _character, int _delay) : void
..
+DrawCharacterDebug(Character * character) : void
+animate() : void
+displayState() : void
{abstract} +handleInput() = 0 : void
+updateState() : void
__
#character : Character *
#delay : int
#delayCounter : int
#frameIndex : int
#frameRec : Rectangle
#numFrames : int
#type : stateType
}
enum "::CollisionType" as C_0003502171707572720023
enum C_0003502171707572720023 {
NONE
TOP
BOTTOM
LEFTSIDE
RIGHTSIDE
}
class "::GameObject" as C_0010250684592540512228
class C_0010250684592540512228 {
+GameObject() = default : void
+GameObject(const Vector2 & _position, const Vector2 & _size) : void
+~GameObject() = default : void
..
+attachBody(b2Body * b) : void
+createBody(b2World * world) : void
+display() : void
+getBody() const : b2Body *
+getBounds() const : Rectangle
+getCenter() const : Vector2
+getPosition() const : Vector2
+getPositionAdapter() const : const Vec2Adapter &
+getSize() const : Vector2
+getSizeAdapter() const : const Vec2Adapter &
+setPosition(const Vector2 & _pos) : void
+setPositionAdapter(const Vec2Adapter & _pos) : void
+setSize(const Vector2 & _size) : void
+setSizeAdapter(const Vec2Adapter & _size) : void
+update() : void
+updateCollision(GameObject * other, int type) : void
__
#body : b2Body *
+isStatic : bool
#pos : Vec2Adapter
#size : Vec2Adapter
+slice : float
}
class "::IBlockBehavior" as C_0001882606194604426063
class C_0001882606194604426063 {
+IBlockBehavior(Block * block) : void
+~IBlockBehavior() : void
..
+onDraw(float dt) : void
+printType() const : void
+reactToCollision(GameObject * p, int type) : void
+updateFrame(float dt) : void
__
+block : Block *
}
class "::BrickBehavior" as C_0000560225802660094972
class C_0000560225802660094972 {
+BrickBehavior(Block * block) : void
..
+onDraw(float dt) : void
+printType() const : void
+reactToCollision(GameObject * p, int type) : void
+updateFrame(float dt) : void
__
}
class "::QuestionBehavior" as C_0012677234202004775687
class C_0012677234202004775687 {
+QuestionBehavior(Block * block) : void
..
+printType() const : void
+reactToCollision(GameObject * p, int type) : void
+updateFrame(float dt) : void
__
}
class "::GroundBehavior" as C_0003193797538920665864
class C_0003193797538920665864 {
+GroundBehavior(Block * block) : void
..
+printType() const : void
+reactToCollision(GameObject * p, int type) : void
__
}
class "::FactoryIBlockBehavior" as C_0017272402168460687079
class C_0017272402168460687079 {
{static} +create(const std::string & type, Block * block) : IBlockBehavior *
__
}
class "::TSInfo" as C_0009102704025497708236
class C_0009102704025497708236 {
__
+columns : int
+firstgid : int
+margin : int
+spacing : int
+tileSize : Vector2
}
enum "::Contains" as C_0018022979192911490072
enum C_0018022979192911490072 {
None
Coin
Mushroom
FireFlower
Star
OneUp
}
class "::Block" as C_0003110547038768958146
class C_0003110547038768958146 {
+Block(int _gid, Vector2 _pos, Vector2 _size, Texture2D _tex, Rectangle _src) : void
+Block(tson::Tile * inforTile, Vector2 _pos, Vector2 _size, Texture2D _tex, Rectangle _src, const TSInfo * tsi) : void
+Block(tson::Object & obj, Vector2 _pos, Vector2 _size, Texture2D _tex, Rectangle _src) : void
..
#applyPhysics(float dt) : void
+createBody(b2World * world) : void
+display() : void
#handleInput(float dt) : void
+update() : void
+updateCollision(GameObject * other, int type) : void
__
+aniIndex : int
+aniTimer : float
+behavior : shared_ptr<IBlockBehavior>
+color : Color
+contains : Contains
+duration : float
+gid : int
{static} #gravity : const float
+isBreakable : bool
+isFlagPole : bool
+isInvisible : bool
#isJumping : bool
+isPipeEntrance : bool
+isQuestion : bool
+isSolid : bool
+isUsed : bool
{static} #jumpForce : const float
{static} #maxHeight : const float
+needDeletion : bool
#onGround : bool
#prePos : Vector2
+srcRec : Rectangle
+srcRecs : vector<Rectangle>
+texture : Texture2D
#velocity : Vector2
}
class "::StartEndFrame" as C_0018135298107558855209
class C_0018135298107558855209 {
__
+end : int
+start : int
}
class "::Sprite" as C_0017555429528309779676
class C_0017555429528309779676 {
__
+StartEndFrames : vector<StartEndFrame>
+frameRecs : vector<Rectangle>
+texture : Texture2D
}
class "::Character" as C_0012393382550867685456
class C_0012393382550867685456 {
+Character() = default : void
+Character(const Sprite & _sprite, State * _initialState, Vector2 _pos) : void
+~Character() : void
..
+changeState(State * newState) : void
+createBody(b2World * world) : void
+display() : void
+toNewBody() : void
+update() : void
+updateCollision(GameObject * other, int type) : void
__
+changeBody : bool
#currentState : State *
#direction : Direction
+groundContacts : int
#groundPosY : float
+isGrounded : bool
#sprite : Sprite
}
class "::Program" as C_0008995846133488459179
class C_0008995846133488459179 {
+Program() : void
+~Program() : void
..
+changeScene(sceneType newScene) : void
+displayCurrentScene() : void
+getCurrentScene() : int
+initButtons() : void
+run() : void
+updateCamera() : void
+updateCurrentScene() : void
__
-SceneButtons : vector<Button *>
-camera : Camera2D
+currentSceneObject : Scene *
{static} +mouseWorldPos : Vector2
-scenes : vector<Scene *>
}
class "::Button" as C_0000221405838615140689
class C_0000221405838615140689 {
__
}
class "::rAudioProcessor" as C_0000348113371549147947
class C_0000348113371549147947 {
__
}
class "::EnemyIdleState" as C_0000829623880221797522
class C_0000829623880221797522 {
__
}
class "::b2ContactSolver" as C_0001039172853185934532
class C_0001039172853185934532 {
__
}
class "::b2Block" as C_0001134297653230596562
class C_0001134297653230596562 {
__
}
class "::b2Controller" as C_0002420959758860975505
class C_0002420959758860975505 {
__
}
class "::Player" as C_0003692324345213718176
class C_0003692324345213718176 {
__
}
class "::b2Chunk" as C_0004854109374800159858
class C_0004854109374800159858 {
__
}
class "::Spiny" as C_0005150484036262905120
class C_0005150484036262905120 {
__
}
class "::Player" as C_0005782261330376251499
class C_0005782261330376251499 {
__
}
class "::EnemyRunState" as C_0005966396136563637617
class C_0005966396136563637617 {
__
}
class "::EnemyWalkState" as C_0006435734344524867019
class C_0006435734344524867019 {
__
}
class "::rAudioBuffer" as C_0006939074392866017727
class C_0006939074392866017727 {
__
}
class "::b2Island" as C_0008927090573845685244
class C_0008927090573845685244 {
__
}
class "::Goomba" as C_0009099990544903911046
class C_0009099990544903911046 {
__
}
class "::b2RopeJoint" as C_0010237597514806006495
class C_0010237597514806006495 {
__
}
class "::Koopa" as C_0011776670766822878227
class C_0011776670766822878227 {
__
}
class "::Lakitu" as C_0014523565626478600485
class C_0014523565626478600485 {
__
}
class "::PiranhaPlant" as C_0015368617464429780937
class C_0015368617464429780937 {
__
}
class "::b2ContactResult" as C_0016661805230870868634
class C_0016661805230870868634 {
__
}
class "::EnemyDeadState" as C_0016860933356000833950
class C_0016860933356000833950 {
__
}
class "::Enemy" as C_0018162179630194765227
class C_0018162179630194765227 {
__
}
C_0010721189571204668386 ..> C_0002327326499379589340
C_0000157401203020024006 ..> C_0002327326499379589340
C_0007500688229146332176 ..|> C_0012199749462782507116
C_0013310657167928900126 ..> C_0014564979514449365806
C_0005041108964366183696 ..> C_0003964006310859062900
C_0012376370878097263497 ..|> C_0000577386121587834473
C_0005016775666417918015 ..> C_0007500688229146332176
C_0005016775666417918015 ..> C_0000465838628272370621
C_0017369468941188767729 <|-- C_0011604487065900561892
C_0009711424578442486734 ..> C_0004971891629230563059
C_0009711424578442486734 ..|> C_0011604487065900561892
C_0017369468941188767729 <|-- C_0009711424578442486734
C_0000973234095023624561 ..> C_0004971891629230563059
C_0000973234095023624561 ..|> C_0003935756864860660895
C_0001087849104505286381 ..> C_0007500688229146332176
C_0012575143362383973559 ..> C_0007500688229146332176
C_0006742083008504437096 ..|> C_0016982316625589380753
C_0012146279838641130751 ..> C_0014167386448206763714
C_0013429388319311956826 ..> C_0003964592163109186449
C_0004637133333771533466 ..> C_0013791808793373566873
C_0004637133333771533466 ..|> C_0013429388319311956826
C_0010807373858847751275 ..|> C_0016982316625589380753
C_0013712950298701420196 ..|> C_0016982316625589380753
C_0007136916555410065119 ..> C_0013712950298701420196
C_0007136916555410065119 ..|> C_0002773375681775429756
C_0001857228505817034097 ..> C_0007214016775132775361
C_0001949509976487175871 ..> C_0010649473922595971467
C_0017651518510739067146 ..|> C_0016982316625589380753
C_0006952070549948403239 ..> C_0014167386448206763714
C_0004412474424553115274 ..> C_0018434997120923591378
C_0004412474424553115274 ..> C_0013976964827490787623
C_0011537571081538914342 ..> C_0014934282435397205555
C_0011537571081538914342 ..|> C_0004412474424553115274
C_0011537571081538914342 ..> C_0018434997120923591378
C_0011537571081538914342 ..> C_0013976964827490787623
C_0004932804944914206587 ..> C_0010649473922595971467
C_0004932804944914206587 ..|> C_0001949509976487175871
C_0009469813100910385165 ..> C_0010139421007835667699
C_0005373926085159347220 ..> C_0005016775666417918015
C_0005373926085159347220 ..> C_0010139421007835667699
C_0014021518406996724918 ..> C_0005016775666417918015
C_0014021518406996724918 ..|> C_0016982316625589380753
C_0004751179184290925068 ..> C_0014021518406996724918
C_0006262795933763600673 ..> C_0002607653258708998320
C_0008261390615332338001 ..> C_0005016775666417918015
C_0000425764360988984212 ..> C_0018340852703644302525
C_0004451472350829367732 ..> C_0000425764360988984212
C_0006274273039095426313 ..> C_0007691470128151605506
C_0009449444825786705411 ..> C_0006274273039095426313
C_0008088278790263755080 ..> C_0011887994287659977427
C_0015028344148724283634 ..> C_0005016775666417918015
C_0015028344148724283634 ..> C_0006274273039095426313
C_0002716708038493951524 ..> C_0006274273039095426313
C_0008985444703594249706 ..> C_0005016775666417918015
C_0008985444703594249706 ..> C_0009449444825786705411
C_0012267814618520699680 ..> C_0010139421007835667699
C_0013596383218836329341 ..> C_0005016775666417918015
C_0013596383218836329341 ..> C_0004320093529030414388
C_0007380866656444562374 ..|> C_0012030889513779630167
C_0017246210088862330063 ..> C_0014385917776685433885
C_0011227983858338760388 ..> C_0009502915912803314917
C_0007332477790878163014 ..|> C_0000577386121587834473
C_0004305701722710513442 ..> C_0011586328468560530734
C_0000543266056686132830 ..> C_0004904525272387115810
C_0009770715339548071146 ..> C_0011463520910972780534
C_0014610946801821189157 ..> C_0007332477790878163014
C_0014610946801821189157 ..> C_0005657317832455838789
C_0014717069890754810978 ..> C_0007332477790878163014
C_0014717069890754810978 ..> C_0012702542272812606522
C_0010442859391214764574 ..> C_0005657317832455838789
C_0010462613430467277479 ..> C_0015138112189591346049
C_0003945411792173323474 ..> C_0003233086023795851738
C_0014128386234649786263 ..> C_0013015052646677278465
C_0010909541024054101114 ..> C_0008522766561882952554
C_0003526413598904348739 ..> C_0005657317832455838789
C_0014266772710739956910 ..> C_0009452330323620423782
C_0013450546981812569790 ..> C_0000309840976076098146
C_0005469546519486081481 ..> C_0006274273039095426313
C_0005469546519486081481 ..> C_0005016775666417918015
C_0002763124092157057105 ..> C_0011779487683031078083
C_0018138269842875670596 ..> C_0005657317832455838789
C_0006281574694497908084 ..> C_0005016775666417918015
C_0016790823703191945353 ..> C_0018055335264037754599
C_0009094415260374702324 ..> C_0017557341881008908213
C_0004707751765148010508 ..> C_0009094415260374702324
C_0003148079142656508199 ..> C_0007053002749163351949
C_0018000785385595707135 ..> C_0009502915912803314917
C_0018123891982449758422 ..> C_0012729313111428749818
C_0009737170254010036179 ..> C_0005168395140250155706
C_0013423887851051587010 ..> C_0006704562279895895086
C_0017426112952059578590 ..> C_0001882606194604426063
C_0017410715323976282491 ..> C_0018135298107558855209
C_0015823698952731764909 ..> C_0000221405838615140689
C_0015823698952731764909 ..|> C_0012030889513779630167
C_0002079836018563423199 ..> C_0005375663403181666835
C_0002079836018563423199 ..|> C_0012030889513779630167
C_0007695516680691413852 o-- C_0002829778445906215252 : +texture
C_0007695516680691413852 o-- C_0002829778445906215252 : +depth
C_0012436876678621804533 o-- C_0006704562279895895086 : +source
C_0004579556397822098501 o-- C_0004437164841514963962 : +image
C_0000548585405462816752 o-- C_0002829778445906215252 : +texture
C_0000548585405462816752 --> C_0006704562279895895086 : +recs
C_0000548585405462816752 --> C_0004579556397822098501 : +glyphs
C_0018023374781402817305 o-- C_0007466806054564151715 : +position
C_0018023374781402817305 o-- C_0007466806054564151715 : +target
C_0018023374781402817305 o-- C_0007466806054564151715 : +up
C_0018022558943774873968 o-- C_0007466804955052523504 : +offset
C_0018022558943774873968 o-- C_0007466804955052523504 : +target
C_0007904390942753393308 --> C_0005880231545924887180 : +boneMatrices
C_0016677124665577361846 o-- C_0002829778445906215252 : +texture
C_0016677124665577361846 o-- C_0003769135706557701272 : +color
C_0012798265388312005056 o-- C_0003541022837009731048 : +shader
C_0012798265388312005056 --> C_0016677124665577361846 : +maps
C_0013979161094353040123 o-- C_0007466806054564151715 : +translation
C_0013979161094353040123 o-- C_0007466811552122292770 : +rotation
C_0013979161094353040123 o-- C_0007466806054564151715 : +scale
C_0006747846868581204634 o-- C_0005880231545924887180 : +transform
C_0006747846868581204634 --> C_0007904390942753393308 : +meshes
C_0006747846868581204634 --> C_0012798265388312005056 : +materials
C_0006747846868581204634 --> C_0005178967734718457531 : +bones
C_0006747846868581204634 --> C_0013979161094353040123 : +bindPose
C_0015277996015078665016 --> C_0005178967734718457531 : +bones
C_0015277996015078665016 --> C_0013979161094353040123 : +framePoses
C_0011529174475785917375 o-- C_0007466806054564151715 : +position
C_0011529174475785917375 o-- C_0007466806054564151715 : +direction
C_0004815296406693434961 o-- C_0007466806054564151715 : +point
C_0004815296406693434961 o-- C_0007466806054564151715 : +normal
C_0005040313359001167082 o-- C_0007466806054564151715 : +min
C_0005040313359001167082 o-- C_0007466806054564151715 : +max
C_0009667710944128642529 --> C_0006939074392866017727 : +buffer
C_0009667710944128642529 --> C_0000348113371549147947 : +processor
C_0002707737354266497140 o-- C_0009667710944128642529 : +stream
C_0011286991148568927572 o-- C_0009667710944128642529 : +stream
C_0015679324570162643259 o-- "2" C_0005880231545924887180 : +projection
C_0015679324570162643259 o-- "2" C_0005880231545924887180 : +viewOffset
C_0012145597129679246514 --> C_0010451467804620097830 : +events
C_0014967184354241517377 --> C_0011117479362636404787 : +vertexBuffer
C_0014967184354241517377 --> C_0003757251512814799149 : +draws
C_0014993288705156797636 ..|> C_0010718981316982512277
C_0015998407215500919506 <|-- C_0016428875756957174407
C_0017122730414939603372 ..|> C_0010718981316982512277
C_0013546130272205360584 ..|> C_0013831798626941069238
C_0013546130272205360584 <|-- C_0013831798626941069238
C_0006655624143927430146 ..|> C_0013831798626941069238
C_0002509422973607064496 ..|> C_0011370251373888116098
C_0000865316670447549455 ..|> C_0011370251373888116098
C_0009367777274894831300 ..|> C_0010375201990958310291
C_0000865316670447549455 <|-- C_0009367777274894831300
C_0006717111031837718075 ..|> C_0010375201990958310291
C_0005693795162955912923 <|-- C_0018027493289172628390
C_0002056821295455606601 ..> C_0014934282435397205555
C_0002056821295455606601 ..|> C_0018027493289172628390
C_0005693795162955912923 <|-- C_0002056821295455606601
C_0013642952878925356216 <|-- C_0005067240238849363306
C_0005693795162955912923 <|-- C_0004436068429892510219
C_0013182210107332688975 ..|> C_0009593016138778439160
C_0009302475411853139714 ..> C_0013182210107332688975
C_0009302475411853139714 ..|> C_0004436068429892510219
C_0005693795162955912923 <|-- C_0009302475411853139714
C_0005693795162955912923 <|-- C_0013277341110256558861
C_0014114449535362544659 ..|> C_0013277341110256558861
C_0005693795162955912923 <|-- C_0009763647214656111803
C_0013865379143229561509 ..|> C_0009763647214656111803
C_0005693795162955912923 <|-- C_0015792547560293047944
C_0004019231242038655786 ..|> C_0015792547560293047944
C_0003084053961325032482 <|-- C_0015781881238511831805
C_0012199749462782507116 <|-- C_0015804915405291369925
C_0001122165507947972678 ..|> C_0015804915405291369925
C_0007500688229146332176 <|-- C_0001122165507947972678
C_0012195728221283309101 ..|> C_0015804915405291369925
C_0007500688229146332176 <|-- C_0012195728221283309101
C_0001891278734491626892 ..|> C_0015804915405291369925
C_0007500688229146332176 <|-- C_0001891278734491626892
C_0005693795162955912923 <|-- C_0007902155839517699692
C_0007446875231317438523 ..|> C_0007902155839517699692
C_0013999076485229482309 ..|> C_0007902155839517699692
C_0006882140556934702097 <|-- C_0010168023150363309612
C_0002868673885431900408 <|-- C_0006992372542274270871
C_0006314778192677447688 ..|> C_0006992372542274270871
C_0006313795229282016279 ..|> C_0006992372542274270871
C_0017076856290484532094 ..> C_0006314778192677447688
C_0017076856290484532094 ..> C_0006313795229282016279
C_0017076856290484532094 ..|> C_0007902155839517699692
C_0005595415136035363981 ..> C_0016982316625589380753
C_0005595415136035363981 ..|> C_0006992372542274270871
C_0017076856290484532094 <|-- C_0005595415136035363981
C_0010937321348906443904 ..> C_0016982316625589380753
C_0010937321348906443904 ..|> C_0005595415136035363981
C_0017076856290484532094 <|-- C_0010937321348906443904
C_0004909206806478354990 ..|> C_0007902155839517699692
C_0016641463976187336261 ..> C_0000577386121587834473
C_0016641463976187336261 ..|> C_0006992372542274270871
C_0004909206806478354990 <|-- C_0016641463976187336261
C_0015338677135268844920 ..> C_0000577386121587834473
C_0015338677135268844920 ..|> C_0016641463976187336261
C_0004909206806478354990 <|-- C_0015338677135268844920
C_0006231942436048517425 <|-- C_0015230768299381119886
C_0008650453952629366579 ..> C_0016982316625589380753
C_0008650453952629366579 ..|> C_0015230768299381119886
C_0005595415136035363981 <|-- C_0008650453952629366579
C_0008196183388477249174 ..> C_0016982316625589380753
C_0008196183388477249174 ..|> C_0015230768299381119886
C_0005595415136035363981 <|-- C_0008196183388477249174
C_0015591614226304978039 ..> C_0000577386121587834473
C_0015591614226304978039 ..|> C_0015230768299381119886
C_0016641463976187336261 <|-- C_0015591614226304978039
C_0015973015805707452738 ..> C_0000577386121587834473
C_0015973015805707452738 ..|> C_0015230768299381119886
C_0016641463976187336261 <|-- C_0015973015805707452738
C_0005693795162955912923 <|-- C_0001413917146292892088
C_0017627762319532097983 ..|> C_0010375201990958310291
C_0001027948818263821194 ..> C_0017627762319532097983
C_0001027948818263821194 ..|> C_0001413917146292892088
C_0006918660714441279166 ..> C_0005041108964366183696
C_0006918660714441279166 ..|> C_0010375201990958310291
C_0010343088054111248897 ..> C_0006918660714441279166
C_0005693795162955912923 <|-- C_0003136094376945561362
C_0014271975207194010963 ..|> C_0003136094376945561362
C_0005693795162955912923 <|-- C_0014271975207194010963
C_0005693795162955912923 <|-- C_0008702375298716003689
C_0001176340690635239861 ..|> C_0008702375298716003689
C_0001687611237103466621 ..|> C_0008702375298716003689
C_0001687611237103466621 <|-- C_0006910910048129181352
C_0005693795162955912923 <|-- C_0012301613935998121051
C_0013373840975908384323 ..|> C_0012301613935998121051
C_0003647011909714715819 ..|> C_0012301613935998121051
C_0003647011909714715819 <|-- C_0017912565087660377498
C_0005693795162955912923 <|-- C_0000157039525751952463
C_0009111154098307958461 ..|> C_0000157039525751952463
C_0011665614285518232895 ..|> C_0000157039525751952463
C_0011665614285518232895 <|-- C_0016289156670638822276
C_0005693795162955912923 <|-- C_0014053253935845333199
C_0014034627823239921891 ..|> C_0014053253935845333199
C_0005693795162955912923 <|-- C_0014034627823239921891
C_0005623511180367969071 ..|> C_0014053253935845333199
C_0014910578194208994751 ..|> C_0014053253935845333199
C_0014910578194208994751 <|-- C_0008208194694564009640
C_0005693795162955912923 <|-- C_0000688927543687448024
C_0003878754183181955924 ..|> C_0000688927543687448024
C_0001554714283702431156 ..|> C_0000688927543687448024
C_0001554714283702431156 <|-- C_0009070988242826610157
C_0005693795162955912923 <|-- C_0015421071143978139974
C_0014320282377445054878 ..|> C_0015421071143978139974
C_0015045379573041192038 ..|> C_0015421071143978139974
C_0015045379573041192038 <|-- C_0006935840221857960207
C_0005693795162955912923 <|-- C_0012916371594555022039
C_0007212384626706954397 ..|> C_0007902155839517699692
C_0017845374940651224485 ..> C_0012376370878097263497
C_0017845374940651224485 ..|> C_0012916371594555022039
C_0007212384626706954397 <|-- C_0017845374940651224485
C_0005693795162955912923 <|-- C_0006768220041238079739
C_0013373805269230000172 ..|> C_0006768220041238079739
C_0005693795162955912923 <|-- C_0013373805269230000172
C_0014436966640218603920 ..|> C_0006768220041238079739
C_0005693795162955912923 <|-- C_0014436966640218603920
C_0005693795162955912923 <|-- C_0017702777963793819415
C_0016702799623700013569 ..> C_0015871576225587044182
C_0005693795162955912923 <|-- C_0016702799623700013569
C_0016702799623700013569 ..|> C_0017702777963793819415
C_0000426375057007269016 ..> C_0015655517881744505449
C_0000426375057007269016 ..|> C_0017702777963793819415
C_0005693795162955912923 <|-- C_0003781083434658556212
C_0010138917742493328210 ..|> C_0003781083434658556212
C_0005693795162955912923 <|-- C_0010138917742493328210
C_0001735083599026068944 --+ C_0009751524449346198270
C_0015902452857466187586 ..|> C_0007902155839517699692
C_0015187107270836286042 ..|> C_0007902155839517699692
C_0009272450478858302595 ..|> C_0007902155839517699692
C_0008120992284769819274 ..|> C_0009137768992691744710
C_0003363480964171303475 ..|> C_0009137768992691744710
C_0013834265067272228121 ..|> C_0009137768992691744710
C_0018366723962436109942 ..|> C_0009137768992691744710
C_0005833828757727343548 ..|> C_0001072375176681338427
C_0004287359615334045605 ..|> C_0001072375176681338427
C_0012138891406902323318 <|-- C_0006332295718417491167
C_0009914069156030260013 ..> C_0015655517881744505449
C_0009914069156030260013 ..|> C_0006332295718417491167
C_0012138891406902323318 <|-- C_0017083515891121347044
C_0011162835554834108736 ..|> C_0015998407215500919506
C_0001612822085036938220 ..|> C_0015998407215500919506
C_0016571854676322759413 ..|> C_0015998407215500919506
C_0000488624743077816439 ..|> C_0015998407215500919506
C_0009728034640419511916 ..> C_0005016775666417918015
C_0018310182602106031747 ..> C_0013929042815999091003
C_0018310182602106031747 ..> C_0005016775666417918015
C_0009728034640419511916 <|-- C_0018310182602106031747
C_0010540431456137922445 ..> C_0005016775666417918015
C_0009728034640419511916 <|-- C_0010540431456137922445
C_0011999608394822785130 ..> C_0005016775666417918015
C_0009728034640419511916 <|-- C_0011999608394822785130
C_0018175764830680090181 ..> C_0005016775666417918015
C_0009728034640419511916 <|-- C_0018175764830680090181
C_0005117297347899704054 ..> C_0005016775666417918015
C_0009728034640419511916 <|-- C_0005117297347899704054
C_0013644362285416196689 ..> C_0004971891629230563059
C_0006008682906480716649 ..|> C_0005359400944107636849
C_0016272036920895983596 ..|> C_0005359400944107636849
C_0009869249561694896948 ..|> C_0005359400944107636849
C_0018278686030687458683 ..|> C_0005359400944107636849
C_0010696280542309684438 ..|> C_0005359400944107636849
C_0016237388092727753527 ..|> C_0005359400944107636849
C_0006248441366823821910 ..> C_0004681541517896863531
C_0006248441366823821910 ..> C_0011543961150843153272
C_0006248441366823821910 ..|> C_0005359400944107636849
C_0004276669238741261302 ..|> C_0005359400944107636849
C_0014619140364682429838 --> C_0007500688229146332176 : -is
C_0014619140364682429838 --> C_0001087849104505286381 : -is
C_0014619140364682429838 --> C_0007500688229146332176 : -sb
C_0014619140364682429838 --> C_0012575143362383973559 : -sb
C_0015266931292129070608 ..> C_0009708838219533962414
C_0015266931292129070608 ..|> C_0016176728632403541834
C_0015268760879478035262 ..> C_0009708838219533962414
C_0015268760879478035262 ..|> C_0016176728632403541834
C_0014168768777020386332 o-- C_0009708838219533962414 : -utf8_bytes
C_0005473164555112960287 ..|> C_0006621992980108402466
C_0014109776010686179387 ..> C_0005473164555112960287
C_0014109776010686179387 ..> C_0006621992980108402466
C_0018187889487049892961 ..|> C_0006621992980108402466
C_0008253466530933028102 ..> C_0018187889487049892961
C_0008253466530933028102 ..|> C_0014168768777020386332
C_0002400039489856265359 ..|> C_0014109776010686179387
C_0002400039489856265359 ..> C_0008253466530933028102
C_0002400039489856265359 ..> C_0014168768777020386332
C_0002400039489856265359 ..> C_0006621992980108402466
C_0002655046891830058362 ..|> C_0003559763008402467459
C_0011362165756382129028 ..|> C_0006621992980108402466
C_0001047283704899970072 ..> C_0006621992980108402466
C_0001047283704899970072 o-- C_0011362165756382129028 : -ia
C_0008593943866357657893 ..> C_0005663643532533441261
C_0005663643532533441261 --+ C_0008593943866357657893
C_0000761657787676069264 ..> C_0008690956490312094608
C_0000761657787676069264 ..> C_0005016775666417918015
C_0000761657787676069264 o-- C_0013929042815999091003 : -position
C_0000761657787676069264 o-- C_0008504387209493554632 : -token_string
C_0008593943866357657893 <|-- C_0000761657787676069264
C_0013043275955951264970 ..> C_0005016775666417918015
C_0013043275955951264970 o-- C_0012030889513779630167 : -ref_stack
C_0013043275955951264970 --> C_0000761657787676069264 : -m_lexer_ref
C_0000397706670933694118 ..> C_0005016775666417918015
C_0000397706670933694118 o-- C_0012030889513779630167 : -ref_stack
C_0000397706670933694118 o-- C_0004681541517896863531 : -keep_stack
C_0000397706670933694118 o-- C_0004681541517896863531 : -key_keep_stack
C_0000397706670933694118 --> C_0000761657787676069264 : -m_lexer_ref
C_0006499754387027152172 ..> C_0005016775666417918015
C_0006499754387027152172 ..> C_0009728034640419511916
C_0001132719292669958761 ..> C_0004679976416536424420
C_0001132719292669958761 ..> C_0003909645558821825749
C_0001132719292669958761 ..> C_0006742083008504437096
C_0001132719292669958761 ..> C_0005016775666417918015
C_0001132719292669958761 o-- C_0004916776437443635586 : -input_format
C_0003475126511257489795 ..> C_0005016775666417918015
C_0003475126511257489795 o-- C_0012146279838641130751 : -callback
C_0003475126511257489795 o-- C_0000761657787676069264 : -m_lexer
C_0012222963126016674741 o-- C_0002140325376960758468 : +primitive_iterator
C_0000980121232047552291 ..|> C_0000214903283525339790
C_0016728699670600112306 ..|> C_0000214903283525339790
C_0011974418780336300573 ..|> C_0012222963126016674741
C_0000214903283525339790 ..> C_0000980121232047552291
C_0000214903283525339790 ..> C_0016728699670600112306
C_0000214903283525339790 o-- C_0011974418780336300573 : -m_it
C_0002251148418378457086 <|-- C_0004789242766678850930
C_0008437439238484674351 ..> C_0000419644643929801013
C_0002019726958066453062 o-- C_0002773375681775429756 : -v
C_0003964592163109186449 <|-- C_0002019726958066453062
C_0017758658371578109305 --> C_0015967736637693129920 : -stream
C_0003964592163109186449 <|-- C_0017758658371578109305
C_0003964592163109186449 <|-- C_0017165405306620593919
C_0007832261217543977815 ..> C_0015967736637693129920
C_0007832261217543977815 ..> C_0002773375681775429756
C_0007832261217543977815 o-- C_0013429388319311956826 : -oa
C_0017094469583249189690 ..> C_0014409290388128406787
C_0017094469583249189690 ..> C_0004916776437443635586
C_0017094469583249189690 o-- C_0013429388319311956826 : -oa
C_0012009832844553155212 o-- C_0000235281456725890462 : +w
C_0012009832844553155212 o-- C_0000235281456725890462 : +minus
C_0012009832844553155212 o-- C_0000235281456725890462 : +plus
C_0013791808793373566873 ..|> C_0003964592163109186449
C_0006902772873057495275 ..> C_0005016775666417918015
C_0006902772873057495275 ..> C_0005693795162955912923
C_0006902772873057495275 o-- C_0004637133333771533466 : -o
C_0006902772873057495275 o-- C_0007860569071261935889 : -number_buffer
C_0006902772873057495275 o-- C_0017721794980909395697 : -string_buffer
C_0006902772873057495275 o-- C_0017562012376225285899 : -error_handler
C_0005906445652397385174 ..|> C_0000214903283525339790
C_0007214016775132775361 ..|> C_0013182210107332688975
C_0018190389434112853768 ..> C_0005906445652397385174
C_0018190389434112853768 ..|> C_0004789242766678850930
C_0001796107616732404770 ..> C_0005906445652397385174
C_0001796107616732404770 ..|> C_0013644362285416196689
C_0016177209754425373221 ..|> C_0007832261217543977815
C_0014379797749062527144 ..|> C_0007832261217543977815
C_0006656470767880963391 ..|> C_0013831798626941069238
C_0006657453731276394800 ..|> C_0013831798626941069238
C_0006658441092718339053 ..|> C_0013831798626941069238
C_0006659424056113770462 ..|> C_0013831798626941069238
C_0005323843489718286265 ..|> C_0013644362285416196689
C_0000264343333966433378 ..|> C_0001132719292669958761
C_0008925428260237146618 ..|> C_0017094469583249189690
C_0007619769105314755569 ..> C_0001312628201749139443
C_0007619769105314755569 ..|> C_0003781083434658556212
C_0017172492572927389477 <|-- C_0012103242131726258080
C_0012786878856479145045 <|-- C_0017000360236316607292
C_0014934282435397205555 ..|> C_0013976964827490787623
C_0017245355991805481171 ..> C_0005016775666417918015
C_0017245355991805481171 ..> C_0009728034640419511916
C_0002823094918210814555 ..|> C_0000089368552579575884
C_0000089368552579575884 ..> C_0002823094918210814555
C_0000089368552579575884 o-- C_0006589068466735280940 : -reference_tokens
C_0009942378099335048691 --+ C_0000089368552579575884
C_0006223594193132192555 ..> C_0014934282435397205555
C_0006223594193132192555 --+ C_0000089368552579575884
C_0006223594193132192555 ..|> C_0009942378099335048691
C_0003528135397299469723 ..> C_0009312110998106448030
C_0003528135397299469723 ..> C_0010807373858847751275
C_0003528135397299469723 o-- C_0001821783643868846346 : -m_compare
C_0007136916555410065119 <|-- C_0003528135397299469723
C_0001273001567991732395 ..|> C_0000089368552579575884
C_0014226678465228549040 ..|> C_0000089368552579575884
C_0013976964827490787623 ..> C_0005906445652397385174
C_0013976964827490787623 ..> C_0010649473922595971467
C_0013976964827490787623 ..> C_0001857228505817034097
C_0013976964827490787623 ..> C_0008437439238484674351
C_0013976964827490787623 ..> C_0017562012376225285899
C_0013976964827490787623 ..> C_0011342400754638986813
C_0013976964827490787623 ..> C_0001273001567991732395
C_0013976964827490787623 ..> C_0000089368552579575884
C_0013976964827490787623 ..> C_0018190389434112853768
C_0013976964827490787623 ..> C_0001796107616732404770
C_0013976964827490787623 ..> C_0001047283704899970072
C_0013976964827490787623 ..> C_0006952070549948403239
C_0013976964827490787623 ..> C_0007888167979440707716
C_0013976964827490787623 ..> C_0016177209754425373221
C_0013976964827490787623 ..> C_0007832261217543977815
C_0013976964827490787623 ..> C_0014379797749062527144
C_0013976964827490787623 ..> C_0014409290388128406787
C_0013976964827490787623 ..> C_0004679976416536424420
C_0013976964827490787623 ..> C_0006655624143927430146
C_0013976964827490787623 ..> C_0013831798626941069238
C_0013976964827490787623 ..> C_0006656470767880963391
C_0013976964827490787623 ..> C_0006657453731276394800
C_0013976964827490787623 ..> C_0006658441092718339053
C_0013976964827490787623 ..> C_0006659424056113770462
C_0013976964827490787623 ..> C_0014226678465228549040
C_0013976964827490787623 ..> C_0004916776437443635586
C_0013976964827490787623 o-- C_0003100486735034805177 : -m_data
C_0013976964827490787623 <.. C_0009728034640419511916 : +<<friend>>
C_0017579432404403852004 <|-- C_0013976964827490787623
C_0013070433456217567529 --+ C_0013976964827490787623
C_0013070433456217567529 ..> C_0010649473922595971467
C_0013070433456217567529 --> C_0001949509976487175871 : +object
C_0013070433456217567529 --> C_0011342400754638986813 : +binary
C_0003100486735034805177 --+ C_0013976964827490787623
C_0003100486735034805177 o-- C_0010649473922595971467 : +m_type
C_0003100486735034805177 o-- C_0013070433456217567529 : +m_value
C_0018434997120923591378 ..|> C_0014934282435397205555
C_0011887994287659977427 ..|> C_0013976964827490787623
C_0010139421007835667699 ..> C_0005016775666417918015
C_0010139421007835667699 ..> C_0009469813100910385165
C_0010139421007835667699 ..> C_0005373926085159347220
C_0010139421007835667699 ..> C_0016233900043594275073
C_0010139421007835667699 ..> C_0014724136800666747878
C_0010139421007835667699 ..> C_0004751179184290925068
C_0010139421007835667699 --> C_0002607653258708998320 : -m_ptr
C_0010139421007835667699 --> C_0006262795933763600673 : -m_ptr
C_0016233900043594275073 --+ C_0010139421007835667699
C_0002607653258708998320 ..> C_0016233900043594275073
C_0002607653258708998320 ..> C_0005016775666417918015
C_0002607653258708998320 ..> C_0009469813100910385165
C_0002607653258708998320 ..> C_0005373926085159347220
C_0002607653258708998320 <.. C_0000233996457487908510 : +<<friend>>
C_0002607653258708998320 <.. C_0002906962476794599356 : +<<friend>>
C_0002607653258708998320 <.. C_0010139421007835667699 : +<<friend>>
C_0013571702330955892798 ..> C_0016233900043594275073
C_0013571702330955892798 ..> C_0005016775666417918015
C_0002607653258708998320 <|-- C_0013571702330955892798
C_0009894467231443762452 ..|> C_0013571702330955892798
C_0000233996457487908510 ..> C_0002607653258708998320
C_0009894467231443762452 <|-- C_0000233996457487908510
C_0009704634521652133818 ..|> C_0013571702330955892798
C_0002906962476794599356 ..> C_0002607653258708998320
C_0009704634521652133818 <|-- C_0002906962476794599356
C_0008852292400489330158 ..|> C_0013571702330955892798
C_0008852292400489330158 <|-- C_0005908302963436697905
C_0011964205152211542885 ..> C_0005016775666417918015
C_0011964205152211542885 ..|> C_0013571702330955892798
C_0011101007382934642742 ..> C_0005016775666417918015
C_0011964205152211542885 <|-- C_0011101007382934642742
C_0015467111695170823371 ..> C_0009469813100910385165
C_0015467111695170823371 ..|> C_0013571702330955892798
C_0016793447300566078888 ..> C_0009469813100910385165
C_0016793447300566078888 ..> C_0010139421007835667699
C_0015467111695170823371 <|-- C_0016793447300566078888
C_0014373868160292497274 ..> C_0005373926085159347220
C_0014373868160292497274 ..|> C_0013571702330955892798
C_0001330406478916972840 ..> C_0005373926085159347220
C_0001330406478916972840 ..> C_0010139421007835667699
C_0001330406478916972840 ..> C_0005016775666417918015
C_0014373868160292497274 <|-- C_0001330406478916972840
C_0013927293302149665249 ..> C_0000856530212584457701
C_0013927293302149665249 ..|> C_0013571702330955892798
C_0013927293302149665249 <|-- C_0015367068557833211910
C_0012757214638790164104 o-- C_0006262795933763600673 : +null
C_0012757214638790164104 o-- C_0006262795933763600673 : +t
C_0012757214638790164104 o-- C_0006262795933763600673 : +f
C_0012757214638790164104 o-- C_0005016775666417918015 : +empty_string
C_0012757214638790164104 o-- C_0009469813100910385165 : +empty_vector
C_0012757214638790164104 o-- C_0005373926085159347220 : +empty_map
C_0003944293068452959356 ..> C_0010139421007835667699
C_0003944293068452959356 --> C_0007500688229146332176 : +str
C_0003944293068452959356 --> C_0000465838628272370621 : +str
C_0003944293068452959356 --> C_0005016775666417918015 : +str
C_0003944293068452959356 --> C_0007500688229146332176 : +err
C_0003944293068452959356 --> C_0000465838628272370621 : +err
C_0003944293068452959356 --> C_0005016775666417918015 : +err
C_0003944293068452959356 o-- C_0014724136800666747878 : +strategy
C_0017365092446087783656 ..> C_0012008603185729621422
C_0017365092446087783656 ..> C_0007888167979440707716
C_0017365092446087783656 ..> C_0016534568085049769217
C_0017365092446087783656 ..> C_0005016775666417918015
C_0017365092446087783656 ..> C_0008261390615332338001
C_0003134520543056113127 ..> C_0005016775666417918015
C_0018340852703644302525 ..> C_0012008603185729621422
C_0018340852703644302525 ..> C_0005016775666417918015
C_0018340852703644302525 ..|> C_0003134520543056113127
C_0009889786774661840672 ..> C_0005016775666417918015
C_0009889786774661840672 ..> C_0012008603185729621422
C_0018340852703644302525 <|-- C_0009889786774661840672
C_0018425996662932967070 ..> C_0012008603185729621422
C_0018425996662932967070 ..> C_0003134520543056113127
C_0018425996662932967070 o-- C_0004451472350829367732 : -m_decompressors
C_0005399940248739438556 <|-- C_0005664613277252816988
C_0010893189800050134442 o-- C_0005664613277252816988 : -m_buffer
C_0001087849104505286381 <|-- C_0010893189800050134442
C_0006797771189997432652 ..|> C_0013703873958216970662
C_0015939156022177164375 ..|> C_0013703873958216970662
C_0013703873958216970662 ..> C_0005016775666417918015
C_0013703873958216970662 ..> C_0006797771189997432652
C_0013703873958216970662 ..> C_0015939156022177164375
C_0007691470128151605506 ..> C_0012008603185729621422
C_0007691470128151605506 ..> C_0009449444825786705411
C_0007691470128151605506 ..> C_0006274273039095426313
C_0007691470128151605506 ..> C_0005016775666417918015
C_0012827235786350444092 ..> C_0012008603185729621422
C_0012827235786350444092 ..> C_0009449444825786705411
C_0012827235786350444092 ..> C_0006274273039095426313
C_0012827235786350444092 ..> C_0005016775666417918015
C_0012827235786350444092 --> C_0011887994287659977427 : -m_json
C_0012827235786350444092 --> C_0013976964827490787623 : -m_json
C_0012827235786350444092 o-- C_0008088278790263755080 : -m_data
C_0012827235786350444092 o-- C_0015028344148724283634 : -m_arrayCache
C_0012827235786350444092 o-- C_0002716708038493951524 : -m_arrayPosCache
C_0012827235786350444092 o-- C_0008985444703594249706 : -m_arrayListDataCache
C_0007691470128151605506 <|-- C_0012827235786350444092
C_0010090870188595573577 ..> C_0012008603185729621422
C_0010090870188595573577 ..> C_0009449444825786705411
C_0010090870188595573577 ..> C_0006274273039095426313
C_0010090870188595573577 ..> C_0005016775666417918015
C_0010090870188595573577 o-- C_0012267814618520699680 : -m_data
C_0010090870188595573577 --> C_0010139421007835667699 : -m_json
C_0010090870188595573577 o-- C_0015028344148724283634 : -m_arrayCache
C_0010090870188595573577 o-- C_0002716708038493951524 : -m_arrayPosCache
C_0010090870188595573577 o-- C_0008985444703594249706 : -m_arrayListDataCache
C_0007691470128151605506 <|-- C_0010090870188595573577
C_0014385917776685433885 ..|> C_0010053156768513679430
C_0011586328468560530734 ..> C_0007691470128151605506
C_0011586328468560530734 ..> C_0010053156768513679430
C_0011586328468560530734 o-- C_0017563173931554010774 : -m_data
C_0011586328468560530734 o-- C_0005016775666417918015 : -m_base64Data
C_0011586328468560530734 o-- C_0014385917776685433885 : -m_size
C_0011586328468560530734 o-- C_0014385917776685433885 : -m_position
C_0016510683529811157850 ..> C_0013384205240641505953
C_0016510683529811157850 ..|> C_0010587030707792903691
C_0004320093529030414388 ..> C_0007691470128151605506
C_0004320093529030414388 --> C_0002226086523813738130 : #m_project
C_0004320093529030414388 o-- C_0014197690837021065393 : #m_type
C_0004320093529030414388 o-- C_0005016775666417918015 : #m_name
C_0004320093529030414388 o-- C_0005016775666417918015 : #m_propertyType
C_0018398281171545643768 ..> C_0004320093529030414388
C_0018398281171545643768 ..> C_0007691470128151605506
C_0018398281171545643768 ..> C_0002226086523813738130
C_0018398281171545643768 ..> C_0014197690837021065393
C_0018398281171545643768 ..> C_0007380866656444562374
C_0018398281171545643768 o-- C_0005016775666417918015 : #m_id
C_0018398281171545643768 o-- C_0013596383218836329341 : #m_properties
C_0016549048130367074010 ..> C_0007691470128151605506
C_0016549048130367074010 o-- C_0005016775666417918015 : +text
C_0016549048130367074010 o-- C_0015939156022177164375 : +color
C_0016549048130367074010 o-- C_0005016775666417918015 : +fontFamily
C_0016549048130367074010 o-- C_0015516275354587417455 : +horizontalAlignment
C_0016549048130367074010 o-- C_0015516275354587417455 : +verticalAlignment
C_0011463520910972780534 ..> C_0007691470128151605506
C_0011463520910972780534 ..> C_0010053156768513679430
C_0011463520910972780534 ..> C_0004320093529030414388
C_0011463520910972780534 o-- C_0006712615923895960166 : -m_objectType
C_0011463520910972780534 o-- C_0014385917776685433885 : -m_size
C_0011463520910972780534 o-- C_0005016775666417918015 : -m_name
C_0011463520910972780534 o-- C_0017246210088862330063 : -m_polygon
C_0011463520910972780534 o-- C_0017246210088862330063 : -m_polyline
C_0011463520910972780534 o-- C_0018398281171545643768 : -m_properties
C_0011463520910972780534 o-- C_0005016775666417918015 : -m_template
C_0011463520910972780534 o-- C_0016549048130367074010 : -m_text
C_0011463520910972780534 o-- C_0005016775666417918015 : -m_type
C_0011463520910972780534 o-- C_0014385917776685433885 : -m_position
C_0011463520910972780534 o-- C_0013384205240641505953 : -m_flipFlags
C_0011463520910972780534 --> C_0017557341881008908213 : -m_map
C_0011463520910972780534 --> C_0009502915912803314917 : -m_class
C_0011463520910972780534 --> C_0011227983858338760388 : -m_class
C_0010542150686491040684 ..|> C_0010053156768513679430
C_0012702542272812606522 ..> C_0007332477790878163014
C_0012702542272812606522 ..> C_0010053156768513679430
C_0012702542272812606522 ..> C_0013891178805115232827
C_0012702542272812606522 --> C_0005657317832455838789 : -m_tile
C_0012702542272812606522 o-- C_0014385917776685433885 : -m_posInTileUnits
C_0012702542272812606522 o-- C_0010542150686491040684 : -m_position
C_0004904525272387115810 ..> C_0007691470128151605506
C_0004904525272387115810 ..> C_0010053156768513679430
C_0004904525272387115810 ..> C_0013703873958216970662
C_0004904525272387115810 ..> C_0011586328468560530734
C_0004904525272387115810 ..> C_0011463520910972780534
C_0004904525272387115810 ..> C_0006712615923895960166
C_0004904525272387115810 ..> C_0004320093529030414388
C_0004904525272387115810 ..> C_0012702542272812606522
C_0004904525272387115810 o-- C_0004305701722710513442 : -m_chunks
C_0004904525272387115810 o-- C_0005016775666417918015 : -m_compression
C_0004904525272387115810 o-- C_0016534568085049769217 : -m_data
C_0004904525272387115810 o-- C_0005016775666417918015 : -m_base64Data
C_0004904525272387115810 o-- C_0005016775666417918015 : -m_drawOrder
C_0004904525272387115810 o-- C_0005016775666417918015 : -m_encoding
C_0004904525272387115810 o-- C_0005016775666417918015 : -m_image
C_0004904525272387115810 o-- C_0000543266056686132830 : -m_layers
C_0004904525272387115810 o-- C_0005016775666417918015 : -m_name
C_0004904525272387115810 o-- C_0009770715339548071146 : -m_objects
C_0004904525272387115810 o-- C_0010542150686491040684 : -m_offset
C_0004904525272387115810 o-- C_0018398281171545643768 : -m_properties
C_0004904525272387115810 o-- C_0014385917776685433885 : -m_size
C_0004904525272387115810 o-- C_0015939156022177164375 : -m_transparentColor
C_0004904525272387115810 o-- C_0005016775666417918015 : -m_typeStr
C_0004904525272387115810 o-- C_0014983745689487859410 : -m_type
C_0004904525272387115810 o-- C_0010542150686491040684 : -m_parallax
C_0004904525272387115810 --> C_0005657317832455838789 : -m_tileMap
C_0004904525272387115810 --> C_0010442859391214764574 : -m_tileMap
C_0004904525272387115810 o-- C_0014610946801821189157 : -m_tileData
C_0004904525272387115810 o-- C_0015939156022177164375 : -m_tintColor
C_0004904525272387115810 --> C_0017557341881008908213 : -m_map
C_0004904525272387115810 o-- C_0014717069890754810978 : -m_tileObjects
C_0004904525272387115810 o-- C_0001565176372607874402 : -m_uniqueFlaggedTiles
C_0004904525272387115810 o-- C_0010462613430467277479 : -m_flaggedTiles
C_0004904525272387115810 o-- C_0005016775666417918015 : -m_classType
C_0004904525272387115810 --> C_0009502915912803314917 : -m_class
C_0004904525272387115810 --> C_0011227983858338760388 : -m_class
C_0009560787131994474037 ..> C_0007691470128151605506
C_0013015052646677278465 ..> C_0007691470128151605506
C_0013015052646677278465 ..> C_0013703873958216970662
C_0013015052646677278465 ..> C_0004320093529030414388
C_0013015052646677278465 o-- C_0015939156022177164375 : -m_color
C_0013015052646677278465 o-- C_0005016775666417918015 : -m_name
C_0013015052646677278465 o-- C_0018398281171545643768 : -m_properties
C_0013015052646677278465 --> C_0017557341881008908213 : -m_map
C_0013015052646677278465 o-- C_0005016775666417918015 : -m_classType
C_0013015052646677278465 --> C_0009502915912803314917 : -m_class
C_0013015052646677278465 --> C_0011227983858338760388 : -m_class
C_0003233086023795851738 ..> C_0007691470128151605506
C_0003233086023795851738 o-- C_0016534568085049769217 : -m_wangId
C_0009452330323620423782 ..> C_0007691470128151605506
C_0009452330323620423782 ..> C_0003233086023795851738
C_0009452330323620423782 ..> C_0013015052646677278465
C_0009452330323620423782 ..> C_0004320093529030414388
C_0009452330323620423782 o-- C_0005016775666417918015 : -m_name
C_0009452330323620423782 o-- C_0003945411792173323474 : -m_wangTiles
C_0009452330323620423782 o-- C_0014128386234649786263 : -m_cornerColors
C_0009452330323620423782 o-- C_0014128386234649786263 : -m_edgeColors
C_0009452330323620423782 o-- C_0018398281171545643768 : -m_properties
C_0009452330323620423782 o-- C_0014128386234649786263 : -m_colors
C_0009452330323620423782 --> C_0017557341881008908213 : -m_map
C_0009452330323620423782 o-- C_0005016775666417918015 : -m_classType
C_0009452330323620423782 --> C_0009502915912803314917 : -m_class
C_0009452330323620423782 --> C_0011227983858338760388 : -m_class
C_0008522766561882952554 ..> C_0007691470128151605506
C_0014353425171322453809 ..> C_0008522766561882952554
C_0014353425171322453809 o-- C_0010909541024054101114 : -m_frames
C_0005657317832455838789 ..> C_0007691470128151605506
C_0005657317832455838789 ..> C_0010053156768513679430
C_0005657317832455838789 ..> C_0004320093529030414388
C_0005657317832455838789 ..> C_0007332477790878163014
C_0005657317832455838789 ..> C_0010542150686491040684
C_0005657317832455838789 o-- C_0014353425171322453809 : -m_animation
C_0005657317832455838789 o-- C_0014385917776685433885 : -m_imageSize
C_0005657317832455838789 o-- C_0004904525272387115810 : -m_objectgroup
C_0005657317832455838789 o-- C_0018398281171545643768 : -m_properties
C_0005657317832455838789 o-- C_0017563173931554010774 : -m_terrain
C_0005657317832455838789 o-- C_0005016775666417918015 : -m_type
C_0005657317832455838789 --> C_0011779487683031078083 : -m_tileset
C_0005657317832455838789 --> C_0017557341881008908213 : -m_map
C_0005657317832455838789 o-- C_0013891178805115232827 : -m_drawingRect
C_0005657317832455838789 o-- C_0013891178805115232827 : -m_subRect
C_0005657317832455838789 o-- C_0013384205240641505953 : -m_flipFlags
C_0005657317832455838789 --> C_0009502915912803314917 : -m_class
C_0005657317832455838789 --> C_0011227983858338760388 : -m_class
C_0005657317832455838789 <.. C_0004904525272387115810 : +<<friend>>
C_0000309840976076098146 ..> C_0007691470128151605506
C_0000309840976076098146 ..> C_0004320093529030414388
C_0000309840976076098146 o-- C_0005016775666417918015 : -m_name
C_0000309840976076098146 o-- C_0018398281171545643768 : -m_properties
C_0004607124311145448133 ..> C_0007691470128151605506
C_0004607124311145448133 ..> C_0010053156768513679430
C_0004607124311145448133 o-- C_0005016775666417918015 : -m_orientation
C_0004607124311145448133 o-- C_0014385917776685433885 : -m_size
C_0011779487683031078083 ..> C_0007691470128151605506
C_0011779487683031078083 ..> C_0010053156768513679430
C_0011779487683031078083 ..> C_0013703873958216970662
C_0011779487683031078083 ..> C_0005657317832455838789
C_0011779487683031078083 ..> C_0009452330323620423782
C_0011779487683031078083 ..> C_0000309840976076098146
C_0011779487683031078083 ..> C_0004320093529030414388
C_0011779487683031078083 ..> C_0012008603185729621422
C_0011779487683031078083 ..> C_0002226086523813738130
C_0011779487683031078083 o-- C_0014385917776685433885 : -m_imageSize
C_0011779487683031078083 o-- C_0005016775666417918015 : -m_name
C_0011779487683031078083 o-- C_0014385917776685433885 : -m_tileSize
C_0011779487683031078083 o-- C_0015939156022177164375 : -m_transparentColor
C_0011779487683031078083 o-- C_0005016775666417918015 : -m_typeStr
C_0011779487683031078083 o-- C_0002869522055985961371 : -m_type
C_0011779487683031078083 o-- C_0003526413598904348739 : -m_tiles
C_0011779487683031078083 o-- C_0014266772710739956910 : -m_wangsets
C_0011779487683031078083 o-- C_0018398281171545643768 : -m_properties
C_0011779487683031078083 o-- C_0013450546981812569790 : -m_terrains
C_0011779487683031078083 o-- C_0014385917776685433885 : -m_tileOffset
C_0011779487683031078083 o-- C_0004607124311145448133 : -m_grid
C_0011779487683031078083 o-- C_0017739362352874342011 : -m_objectAlignment
C_0011779487683031078083 --> C_0017557341881008908213 : -m_map
C_0011779487683031078083 o-- C_0009560787131994474037 : -m_transformations
C_0011779487683031078083 o-- C_0001721263548193086372 : -m_tileRenderSize
C_0011779487683031078083 o-- C_0018445499605134518791 : -m_fillMode
C_0011779487683031078083 o-- C_0005016775666417918015 : -m_classType
C_0011779487683031078083 --> C_0009502915912803314917 : -m_class
C_0011779487683031078083 --> C_0011227983858338760388 : -m_class
C_0017557341881008908213 ..> C_0007691470128151605506
C_0017557341881008908213 ..> C_0013703873958216970662
C_0017557341881008908213 ..> C_0010053156768513679430
C_0017557341881008908213 ..> C_0004904525272387115810
C_0017557341881008908213 ..> C_0011779487683031078083
C_0017557341881008908213 ..> C_0005657317832455838789
C_0017557341881008908213 ..> C_0004320093529030414388
C_0017557341881008908213 o-- C_0015939156022177164375 : -m_backgroundColor
C_0017557341881008908213 o-- C_0014385917776685433885 : -m_size
C_0017557341881008908213 o-- C_0000543266056686132830 : -m_layers
C_0017557341881008908213 o-- C_0005016775666417918015 : -m_orientation
C_0017557341881008908213 o-- C_0018398281171545643768 : -m_properties
C_0017557341881008908213 o-- C_0005016775666417918015 : -m_renderOrder
C_0017557341881008908213 o-- C_0005016775666417918015 : -m_staggerAxis
C_0017557341881008908213 o-- C_0005016775666417918015 : -m_staggerIndex
C_0017557341881008908213 o-- C_0005016775666417918015 : -m_tiledVersion
C_0017557341881008908213 o-- C_0014385917776685433885 : -m_tileSize
C_0017557341881008908213 o-- C_0002763124092157057105 : -m_tilesets
C_0017557341881008908213 o-- C_0005016775666417918015 : -m_type
C_0017557341881008908213 o-- C_0010542150686491040684 : -m_parallaxOrigin
C_0017557341881008908213 o-- C_0010174362990264143858 : -m_status
C_0017557341881008908213 o-- C_0005016775666417918015 : -m_statusMessage
C_0017557341881008908213 o-- C_0010442859391214764574 : -m_tileMap
C_0017557341881008908213 --> C_0018425996662932967070 : -m_decompressors
C_0017557341881008908213 --> C_0002226086523813738130 : -m_project
C_0017557341881008908213 o-- C_0018138269842875670596 : -m_flaggedTileMap
C_0017557341881008908213 o-- C_0005016775666417918015 : -m_classType
C_0017557341881008908213 --> C_0009502915912803314917 : -m_class
C_0017557341881008908213 --> C_0011227983858338760388 : -m_class
C_0017557341881008908213 o-- C_0005469546519486081481 : -m_linkedFileParser
C_0017557341881008908213 o-- C_0015028344148724283634 : -m_linkedFiles
C_0017557341881008908213 <.. C_0011463520910972780534 : +<<friend>>
C_0007053002749163351949 ..> C_0007691470128151605506
C_0007053002749163351949 ..> C_0008261390615332338001
C_0007053002749163351949 o-- C_0005016775666417918015 : -m_name
C_0007053002749163351949 o-- C_0006281574694497908084 : -m_values
C_0007053002749163351949 o-- C_0007189842123411762805 : -m_storageType
C_0009641377677345536605 ..> C_0005016775666417918015
C_0009641377677345536605 ..> C_0008261390615332338001
C_0009641377677345536605 --> C_0007053002749163351949 : -m_definition
C_0009502915912803314917 ..> C_0007691470128151605506
C_0009502915912803314917 ..> C_0002226086523813738130
C_0009502915912803314917 ..> C_0004320093529030414388
C_0009502915912803314917 o-- C_0005016775666417918015 : -m_name
C_0009502915912803314917 o-- C_0005016775666417918015 : -m_type
C_0009502915912803314917 o-- C_0018398281171545643768 : -m_members
C_0018055335264037754599 ..> C_0007691470128151605506
C_0018055335264037754599 o-- C_0005016775666417918015 : +fileName
C_0018055335264037754599 o-- C_0014385917776685433885 : +size
C_0018055335264037754599 o-- C_0014385917776685433885 : +position
C_0015149931815032336831 ..> C_0007691470128151605506
C_0015149931815032336831 ..> C_0011785145769868716539
C_0015149931815032336831 ..> C_0012008603185729621422
C_0015149931815032336831 ..> C_0018055335264037754599
C_0015149931815032336831 ..> C_0017557341881008908213
C_0015149931815032336831 o-- C_0006274273039095426313 : -m_json
C_0015149931815032336831 o-- C_0016790823703191945353 : -m_mapData
C_0015149931815032336831 o-- C_0004707751765148010508 : -m_maps
C_0015149931815032336831 o-- C_0005016775666417918015 : -m_type
C_0008829823092709361764 ..> C_0007691470128151605506
C_0008829823092709361764 ..> C_0002226086523813738130
C_0008829823092709361764 ..> C_0007053002749163351949
C_0008829823092709361764 ..> C_0009502915912803314917
C_0008829823092709361764 ..> C_0012008603185729621422
C_0008829823092709361764 o-- C_0003148079142656508199 : -m_enums
C_0008829823092709361764 o-- C_0018000785385595707135 : -m_classes
C_0012729313111428749818 o-- C_0015149931815032336831 : -m_world
C_0012729313111428749818 o-- C_0018123891982449758422 : -m_subFolders
C_0012729313111428749818 o-- C_0006203900530713581334 : -m_files
C_0013922245933573462882 o-- C_0005016775666417918015 : +automappingRulesFile
C_0013922245933573462882 o-- C_0008261390615332338001 : +commands
C_0013922245933573462882 o-- C_0005016775666417918015 : +extensionsPath
C_0013922245933573462882 o-- C_0008261390615332338001 : +folders
C_0013922245933573462882 o-- C_0005016775666417918015 : +objectTypesFile
C_0013922245933573462882 o-- C_0008829823092709361764 : +projectPropertyTypes
C_0013922245933573462882 o-- C_0018123891982449758422 : +folderPaths
C_0002226086523813738130 ..> C_0007691470128151605506
C_0002226086523813738130 ..> C_0012729313111428749818
C_0002226086523813738130 ..> C_0012008603185729621422
C_0002226086523813738130 ..> C_0007053002749163351949
C_0002226086523813738130 ..> C_0009502915912803314917
C_0002226086523813738130 o-- C_0018123891982449758422 : -m_folders
C_0002226086523813738130 o-- C_0013922245933573462882 : -m_data
C_0002226086523813738130 o-- C_0006274273039095426313 : -m_json
C_0005168395140250155706 ..> C_0007888167979440707716
C_0005168395140250155706 ..|> C_0003134520543056113127
C_0011785145769868716539 ..> C_0007691470128151605506
C_0011785145769868716539 ..> C_0009737170254010036179
C_0011785145769868716539 ..> C_0003134520543056113127
C_0011785145769868716539 ..> C_0009094415260374702324
C_0011785145769868716539 ..> C_0017557341881008908213
C_0011785145769868716539 o-- C_0006274273039095426313 : -m_json
C_0011785145769868716539 o-- C_0018425996662932967070 : -m_decompressors
C_0011785145769868716539 --> C_0002226086523813738130 : -m_project
C_0000662366728407457659 ..> C_0011887994287659977427
C_0000662366728407457659 ..> C_0013423887851051587010
C_0000662366728407457659 ..> C_0006704562279895895086
C_0000662366728407457659 ..> C_0005016775666417918015
C_0000662366728407457659 ..> C_0003769135706557701272
C_0000662366728407457659 ..> C_0007466804955052523504
C_0000662366728407457659 --> C_0000548585405462816752 : +font
C_0000662366728407457659 --> C_0013976964827490787623 : +jsonMap
C_0000662366728407457659 --> C_0002829778445906215252 : +textureMap
C_0000662366728407457659 --> C_0002168616371899218417 : +gameMap
C_0005375663403181666835 ..> C_0018022558943774873968
C_0005375663403181666835 o-- C_0012864650144745875435 : +CurrentScene
C_0017980204731109064877 o-- C_0003812822555961955525 : +ex
C_0017980204731109064877 o-- C_0003812822555961955525 : +ey
C_0017979209673085723147 ..> C_0003812822555961955525
C_0017979209673085723147 o-- C_0003812821456450327314 : +ex
C_0017979209673085723147 o-- C_0003812821456450327314 : +ey
C_0017979209673085723147 o-- C_0003812821456450327314 : +ez
C_0009644708234245857598 ..> C_0003812822555961955525
C_0000346652009110516107 o-- C_0003812822555961955525 : +p
C_0000346652009110516107 o-- C_0009644708234245857598 : +q
C_0009333950187171621811 ..> C_0000346652009110516107
C_0009333950187171621811 o-- C_0003812822555961955525 : +localCenter
C_0009333950187171621811 o-- C_0003812822555961955525 : +c0
C_0009333950187171621811 o-- C_0003812822555961955525 : +c
C_0009217690173079532323 ..> C_0003812822555961955525
C_0009217690173079532323 ..> C_0013906766942335327112
C_0009217690173079532323 ..> C_0000346652009110516107
C_0005121733713352763813 --+ C_0018319343159754925143
C_0005884986936425598494 o-- C_0018319343159754925143 : +cf
C_0012733301075816404269 o-- C_0003812822555961955525 : +localPoint
C_0012733301075816404269 o-- C_0005884986936425598494 : +id
C_0005019529119190885233 o-- "2" C_0012733301075816404269 : +points
C_0005019529119190885233 o-- C_0003812822555961955525 : +localNormal
C_0005019529119190885233 o-- C_0003812822555961955525 : +localPoint
C_0005019529119190885233 o-- C_0001114162067435375447 : +type
C_0001114162067435375447 --+ C_0005019529119190885233
C_0016070028742615763547 ..> C_0005019529119190885233
C_0016070028742615763547 ..> C_0000346652009110516107
C_0016070028742615763547 o-- C_0003812822555961955525 : +normal
C_0016070028742615763547 o-- "2" C_0003812822555961955525 : +points
C_0007683782363630523341 o-- C_0003812822555961955525 : +v
C_0007683782363630523341 o-- C_0005884986936425598494 : +id
C_0000196167065570127636 o-- C_0003812822555961955525 : +p1
C_0000196167065570127636 o-- C_0003812822555961955525 : +p2
C_0009056456749649225917 o-- C_0003812822555961955525 : +normal
C_0000226836367160902599 ..> C_0009056456749649225917
C_0000226836367160902599 ..> C_0000196167065570127636
C_0000226836367160902599 o-- C_0003812822555961955525 : +lowerBound
C_0000226836367160902599 o-- C_0003812822555961955525 : +upperBound
C_0010216570007280807313 o-- C_0003812822555961955525 : +center
C_0003000371448486356854 ..> C_0012192574763141661931
C_0003000371448486356854 ..> C_0000346652009110516107
C_0003000371448486356854 ..> C_0003812822555961955525
C_0003000371448486356854 ..> C_0009056456749649225917
C_0003000371448486356854 ..> C_0000196167065570127636
C_0003000371448486356854 ..> C_0000226836367160902599
C_0003000371448486356854 ..> C_0010216570007280807313
C_0003000371448486356854 o-- C_0008723901415890597516 : +m_type
C_0008723901415890597516 --+ C_0003000371448486356854
C_0000478046569299558051 ..> C_0012192574763141661931
C_0000478046569299558051 ..> C_0012257255947819176353
C_0000478046569299558051 ..> C_0000346652009110516107
C_0000478046569299558051 ..> C_0009056456749649225917
C_0000478046569299558051 ..> C_0000196167065570127636
C_0000478046569299558051 ..> C_0000226836367160902599
C_0000478046569299558051 ..> C_0010216570007280807313
C_0000478046569299558051 --> C_0003812822555961955525 : +m_vertices
C_0000478046569299558051 o-- C_0003812822555961955525 : +m_prevVertex
C_0000478046569299558051 o-- C_0003812822555961955525 : +m_nextVertex
C_0003000371448486356854 <|-- C_0000478046569299558051
C_0015990385314185060778 ..> C_0012192574763141661931
C_0015990385314185060778 ..> C_0000346652009110516107
C_0015990385314185060778 ..> C_0009056456749649225917
C_0015990385314185060778 ..> C_0000196167065570127636
C_0015990385314185060778 ..> C_0000226836367160902599
C_0015990385314185060778 ..> C_0010216570007280807313
C_0015990385314185060778 o-- C_0003812822555961955525 : +m_p
C_0003000371448486356854 <|-- C_0015990385314185060778
C_0012257255947819176353 ..> C_0012192574763141661931
C_0012257255947819176353 ..> C_0000346652009110516107
C_0012257255947819176353 ..> C_0009056456749649225917
C_0012257255947819176353 ..> C_0000196167065570127636
C_0012257255947819176353 ..> C_0000226836367160902599
C_0012257255947819176353 ..> C_0010216570007280807313
C_0012257255947819176353 o-- C_0003812822555961955525 : +m_vertex1
C_0012257255947819176353 o-- C_0003812822555961955525 : +m_vertex2
C_0012257255947819176353 o-- C_0003812822555961955525 : +m_vertex0
C_0012257255947819176353 o-- C_0003812822555961955525 : +m_vertex3
C_0003000371448486356854 <|-- C_0012257255947819176353
C_0012772870077689880394 ..> C_0012192574763141661931
C_0012772870077689880394 ..> C_0000346652009110516107
C_0012772870077689880394 ..> C_0009056456749649225917
C_0012772870077689880394 ..> C_0000196167065570127636
C_0012772870077689880394 ..> C_0000226836367160902599
C_0012772870077689880394 ..> C_0010216570007280807313
C_0012772870077689880394 o-- C_0003812822555961955525 : +m_centroid
C_0012772870077689880394 o-- "8" C_0003812822555961955525 : +m_vertices
C_0012772870077689880394 o-- "8" C_0003812822555961955525 : +m_normals
C_0003000371448486356854 <|-- C_0012772870077689880394
C_0003151991409790156045 o-- C_0000226836367160902599 : +aabb
C_0003151991409790156045 o-- C_0016152551541250679088
C_0005262335254171406786 ..> C_0000226836367160902599
C_0005262335254171406786 ..> C_0003812822555961955525
C_0005262335254171406786 ..> C_0000196167065570127636
C_0005262335254171406786 --> C_0003151991409790156045 : -m_nodes
C_0016410286386777299062 ..> C_0000226836367160902599
C_0016410286386777299062 ..> C_0003812822555961955525
C_0016410286386777299062 ..> C_0000196167065570127636
C_0016410286386777299062 o-- C_0005262335254171406786 : -m_tree
C_0016410286386777299062 --> C_0009090918250511209985 : -m_pairBuffer
C_0016410286386777299062 <.. C_0005262335254171406786 : +<<friend>>
C_0010927236939767269964 o-- C_0000762258192194901165 : +type
C_0010927236939767269964 o-- C_0003812822555961955525 : +position
C_0010927236939767269964 o-- C_0003812822555961955525 : +linearVelocity
C_0010927236939767269964 o-- C_0010480396786040081666 : +userData
C_0014431558028158227333 ..> C_0004055581291559354953
C_0014431558028158227333 ..> C_0003000371448486356854
C_0014431558028158227333 ..> C_0010216570007280807313
C_0014431558028158227333 ..> C_0010927236939767269964
C_0014431558028158227333 o-- C_0000762258192194901165 : -m_type
C_0014431558028158227333 o-- C_0000346652009110516107 : -m_xf
C_0014431558028158227333 o-- C_0009333950187171621811 : -m_sweep
C_0014431558028158227333 o-- C_0003812822555961955525 : -m_linearVelocity
C_0014431558028158227333 o-- C_0003812822555961955525 : -m_force
C_0014431558028158227333 --> C_0008094403704418488227 : -m_world
C_0014431558028158227333 --> C_0014431558028158227333 : -m_prev
C_0014431558028158227333 --> C_0014431558028158227333 : -m_next
C_0014431558028158227333 --> C_0004355695568106680866 : -m_fixtureList
C_0014431558028158227333 --> C_0010478572020270491714 : -m_jointList
C_0014431558028158227333 --> C_0001201219153424373758 : -m_contactList
C_0014431558028158227333 o-- C_0010480396786040081666 : -m_userData
C_0014431558028158227333 <.. C_0012646616223244875176 : +<<friend>>
C_0014431558028158227333 <.. C_0018185820375783791187 : +<<friend>>
C_0014431558028158227333 <.. C_0010237597514806006495 : +<<friend>>
C_0014431558028158227333 <.. C_0007901616882537320777 : +<<friend>>
C_0014431558028158227333 <.. C_0013580075295292083604 : +<<friend>>
C_0014431558028158227333 <.. C_0013620335158683631149 : +<<friend>>
C_0014431558028158227333 <.. C_0009412832561601879648 : +<<friend>>
C_0014431558028158227333 <.. C_0008607260685315227662 : +<<friend>>
C_0014431558028158227333 <.. C_0007027711723233256282 : +<<friend>>
C_0014431558028158227333 <.. C_0015238748518123560109 : +<<friend>>
C_0014431558028158227333 <.. C_0014226923019769521758 : +<<friend>>
C_0014431558028158227333 <.. C_0015346116249192293971 : +<<friend>>
C_0014431558028158227333 <.. C_0001039172853185934532 : +<<friend>>
C_0014431558028158227333 <.. C_0016301306221368236258 : +<<friend>>
C_0014431558028158227333 <.. C_0008927090573845685244 : +<<friend>>
C_0014431558028158227333 <.. C_0008094403704418488227 : +<<friend>>
C_0004055581291559354953 --> C_0003000371448486356854 : +shape
C_0004055581291559354953 o-- C_0012712027340285676933 : +userData
C_0004055581291559354953 o-- C_0012857986990123872391 : +filter
C_0009951921249395685630 o-- C_0000226836367160902599 : +aabb
C_0009951921249395685630 --> C_0004355695568106680866 : +fixture
C_0004355695568106680866 ..> C_0008723901415890597516
C_0004355695568106680866 ..> C_0003812822555961955525
C_0004355695568106680866 ..> C_0009056456749649225917
C_0004355695568106680866 ..> C_0000196167065570127636
C_0004355695568106680866 ..> C_0010216570007280807313
C_0004355695568106680866 ..> C_0000226836367160902599
C_0004355695568106680866 ..> C_0012192574763141661931
C_0004355695568106680866 ..> C_0004055581291559354953
C_0004355695568106680866 ..> C_0016410286386777299062
C_0004355695568106680866 ..> C_0000346652009110516107
C_0004355695568106680866 --> C_0004355695568106680866 : #m_next
C_0004355695568106680866 --> C_0014431558028158227333 : #m_body
C_0004355695568106680866 --> C_0003000371448486356854 : #m_shape
C_0004355695568106680866 --> C_0009951921249395685630 : #m_proxies
C_0004355695568106680866 o-- C_0012857986990123872391 : #m_filter
C_0004355695568106680866 o-- C_0012712027340285676933 : #m_userData
C_0004355695568106680866 <.. C_0016301306221368236258 : +<<friend>>
C_0004355695568106680866 <.. C_0015346116249192293971 : +<<friend>>
C_0004355695568106680866 <.. C_0008094403704418488227 : +<<friend>>
C_0004355695568106680866 <.. C_0014431558028158227333 : +<<friend>>
C_0001201219153424373758 --> C_0014431558028158227333 : +other
C_0001201219153424373758 --> C_0015346116249192293971 : +contact
C_0001201219153424373758 --> C_0001201219153424373758 : +prev
C_0001201219153424373758 --> C_0001201219153424373758 : +next
C_0015346116249192293971 ..> C_0016070028742615763547
C_0015346116249192293971 ..> C_0000346652009110516107
C_0015346116249192293971 ..> C_0008723901415890597516
C_0015346116249192293971 ..> C_0012192574763141661931
C_0015346116249192293971 ..> C_0017299758025154478123
C_0015346116249192293971 --> C_0015346116249192293971 : #m_prev
C_0015346116249192293971 --> C_0015346116249192293971 : #m_next
C_0015346116249192293971 o-- C_0001201219153424373758 : #m_nodeA
C_0015346116249192293971 o-- C_0001201219153424373758 : #m_nodeB
C_0015346116249192293971 --> C_0004355695568106680866 : #m_fixtureA
C_0015346116249192293971 --> C_0004355695568106680866 : #m_fixtureB
C_0015346116249192293971 o-- C_0005019529119190885233 : #m_manifold
C_0015346116249192293971 o-- C_0005398248481778728070 : #s_registers
C_0015346116249192293971 <.. C_0004355695568106680866 : +<<friend>>
C_0015346116249192293971 <.. C_0014431558028158227333 : +<<friend>>
C_0015346116249192293971 <.. C_0001039172853185934532 : +<<friend>>
C_0015346116249192293971 <.. C_0008094403704418488227 : +<<friend>>
C_0015346116249192293971 <.. C_0016301306221368236258 : +<<friend>>
C_0005082229002559074426 o-- C_0003812822555961955525 : +c
C_0002144828679823746754 o-- C_0003812822555961955525 : +v
C_0010824632440601676822 o-- C_0003881792231892835462 : +step
C_0010824632440601676822 --> C_0005082229002559074426 : +positions
C_0010824632440601676822 --> C_0002144828679823746754 : +velocities
C_0012192574763141661931 --> C_0004854109374800159858 : -m_chunks
C_0012192574763141661931 --> "14" C_0001134297653230596562 : -m_freeLists
C_0016301306221368236258 o-- C_0016410286386777299062 : +m_broadPhase
C_0016301306221368236258 --> C_0015346116249192293971 : +m_contactList
C_0016301306221368236258 --> C_0005425839511774131293 : +m_contactFilter
C_0016301306221368236258 --> C_0017299758025154478123 : +m_contactListener
C_0016301306221368236258 --> C_0012192574763141661931 : +m_allocator
C_0003390523873142708152 o-- "32" C_0000257776788775351993 : -m_entries
C_0012453610003246706635 ..> C_0008506373310679209255
C_0012453610003246706635 ..> C_0004355695568106680866
C_0005425839511774131293 ..> C_0004355695568106680866
C_0017299758025154478123 ..> C_0015346116249192293971
C_0017299758025154478123 ..> C_0005019529119190885233
C_0017299758025154478123 ..> C_0012302709397322061810
C_0009157555385351992844 ..> C_0004355695568106680866
C_0007312336267933432555 ..> C_0004355695568106680866
C_0007312336267933432555 ..> C_0003812822555961955525
C_0008094403704418488227 ..> C_0005425839511774131293
C_0008094403704418488227 ..> C_0017299758025154478123
C_0008094403704418488227 ..> C_0010927236939767269964
C_0008094403704418488227 ..> C_0007772680418527516662
C_0008094403704418488227 ..> C_0009157555385351992844
C_0008094403704418488227 ..> C_0000226836367160902599
C_0008094403704418488227 ..> C_0007312336267933432555
C_0008094403704418488227 ..> C_0015346116249192293971
C_0008094403704418488227 ..> C_0003881792231892835462
C_0008094403704418488227 ..> C_0000346652009110516107
C_0008094403704418488227 ..> C_0013906766942335327112
C_0008094403704418488227 o-- C_0012192574763141661931 : -m_blockAllocator
C_0008094403704418488227 o-- C_0003390523873142708152 : -m_stackAllocator
C_0008094403704418488227 o-- C_0016301306221368236258 : -m_contactManager
C_0008094403704418488227 --> C_0014431558028158227333 : -m_bodyList
C_0008094403704418488227 --> C_0008506373310679209255 : -m_jointList
C_0008094403704418488227 o-- C_0003812822555961955525 : -m_gravity
C_0008094403704418488227 --> C_0012453610003246706635 : -m_destructionListener
C_0008094403704418488227 --> C_0009217690173079532323 : -m_debugDraw
C_0008094403704418488227 o-- C_0001256548254881086590 : -m_profile
C_0008094403704418488227 <.. C_0002420959758860975505 : +<<friend>>
C_0008094403704418488227 <.. C_0016301306221368236258 : +<<friend>>
C_0008094403704418488227 <.. C_0004355695568106680866 : +<<friend>>
C_0008094403704418488227 <.. C_0014431558028158227333 : +<<friend>>
C_0008765251238376257108 o-- C_0003812822555961955525 : +linear
C_0010478572020270491714 --> C_0014431558028158227333 : +other
C_0010478572020270491714 --> C_0008506373310679209255 : +joint
C_0010478572020270491714 --> C_0010478572020270491714 : +prev
C_0010478572020270491714 --> C_0010478572020270491714 : +next
C_0007772680418527516662 o-- C_0001170358961472525663 : +type
C_0007772680418527516662 o-- C_0002674177373500377244 : +userData
C_0007772680418527516662 --> C_0014431558028158227333 : +bodyA
C_0007772680418527516662 --> C_0014431558028158227333 : +bodyB
C_0008506373310679209255 ..> C_0003812822555961955525
C_0008506373310679209255 ..> C_0009217690173079532323
C_0008506373310679209255 ..> C_0007772680418527516662
C_0008506373310679209255 ..> C_0012192574763141661931
C_0008506373310679209255 ..> C_0010824632440601676822
C_0008506373310679209255 o-- C_0001170358961472525663 : #m_type
C_0008506373310679209255 --> C_0008506373310679209255 : #m_prev
C_0008506373310679209255 --> C_0008506373310679209255 : #m_next
C_0008506373310679209255 o-- C_0010478572020270491714 : #m_edgeA
C_0008506373310679209255 o-- C_0010478572020270491714 : #m_edgeB
C_0008506373310679209255 --> C_0014431558028158227333 : #m_bodyA
C_0008506373310679209255 --> C_0014431558028158227333 : #m_bodyB
C_0008506373310679209255 o-- C_0002674177373500377244 : #m_userData
C_0008506373310679209255 <.. C_0007027711723233256282 : +<<friend>>
C_0008506373310679209255 <.. C_0008927090573845685244 : +<<friend>>
C_0008506373310679209255 <.. C_0014431558028158227333 : +<<friend>>
C_0008506373310679209255 <.. C_0008094403704418488227 : +<<friend>>
C_0018002893780957913621 ..> C_0014431558028158227333
C_0018002893780957913621 o-- C_0003812822555961955525 : +localAnchorA
C_0018002893780957913621 o-- C_0003812822555961955525 : +localAnchorB
C_0007772680418527516662 <|-- C_0018002893780957913621
C_0014226923019769521758 ..> C_0009217690173079532323
C_0014226923019769521758 ..> C_0018002893780957913621
C_0014226923019769521758 ..> C_0010824632440601676822
C_0014226923019769521758 o-- C_0003812822555961955525 : #m_localAnchorA
C_0014226923019769521758 o-- C_0003812822555961955525 : #m_localAnchorB
C_0014226923019769521758 o-- C_0003812822555961955525 : #m_u
C_0014226923019769521758 o-- C_0003812822555961955525 : #m_rA
C_0014226923019769521758 o-- C_0003812822555961955525 : #m_rB
C_0014226923019769521758 o-- C_0003812822555961955525 : #m_localCenterA
C_0014226923019769521758 o-- C_0003812822555961955525 : #m_localCenterB
C_0014226923019769521758 <.. C_0008506373310679209255 : +<<friend>>
C_0008506373310679209255 <|-- C_0014226923019769521758
C_0006761813654598190276 ..> C_0014431558028158227333
C_0006761813654598190276 o-- C_0003812822555961955525 : +localAnchorA
C_0006761813654598190276 o-- C_0003812822555961955525 : +localAnchorB
C_0007772680418527516662 <|-- C_0006761813654598190276
C_0015238748518123560109 ..> C_0006761813654598190276
C_0015238748518123560109 ..> C_0010824632440601676822
C_0015238748518123560109 o-- C_0003812822555961955525 : #m_localAnchorA
C_0015238748518123560109 o-- C_0003812822555961955525 : #m_localAnchorB
C_0015238748518123560109 o-- C_0003812822555961955525 : #m_linearImpulse
C_0015238748518123560109 o-- C_0003812822555961955525 : #m_rA
C_0015238748518123560109 o-- C_0003812822555961955525 : #m_rB
C_0015238748518123560109 o-- C_0003812822555961955525 : #m_localCenterA
C_0015238748518123560109 o-- C_0003812822555961955525 : #m_localCenterB
C_0015238748518123560109 o-- C_0017980204731109064877 : #m_linearMass
C_0015238748518123560109 <.. C_0008506373310679209255 : +<<friend>>
C_0008506373310679209255 <|-- C_0015238748518123560109
C_0006222303576440319089 --> C_0008506373310679209255 : +joint1
C_0006222303576440319089 --> C_0008506373310679209255 : +joint2
C_0007772680418527516662 <|-- C_0006222303576440319089
C_0007027711723233256282 ..> C_0006222303576440319089
C_0007027711723233256282 ..> C_0010824632440601676822
C_0007027711723233256282 --> C_0008506373310679209255 : #m_joint1
C_0007027711723233256282 --> C_0008506373310679209255 : #m_joint2
C_0007027711723233256282 o-- C_0001170358961472525663 : #m_typeA
C_0007027711723233256282 o-- C_0001170358961472525663 : #m_typeB
C_0007027711723233256282 --> C_0014431558028158227333 : #m_bodyC
C_0007027711723233256282 --> C_0014431558028158227333 : #m_bodyD
C_0007027711723233256282 o-- C_0003812822555961955525 : #m_localAnchorA
C_0007027711723233256282 o-- C_0003812822555961955525 : #m_localAnchorB
C_0007027711723233256282 o-- C_0003812822555961955525 : #m_localAnchorC
C_0007027711723233256282 o-- C_0003812822555961955525 : #m_localAnchorD
C_0007027711723233256282 o-- C_0003812822555961955525 : #m_localAxisC
C_0007027711723233256282 o-- C_0003812822555961955525 : #m_localAxisD
C_0007027711723233256282 o-- C_0003812822555961955525 : #m_lcA
C_0007027711723233256282 o-- C_0003812822555961955525 : #m_lcB
C_0007027711723233256282 o-- C_0003812822555961955525 : #m_lcC
C_0007027711723233256282 o-- C_0003812822555961955525 : #m_lcD
C_0007027711723233256282 o-- C_0003812822555961955525 : #m_JvAC
C_0007027711723233256282 o-- C_0003812822555961955525 : #m_JvBD
C_0007027711723233256282 <.. C_0008506373310679209255 : +<<friend>>
C_0008506373310679209255 <|-- C_0007027711723233256282
C_0009893274845145225637 ..> C_0014431558028158227333
C_0009893274845145225637 o-- C_0003812822555961955525 : +linearOffset
C_0007772680418527516662 <|-- C_0009893274845145225637
C_0008607260685315227662 ..> C_0009893274845145225637
C_0008607260685315227662 ..> C_0010824632440601676822
C_0008607260685315227662 o-- C_0003812822555961955525 : #m_linearOffset
C_0008607260685315227662 o-- C_0003812822555961955525 : #m_linearImpulse
C_0008607260685315227662 o-- C_0003812822555961955525 : #m_rA
C_0008607260685315227662 o-- C_0003812822555961955525 : #m_rB
C_0008607260685315227662 o-- C_0003812822555961955525 : #m_localCenterA
C_0008607260685315227662 o-- C_0003812822555961955525 : #m_localCenterB
C_0008607260685315227662 o-- C_0003812822555961955525 : #m_linearError
C_0008607260685315227662 o-- C_0017980204731109064877 : #m_linearMass
C_0008607260685315227662 <.. C_0008506373310679209255 : +<<friend>>
C_0008506373310679209255 <|-- C_0008607260685315227662
C_0011451486969229982775 o-- C_0003812822555961955525 : +target
C_0007772680418527516662 <|-- C_0011451486969229982775
C_0009412832561601879648 ..> C_0011451486969229982775
C_0009412832561601879648 ..> C_0010824632440601676822
C_0009412832561601879648 o-- C_0003812822555961955525 : #m_localAnchorB
C_0009412832561601879648 o-- C_0003812822555961955525 : #m_targetA
C_0009412832561601879648 o-- C_0003812822555961955525 : #m_impulse
C_0009412832561601879648 o-- C_0003812822555961955525 : #m_rB
C_0009412832561601879648 o-- C_0003812822555961955525 : #m_localCenterB
C_0009412832561601879648 o-- C_0017980204731109064877 : #m_mass
C_0009412832561601879648 o-- C_0003812822555961955525 : #m_C
C_0009412832561601879648 <.. C_0008506373310679209255 : +<<friend>>
C_0008506373310679209255 <|-- C_0009412832561601879648
C_0011560069962214892868 ..> C_0014431558028158227333
C_0011560069962214892868 o-- C_0003812822555961955525 : +localAnchorA
C_0011560069962214892868 o-- C_0003812822555961955525 : +localAnchorB
C_0011560069962214892868 o-- C_0003812822555961955525 : +localAxisA
C_0007772680418527516662 <|-- C_0011560069962214892868
C_0013620335158683631149 ..> C_0009217690173079532323
C_0013620335158683631149 ..> C_0011560069962214892868
C_0013620335158683631149 ..> C_0010824632440601676822
C_0013620335158683631149 o-- C_0003812822555961955525 : #m_localAnchorA
C_0013620335158683631149 o-- C_0003812822555961955525 : #m_localAnchorB
C_0013620335158683631149 o-- C_0003812822555961955525 : #m_localXAxisA
C_0013620335158683631149 o-- C_0003812822555961955525 : #m_localYAxisA
C_0013620335158683631149 o-- C_0003812822555961955525 : #m_impulse
C_0013620335158683631149 o-- C_0003812822555961955525 : #m_localCenterA
C_0013620335158683631149 o-- C_0003812822555961955525 : #m_localCenterB
C_0013620335158683631149 o-- C_0003812822555961955525 : #m_axis
C_0013620335158683631149 o-- C_0003812822555961955525 : #m_perp
C_0013620335158683631149 o-- C_0017980204731109064877 : #m_K
C_0013620335158683631149 <.. C_0007027711723233256282 : +<<friend>>
C_0013620335158683631149 <.. C_0008506373310679209255 : +<<friend>>
C_0008506373310679209255 <|-- C_0013620335158683631149
C_0010287607937715979915 ..> C_0014431558028158227333
C_0010287607937715979915 o-- C_0003812822555961955525 : +groundAnchorA
C_0010287607937715979915 o-- C_0003812822555961955525 : +groundAnchorB
C_0010287607937715979915 o-- C_0003812822555961955525 : +localAnchorA
C_0010287607937715979915 o-- C_0003812822555961955525 : +localAnchorB
C_0007772680418527516662 <|-- C_0010287607937715979915
C_0013580075295292083604 ..> C_0010287607937715979915
C_0013580075295292083604 ..> C_0010824632440601676822
C_0013580075295292083604 o-- C_0003812822555961955525 : #m_groundAnchorA
C_0013580075295292083604 o-- C_0003812822555961955525 : #m_groundAnchorB
C_0013580075295292083604 o-- C_0003812822555961955525 : #m_localAnchorA
C_0013580075295292083604 o-- C_0003812822555961955525 : #m_localAnchorB
C_0013580075295292083604 o-- C_0003812822555961955525 : #m_uA
C_0013580075295292083604 o-- C_0003812822555961955525 : #m_uB
C_0013580075295292083604 o-- C_0003812822555961955525 : #m_rA
C_0013580075295292083604 o-- C_0003812822555961955525 : #m_rB
C_0013580075295292083604 o-- C_0003812822555961955525 : #m_localCenterA
C_0013580075295292083604 o-- C_0003812822555961955525 : #m_localCenterB
C_0013580075295292083604 <.. C_0008506373310679209255 : +<<friend>>
C_0008506373310679209255 <|-- C_0013580075295292083604
C_0018445541165296481648 ..> C_0014431558028158227333
C_0018445541165296481648 o-- C_0003812822555961955525 : +localAnchorA
C_0018445541165296481648 o-- C_0003812822555961955525 : +localAnchorB
C_0007772680418527516662 <|-- C_0018445541165296481648
C_0007901616882537320777 ..> C_0009217690173079532323
C_0007901616882537320777 ..> C_0018445541165296481648
C_0007901616882537320777 ..> C_0010824632440601676822
C_0007901616882537320777 o-- C_0003812822555961955525 : #m_localAnchorA
C_0007901616882537320777 o-- C_0003812822555961955525 : #m_localAnchorB
C_0007901616882537320777 o-- C_0003812822555961955525 : #m_impulse
C_0007901616882537320777 o-- C_0003812822555961955525 : #m_rA
C_0007901616882537320777 o-- C_0003812822555961955525 : #m_rB
C_0007901616882537320777 o-- C_0003812822555961955525 : #m_localCenterA
C_0007901616882537320777 o-- C_0003812822555961955525 : #m_localCenterB
C_0007901616882537320777 o-- C_0017980204731109064877 : #m_K
C_0007901616882537320777 <.. C_0007027711723233256282 : +<<friend>>
C_0007901616882537320777 <.. C_0008506373310679209255 : +<<friend>>
C_0008506373310679209255 <|-- C_0007901616882537320777
C_0009518045412094874306 ..> C_0014431558028158227333
C_0009518045412094874306 o-- C_0003812822555961955525 : +localAnchorA
C_0009518045412094874306 o-- C_0003812822555961955525 : +localAnchorB
C_0007772680418527516662 <|-- C_0009518045412094874306
C_0018185820375783791187 ..> C_0009518045412094874306
C_0018185820375783791187 ..> C_0010824632440601676822
C_0018185820375783791187 o-- C_0003812822555961955525 : #m_localAnchorA
C_0018185820375783791187 o-- C_0003812822555961955525 : #m_localAnchorB
C_0018185820375783791187 o-- C_0003812821456450327314 : #m_impulse
C_0018185820375783791187 o-- C_0003812822555961955525 : #m_rA
C_0018185820375783791187 o-- C_0003812822555961955525 : #m_rB
C_0018185820375783791187 o-- C_0003812822555961955525 : #m_localCenterA
C_0018185820375783791187 o-- C_0003812822555961955525 : #m_localCenterB
C_0018185820375783791187 o-- C_0017979209673085723147 : #m_mass
C_0018185820375783791187 <.. C_0008506373310679209255 : +<<friend>>
C_0008506373310679209255 <|-- C_0018185820375783791187
C_0014914544658837520271 ..> C_0014431558028158227333
C_0014914544658837520271 o-- C_0003812822555961955525 : +localAnchorA
C_0014914544658837520271 o-- C_0003812822555961955525 : +localAnchorB
C_0014914544658837520271 o-- C_0003812822555961955525 : +localAxisA
C_0007772680418527516662 <|-- C_0014914544658837520271
C_0012646616223244875176 ..> C_0009217690173079532323
C_0012646616223244875176 ..> C_0014914544658837520271
C_0012646616223244875176 ..> C_0010824632440601676822
C_0012646616223244875176 o-- C_0003812822555961955525 : #m_localAnchorA
C_0012646616223244875176 o-- C_0003812822555961955525 : #m_localAnchorB
C_0012646616223244875176 o-- C_0003812822555961955525 : #m_localXAxisA
C_0012646616223244875176 o-- C_0003812822555961955525 : #m_localYAxisA
C_0012646616223244875176 o-- C_0003812822555961955525 : #m_localCenterA
C_0012646616223244875176 o-- C_0003812822555961955525 : #m_localCenterB
C_0012646616223244875176 o-- C_0003812822555961955525 : #m_ax
C_0012646616223244875176 o-- C_0003812822555961955525 : #m_ay
C_0012646616223244875176 <.. C_0008506373310679209255 : +<<friend>>
C_0008506373310679209255 <|-- C_0012646616223244875176
C_0006909731403235205092 ..> C_0003812822555961955525
C_0006909731403235205092 o-- C_0007466804955052523504 : +vec
C_0012548033600169640822 o-- C_0006402511982670141126 : #type
C_0012548033600169640822 o-- C_0006704562279895895086 : #frameRec
C_0012548033600169640822 --> C_0012393382550867685456 : #character
C_0012548033600169640822 <.. C_0005782261330376251499 : +<<friend>>
C_0012548033600169640822 <.. C_0012393382550867685456 : +<<friend>>
C_0010250684592540512228 ..> C_0007466804955052523504
C_0010250684592540512228 ..> C_0008094403704418488227
C_0010250684592540512228 ..> C_0006704562279895895086
C_0010250684592540512228 o-- C_0006909731403235205092 : #pos
C_0010250684592540512228 o-- C_0006909731403235205092 : #size
C_0010250684592540512228 --> C_0014431558028158227333 : #body
C_0001882606194604426063 ..> C_0010250684592540512228
C_0001882606194604426063 --> C_0003110547038768958146 : +block
C_0000560225802660094972 ..> C_0003110547038768958146
C_0000560225802660094972 ..> C_0010250684592540512228
C_0001882606194604426063 <|-- C_0000560225802660094972
C_0012677234202004775687 ..> C_0003110547038768958146
C_0012677234202004775687 ..> C_0010250684592540512228
C_0001882606194604426063 <|-- C_0012677234202004775687
C_0003193797538920665864 ..> C_0003110547038768958146
C_0003193797538920665864 ..> C_0010250684592540512228
C_0001882606194604426063 <|-- C_0003193797538920665864
C_0017272402168460687079 ..> C_0005016775666417918015
C_0017272402168460687079 ..> C_0003110547038768958146
C_0017272402168460687079 ..> C_0001882606194604426063
C_0009102704025497708236 o-- C_0007466804955052523504 : +tileSize
C_0003110547038768958146 ..> C_0005657317832455838789
C_0003110547038768958146 ..> C_0009102704025497708236
C_0003110547038768958146 ..> C_0011463520910972780534
C_0003110547038768958146 ..> C_0008094403704418488227
C_0003110547038768958146 o-- C_0002829778445906215252 : +texture
C_0003110547038768958146 o-- C_0006704562279895895086 : +srcRec
C_0003110547038768958146 o-- C_0013423887851051587010 : +srcRecs
C_0003110547038768958146 o-- C_0018022979192911490072 : +contains
C_0003110547038768958146 --> C_0001882606194604426063 : +behavior
C_0003110547038768958146 --> C_0017426112952059578590 : +behavior
C_0003110547038768958146 o-- C_0003769135706557701272 : +color
C_0003110547038768958146 o-- C_0007466804955052523504 : #velocity
C_0003110547038768958146 o-- C_0007466804955052523504 : #prePos
C_0003110547038768958146 <.. C_0003193797538920665864 : +<<friend>>
C_0003110547038768958146 <.. C_0012677234202004775687 : +<<friend>>
C_0003110547038768958146 <.. C_0000560225802660094972 : +<<friend>>
C_0010250684592540512228 <|-- C_0003110547038768958146
C_0017555429528309779676 o-- C_0017410715323976282491 : +StartEndFrames
C_0017555429528309779676 o-- C_0013423887851051587010 : +frameRecs
C_0017555429528309779676 o-- C_0002829778445906215252 : +texture
C_0012393382550867685456 ..> C_0007466804955052523504
C_0012393382550867685456 ..> C_0008094403704418488227
C_0012393382550867685456 o-- C_0015149798974371151882 : #direction
C_0012393382550867685456 o-- C_0017555429528309779676 : #sprite
C_0012393382550867685456 --> C_0012548033600169640822 : #currentState
C_0012393382550867685456 <.. C_0005782261330376251499 : +<<friend>>
C_0012393382550867685456 <.. C_0005150484036262905120 : +<<friend>>
C_0012393382550867685456 <.. C_0015368617464429780937 : +<<friend>>
C_0012393382550867685456 <.. C_0014523565626478600485 : +<<friend>>
C_0012393382550867685456 <.. C_0011776670766822878227 : +<<friend>>
C_0012393382550867685456 <.. C_0009099990544903911046 : +<<friend>>
C_0012393382550867685456 <.. C_0018162179630194765227 : +<<friend>>
C_0012393382550867685456 <.. C_0005966396136563637617 : +<<friend>>
C_0012393382550867685456 <.. C_0016860933356000833950 : +<<friend>>
C_0012393382550867685456 <.. C_0006435734344524867019 : +<<friend>>
C_0012393382550867685456 <.. C_0000829623880221797522 : +<<friend>>
C_0012393382550867685456 <.. C_0012548033600169640822 : +<<friend>>
C_0010250684592540512228 <|-- C_0012393382550867685456
C_0008995846133488459179 ..> C_0012864650144745875435
C_0008995846133488459179 o-- C_0015823698952731764909 : -SceneButtons
C_0008995846133488459179 o-- C_0002079836018563423199 : -scenes
C_0008995846133488459179 o-- C_0018022558943774873968 : -camera
C_0008995846133488459179 --> C_0005375663403181666835 : +currentSceneObject
C_0008995846133488459179 --> C_0007466804955052523504 : +mouseWorldPos

'Generated with clang-uml, version 0.6.2
'LLVM version clang version 20.1.7 (https://github.com/llvm/llvm-project.git 6146a88f60492b520a36f8f8f3231e15f3cc6082)
@enduml
