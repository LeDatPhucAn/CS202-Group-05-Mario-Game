@startuml Audio
class SFXGroup<EnumType> {
    - stateSFX: unordered_map<EnumType, Sound>
    - path: string
    - volume: float
    
    + loadSingle(type: EnumType, filename: string): void
    + load(sfxFileMap: unordered_map<EnumType, string>): void
    + play(type: EnumType, minPitch: float, maxPitch: float): void
    + clear(): void
}

struct MusicData {
    + track: Music
    + loop: bool
    + elapsed: float
    + paused: bool
}

class MusicGroup<EnumType> {
    - volume: float
	- bgmTracks: unordered_map<EnumType, MusicData>
	- path: string
	- currentlyPlaying: optional<EnumType>
	- previousMusic: optional<EnumType>

	+ loadSingle(type: EnumType, filename: string, loop: bool): void
	+ load(musicFileMap: unordered_map<EnumType, pair<string, bool>>): void
	+ playFromStart(type: EnumType): void
	+ play(type: EnumType): void
	+ playTemporary(type: EnumType): void
	+ stop(): void
	+ pause(): void
	+ pauseTrack(type: EnumType): void
	+ resume(): void
	+ resumeTrack(type: EnumType): void
	+ update(): void
	+ clear(): void
	+ setVolume(newVolume: float): void
}

MusicData --* MusicGroup


@enduml